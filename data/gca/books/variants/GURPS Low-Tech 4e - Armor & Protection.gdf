Encoding=UTF-8
Version=3
//  The version information above MUST be the first line of the data file
Program=5.0.168
Description=2022 November 29. NOTE: Using Low-Tech is INCOMPATIBLE with also using Basic Set low-tech armors. _
			This file will remove the low-tech armors from the Basic Set. _
			If you are using armor from Low Tech, you should change to the "Humanoid - Low Tech" body in the _
			Body & Locations tab of the Protection dialog. If you make that change for the All Unassigned Items _
			loadout, then future loadouts that you create will default to that body. _
			This data file contains information taken from the appendix of the GURPS Low-Tech sourcebook. _
			GURPS Low-Tech is Copyright © 2010 by Steve Jackson Games Incorporated. All rights reserved.
Incomplete=Yes
Requires="GURPS Basic Set 4th Ed.--Characters.gdf"
LoadAfter="GURPS Martial Arts 4e.gdf"
Taboo="GURPS Low-Tech 4e.gdf"

[AUTHOR]
*******************************************************************************************************\[START]
// 
//  GURPS® Character Assistant Data File
//  Created: November 29, 2022
//  Requires GCA v4 or later!
// 
//  This data file contains information taken from the appendix of the GURPS Low-Tech sourcebook.
//  GURPS Low-Tech is Copyright © 2010 by Steve Jackson Games Incorporated.
//  All rights reserved.
// 
*******************************************************************************************************************
// 
//  Eric B. Smith		- Data File Coordinator, Build Your Own Armor
//  Emily Smirle (Bruno) - Everything else
// 
//  Questions or concerns? Please drop a message in the GURPS Character Assistant forum at:
//  http://forums.sjgames.com
// 
*******************************************************************************************************************
//  
//   GURPS is a registered trademark of Steve Jackson Games Incorporated, used with GCA by permission of Steve Jackson
//   Games. All rights reserved.
//  
//   The GURPS game is Copyright © 1986, 1987, 1988, 1989, 1991, 1992, 1993, 1994, 1996, 1998, 1999, 2002, 2004, 2008
//   by Steve Jackson Games Incorporated. This product includes copyrighted material from the GURPS game, which is 
//   used by permission of Steve Jackson Games Incorporated. All rights reserved by Steve Jackson Games Incorporated.
//  
********************************************************************************************************\[STOP]

[BODY]
*******************************************************************************************************\[START]

<Humanoid - Low Tech>
description(Stock humanoid. B 552, but updated per Low Tech to include basic 'chest' and 'abdomen' parts of Torso; also adjusted for the incompatible-with-Basic Set 'groin' coverage.)
name(Vitals), group(Skin, All, Full Suit, Body, Torso, Vitals)
name(Head), group(Head, Skin, All)
name(Eyes), group(Head, Eyes, All), display(-1), expanded(-1), posx(149), posy(53)
name(Left Eye), group(Head, Left Eye, Eyes, All)
name(Right Eye), group(Head, Right Eye, Eyes, All)
name(Neck), group(Neck, Body, Full Suit, Skin, All), display(-1), expanded(-1), posx(137), posy(114)
name(Skull), group(Head, Skull, Skin, All), basedr(2), dr(2), display(-1), expanded(-1), posx(339), posy(43)
name(Face), group(Head, Face, Skin, All), display(-1), expanded(-1), posx(309), posy(104)
name(Torso), group(Torso, Body, Full Suit, Skin, All)
name(Chest), group(All, Skin, Full Suit, Body, Torso, Chest), display(-1), expanded(-1), posx(220), posy(193),width(100),height(50)
name(Abdomen), group(All, Skin, Full Suit, Body, Torso, Abdomen), display(-1), expanded(-1), posx(220), posy(305),width(100),height(50)
name(Groin), group(All, Skin, Full Suit, Body, Torso, Abdomen, Groin), display(-1), expanded(-1), posx(393), posy(474)
name(Arms), group(Arms, Limbs, Full Suit, Skin, All), display(-1), expanded(-1), posx(403), posy(246)
name(Left Arm), group(Left Arm, Arms, Limbs, Full Suit, Skin, All)
name(Right Arm), group(Right Arm, Arms, Limbs, Full Suit, Skin, All)
name(Hands), group(Hands, Full Suit, Skin, All), display(-1), expanded(-1), posx(420), posy(310)
name(Left Hand), group(Left Hand, Hands, Full Suit, Skin, All)
name(Right Hand), group(Right Hand, Hands, Full Suit, Skin, All)
name(Legs), group(Legs, Limbs, Full Suit, Skin, All), display(-1), expanded(-1), posx(351), posy(587)
name(Left Leg), group(Left Leg, Legs, Limbs, Full Suit, Skin, All)
name(Right Leg), group(Right Leg, Legs, Limbs, Full Suit, Skin, All)
name(Feet), group(Feet, Full Suit, Skin, All), display(-1), expanded(-1), posx(349), posy(662)
name(Left Foot), group(Left Foot, Feet, Full Suit, Skin, All)
name(Right Foot), group(Right Foot, Feet, Full Suit, Skin, All)
name(Body), group(Body, Full Suit, Skin, All)
name(Full Suit), group(Full Suit, Skin, All)
name(Skin), group(Skin, All)
name(All), group(All)

<Humanoid Expanded - Low Tech>
description(Stock humanoid with greatly expanded location detail; updated per Low Tech.)
name(Vitals), group(All, Skin, Full Suit, Body, Torso, Vitals), display(-1), posx(21), posy(362)
name(Eyes), group(All, Head, Face, Eyes), display(-1), expanded(-1), posx(149), posy(53)
name(Right Eye), group(All, Head, Face, Eyes, Right Eye)
name(Left Eye), group(All, Head, Face, Eyes, Left Eye)
name(All), group(All)
name(Skin), group(Skin, All)
name(Full Suit), group(All, Skin, Full Suit)
name(Body), group(All, Skin, Full Suit, Body)
name(Limbs), group(All, Skin, Full Suit, Limbs)
name(Head), group(All, Skin, Head)
name(Skull), group(All, Skin, Head, Skull), basedr(2), display(-1), expanded(-1), posx(339), posy(43)
name(Face), group(All, Skin, Head, Face), display(-1), expanded(-1), posx(309), posy(104)
name(Neck), group(All, Skin, Full Suit, Body, Neck), display(-1), expanded(-1), posx(137), posy(114)
name(Torso), group(All, Skin, Full Suit, Body, Torso)
name(Chest), group(All, Skin, Full Suit, Body, Torso, Chest), display(-1), expanded(-1), posx(220), posy(193),width(100),height(50)
name(Abdomen), group(All, Skin, Full Suit, Body, Torso, Abdomen), display(-1), expanded(-1), posx(220), posy(305),width(100),height(50)
name(Groin), group(All, Skin, Full Suit, Body, Torso, Abdomen, Groin), display(-1), expanded(-1), posx(393), posy(474)
name(Arms), group(All, Skin, Full Suit, Limbs, Arms), display(-1), expanded(-1), posx(403), posy(246)
name(Shoulders), group(All, Skin, Full Suit, Limbs, Arms, Shoulders)
name(Upper Arms), group(All, Skin, Full Suit, Limbs, Arms, Upper Arms)
name(Elbows), group(All, Skin, Full Suit, Limbs, Arms, Elbows)
name(Forearms), group(All, Skin, Full Suit, Limbs, Arms, Forearms)
name(Hands), group(All, Skin, Full Suit, Hands), display(-1), expanded(-1), posx(420), posy(310)
name(Legs), group(All, Skin, Full Suit, Limbs, Legs), display(-1), expanded(-1), posx(351), posy(587)
name(Thighs), group(All, Skin, Full Suit, Limbs, Legs, Thighs)
name(Knees), group(All, Skin, Full Suit, Limbs, Legs, Knees)
name(Shins), group(All, Skin, Full Suit, Limbs, Legs, Shins)
name(Feet), group(All, Skin, Full Suit, Feet), display(-1), expanded(-1), posx(349), posy(662)
name(Right Arm), group(All, Skin, Full Suit, Limbs, Arms, Right Arm)
name(Right Shoulder), group(All, Skin, Full Suit, Limbs, Arms, Shoulders, Right Arm, Right Shoulder)
name(Right Upper Arm), group(All, Skin, Full Suit, Limbs, Arms, Upper Arms, Right Arm, Right Upper Arm)
name(Right Elbow), group(All, Skin, Full Suit, Limbs, Arms, Elbows, Right Arm, Right Elbow)
name(Right Forearm), group(All, Skin, Full Suit, Limbs, Arms, Forearms, Right Arm, Right Forearm)
name(Right Hand), group(All, Skin, Full Suit, Hands, Right Hand)
name(Right Leg), group(All, Skin, Full Suit, Limbs, Legs, Right Leg)
name(Right Thigh), group(All, Skin, Full Suit, Limbs, Legs, Thighs, Right Leg, Right Thigh)
name(Right Knee), group(All, Skin, Full Suit, Limbs, Legs, Knees, Right Leg, Right Knee)
name(Right Shin), group(All, Skin, Full Suit, Limbs, Legs, Shins, Right Leg, Right Shin)
name(Right Foot), group(All, Skin, Full Suit, Feet, Right Foot)
name(Left Arm), group(All, Skin, Full Suit, Limbs, Arms, Left Arm)
name(Left Shoulder), group(All, Skin, Full Suit, Limbs, Arms, Shoulders, Left Arm, Left Shoulder)
name(Left Upper Arm), group(All, Skin, Full Suit, Limbs, Arms, Upper Arms, Left Arm, Left Upper Arm)
name(Left Elbow), group(All, Skin, Full Suit, Limbs, Arms, Elbows, Left Arm, Left Elbow)
name(Left Forearm), group(All, Skin, Full Suit, Limbs, Arms, Forearms, Left Arm, Left Forearm)
name(Left Hand), group(All, Skin, Full Suit, Hands, Left Hand)
name(Left Leg), group(All, Skin, Full Suit, Limbs, Legs, Left Leg)
name(Left Thigh), group(All, Skin, Full Suit, Limbs, Legs, Thighs, Left Leg, Left Thigh)
name(Left Knee), group(All, Skin, Full Suit, Limbs, Legs, Knees, Left Leg, Left Knee)
name(Left Shin), group(All, Skin, Full Suit, Limbs, Legs, Shins, Left Leg, Left Shin)
name(Left Foot), group(All, Skin, Full Suit, Feet, Left Foot)
name(Front Neck), group(All, Skin, Full Suit, Body, Neck, Front Neck)
name(Front Torso), group(All, Skin, Full Suit, Body, Torso, Front Torso)
name(Front Chest), group(All, Skin, Full Suit, Body, Torso, Chest, Front Torso, Front Chest)
name(Front Abdomen), group(All, Skin, Full Suit, Body, Torso, Abdomen, Front Torso, Front Abdomen)
name(Front Groin), group(All, Skin, Full Suit, Body, Torso, Abdomen, Groin, Front Groin)
name(Front Arms), group(All, Skin, Full Suit, Limbs, Arms, Front Arms)
name(Front Shoulders), group(All, Skin, Full Suit, Limbs, Arms, Shoulders, Front Arms, Front Shoulders)
name(Front Upper Arms), group(All, Skin, Full Suit, Limbs, Arms, Upper Arms, Front Arms, Front Upper Arms)
name(Front Elbows), group(All, Skin, Full Suit, Limbs, Arms, Elbows, Front Arms, Front Elbows)
name(Front Forearms), group(All, Skin, Full Suit, Limbs, Arms, Forearms, Front Arms, Front Forearms)
name(Front Hands), group(All, Skin, Full Suit, Hands, Front Hands)
name(Front Legs), group(All, Skin, Full Suit, Limbs, Legs, Front Legs)
name(Front Thighs), group(All, Skin, Full Suit, Limbs, Legs, Thighs, Front Legs, Front Thighs)
name(Front Knees), group(All, Skin, Full Suit, Limbs, Legs, Knees, Front Legs, Front Knees)
name(Front Shins), group(All, Skin, Full Suit, Limbs, Legs, Shins, Front Legs, Front Shins)
name(Top Feet), group(All, Skin, Full Suit, Feet, Front Feet)
name(Front Right Arm), group(All, Skin, Full Suit, Limbs, Arms, Right Arm, Front Arms, Front Right Arm)
name(Front Right Shoulder), group(All, Skin, Full Suit, Limbs, Arms, Shoulders, Right Arm, Right Shoulder, Front Arms, Front Shoulders, Front Right Arm, Front Right Shoulder)
name(Front Right Upper Arm), group(All, Skin, Full Suit, Limbs, Arms, Upper Arms, Right Arm, Right Upper Arm, Front Arms, Front Upper Arms, Front Right Arm, Front Right Upper Arm)
name(Front Right Elbow), group(All, Skin, Full Suit, Limbs, Arms, Elbows, Right Arm, Right Elbow, Front Arms, Front Elbows, Front Right Arm, Front Right Elbow)
name(Front Right Forearm), group(All, Skin, Full Suit, Limbs, Arms, Forearms, Right Arm, Right Forearm, Front Arms, Front Forearms, Front Right Arm, Front Right Forearm)
name(Front Right Hand), group(All, Skin, Full Suit, Hands, Right Hand, Front Hands, Front Right Hand)
name(Front Right Leg), group(All, Skin, Full Suit, Limbs, Legs, Right Leg, Front Legs, Front Right Leg)
name(Front Right Thigh), group(All, Skin, Full Suit, Limbs, Legs, Thighs, Right Leg, Right Thigh, Front Legs, Front Thighs, Front Right Leg, Front Right Thigh)
name(Front Right Knee), group(All, Skin, Full Suit, Limbs, Legs, Knees, Right Leg, Right Knee, Front Legs, Front Knees, Front Right Leg, Front Right Knee)
name(Front Right Shin), group(All, Skin, Full Suit, Limbs, Legs, Shins, Right Leg, Right Shin, Front Legs, Front Shins, Front Right Leg, Front Right Shin)
name(Top Right Foot), group(All, Skin, Full Suit, Feet, Right Foot, Front Feet, Front Right Foot)
name(Front Left Arm), group(All, Skin, Full Suit, Limbs, Arms, Left Arm, Front Arms, Front Left Arm)
name(Front Left Shoulder), group(All, Skin, Full Suit, Limbs, Arms, Shoulders, Left Arm, Left Shoulder, Front Arms, Front Shoulders, Front Left Arm, Front Left Shoulder)
name(Front Left Upper Arm), group(All, Skin, Full Suit, Limbs, Arms, Upper Arms, Left Arm, Left Upper Arm, Front Arms, Front Upper Arms, Front Left Arm, Front Left Upper Arm)
name(Front Left Elbow), group(All, Skin, Full Suit, Limbs, Arms, Elbows, Left Arm, Left Elbow, Front Arms, Front Elbows, Front Left Arm, Front Left Elbow)
name(Front Left Forearm), group(All, Skin, Full Suit, Limbs, Arms, Forearms, Left Arm, Left Forearm, Front Arms, Front Forearms, Front Left Arm, Front Left Forearm)
name(Front Left Hand), group(All, Skin, Full Suit, Hands, Left Hand, Front Hands, Front Left Hand)
name(Front Left Leg), group(All, Skin, Full Suit, Limbs, Legs, Left Leg, Front Legs, Front Left Leg)
name(Front Left Thigh), group(All, Skin, Full Suit, Limbs, Legs, Thighs, Left Leg, Left Thigh, Front Legs, Front Thighs, Front Left Leg, Front Left Thigh)
name(Front Left Knee), group(All, Skin, Full Suit, Limbs, Legs, Knees, Left Leg, Left Knee, Front Legs, Front Knees, Front Left Leg, Front Left Knee)
name(Front Left Shin), group(All, Skin, Full Suit, Limbs, Legs, Shins, Left Leg, Left Shin, Front Legs, Front Shins, Front Left Leg, Front Left Shin)
name(Top Left Foot), group(All, Skin, Full Suit, Feet, Left Foot, Front Feet, Front Left Foot)
name(Back Neck), group(All, Skin, Full Suit, Body, Neck, Back Neck)
name(Back Torso), group(All, Skin, Full Suit, Body, Torso, Back Torso)
name(Back Chest), group(All, Skin, Full Suit, Body, Torso, Chest, Back Torso, Back Chest)
name(Back Abdomen), group(All, Skin, Full Suit, Body, Torso, Abdomen, Back Torso, Back Abdomen)
name(Back Groin), group(All, Skin, Full Suit, Body, Torso, Abdomen, Groin, Back Groin)
name(Back Arms), group(All, Skin, Full Suit, Limbs, Arms, Back Arms)
name(Back Shoulders), group(All, Skin, Full Suit, Limbs, Arms, Shoulders, Back Arms, Back Shoulders)
name(Back Upper Arms), group(All, Skin, Full Suit, Limbs, Arms, Upper Arms, Back Arms, Back Upper Arms)
name(Back Elbows), group(All, Skin, Full Suit, Limbs, Arms, Elbows, Back Arms, Back Elbows)
name(Back Forearms), group(All, Skin, Full Suit, Limbs, Arms, Forearms, Back Arms, Back Forearms)
name(Back Hands), group(All, Skin, Full Suit, Hands, Back Hands)
name(Back Legs), group(All, Skin, Full Suit, Limbs, Legs, Back Legs)
name(Back Thighs), group(All, Skin, Full Suit, Limbs, Legs, Thighs, Back Legs, Back Thighs)
name(Back Knees), group(All, Skin, Full Suit, Limbs, Legs, Knees, Back Legs, Back Knees)
name(Back Shins), group(All, Skin, Full Suit, Limbs, Legs, Shins, Back Legs, Back Shins)
name(Bottom Feet), group(All, Skin, Full Suit, Feet, Back Feet)
name(Back Right Arm), group(All, Skin, Full Suit, Limbs, Arms, Right Arm, Back Arms, Back Right Arm)
name(Back Right Shoulder), group(All, Skin, Full Suit, Limbs, Arms, Shoulders, Right Arm, Right Shoulder, Back Arms, Back Shoulders, Back Right Arm, Back Right Shoulder)
name(Back Right Upper Arm), group(All, Skin, Full Suit, Limbs, Arms, Upper Arms, Right Arm, Right Upper Arm, Back Arms, Back Upper Arms, Back Right Arm, Back Right Upper Arm)
name(Back Right Elbow), group(All, Skin, Full Suit, Limbs, Arms, Elbows, Right Arm, Right Elbow, Back Arms, Back Elbows, Back Right Arm, Back Right Elbow)
name(Back Right Forearm), group(All, Skin, Full Suit, Limbs, Arms, Forearms, Right Arm, Right Forearm, Back Arms, Back Forearms, Back Right Arm, Back Right Forearm)
name(Back Right Hand), group(All, Skin, Full Suit, Hands, Right Hand, Back Hands, Back Right Hand)
name(Back Right Leg), group(All, Skin, Full Suit, Limbs, Legs, Right Leg, Back Legs, Back Right Leg)
name(Back Right Thigh), group(All, Skin, Full Suit, Limbs, Legs, Thighs, Right Leg, Right Thigh, Back Legs, Back Thighs, Back Right Leg, Back Right Thigh)
name(Back Right Knee), group(All, Skin, Full Suit, Limbs, Legs, Knees, Right Leg, Right Knee, Back Legs, Back Knees, Back Right Leg, Back Right Knee)
name(Back Right Shin), group(All, Skin, Full Suit, Limbs, Legs, Shins, Right Leg, Right Shin, Back Legs, Back Shins, Back Right Leg, Back Right Shin)
name(Bottom Right Foot), group(All, Skin, Full Suit, Feet, Right Foot, Back Feet, Back Right Foot)
name(Back Left Arm), group(All, Skin, Full Suit, Limbs, Arms, Left Arm, Back Arms, Back Left Arm)
name(Back Left Shoulder), group(All, Skin, Full Suit, Limbs, Arms, Shoulders, Left Arm, Left Shoulder, Back Arms, Back Shoulders, Back Left Arm, Back Left Shoulder)
name(Back Left Upper Arm), group(All, Skin, Full Suit, Limbs, Arms, Upper Arms, Left Arm, Left Upper Arm, Back Arms, Back Upper Arms, Back Left Arm, Back Left Upper Arm)
name(Back Left Elbow), group(All, Skin, Full Suit, Limbs, Arms, Elbows, Left Arm, Left Elbow, Back Arms, Back Elbows, Back Left Arm, Back Left Elbow)
name(Back Left Forearm), group(All, Skin, Full Suit, Limbs, Arms, Forearms, Left Arm, Left Forearm, Back Arms, Back Forearms, Back Left Arm, Back Left Forearm)
name(Back Left Hand), group(All, Skin, Full Suit, Hands, Left Hand, Back Hands, Back Left Hand)
name(Back Left Leg), group(All, Skin, Full Suit, Limbs, Legs, Left Leg, Back Legs, Back Left Leg)
name(Back Left Thigh), group(All, Skin, Full Suit, Limbs, Legs, Thighs, Left Leg, Left Thigh, Back Legs, Back Thighs, Back Left Leg, Back Left Thigh)
name(Back Left Knee), group(All, Skin, Full Suit, Limbs, Legs, Knees, Left Leg, Left Knee, Back Legs, Back Knees, Back Left Leg, Back Left Knee)
name(Back Left Shin), group(All, Skin, Full Suit, Limbs, Legs, Shins, Left Leg, Left Shin, Back Legs, Back Shins, Back Left Leg, Back Left Shin)
name(Bottom Left Foot), group(All, Skin, Full Suit, Feet, Left Foot, Back Feet, Back Left Foot)

********************************************************************************************************\[STOP]
[HitTables]
*******************************************************************************************************\[START]
<Humanoid - Low Tech>
description(Stock humanoid table updated per Low-Tech. Some of the hit penalties here are worked out with Kromm because they're not specifically noted in the book.)
roll(-), location(Eye), penalty(-9)
roll(3-5), location(Head), penalty(-5), notes(1)
roll(3-4), location(• Skull), penalty(-7)
roll(5), location(• Face), penalty(-5)
roll(17-18), location(Neck), penalty(-5)
roll(9-11), location(Torso), penalty(0), notes(2,3)
roll(9-10), location(• Chest), penalty(0), notes(2)
roll(11), location(• Abdomen), penalty(-1), notes(2,4)
roll(-), location(• • Groin), penalty(-3)
roll(8,12), location(Arms), penalty(-2), notes(5)
roll(-), location(• Shoulders), penalty(-4), notes(6)
roll(-), location(• Upper Arms), penalty(-4), notes(7)
roll(-), location(• Elbows), penalty(-5), notes(8)
roll(-), location(• Forearms), penalty(-4), notes(9)
roll(15), location(Hands), penalty(-4)
roll(6-7, 13-14), location(Legs), penalty(-2), notes(10)
roll(-), location(• Thighs), penalty(-3), notes(11)
roll(-), location(• Knees), penalty(-5), notes(8)
roll(-), location(• Shins), penalty(-4), notes(9)
roll(16), location(Feet), penalty(-4)
roll(-), location(Vitals), penalty(-3)
note(1), text(Includes skull and face.)
note(2), text(Roll 1d; on 1, the vitals are hit.)
note(3), text(Includes chest and abdomen; see Low-Tech pp. 102-103.)
note(4), text(Includes groin.)
note(5), text(Include shoulders, upper arms, elbows, and forearms, but not hands.)
note(6), text(Roll 1d; on 6, the armor is hit.*)
note(7), text(Roll 1d; on 5, the armor is hit.*)
note(8), text(Roll 1d; on 4, the armor is hit.*)
note(9), text(Roll 1d; on 1-3, the armor is hit.*)
note(10), text(Include thighs, knees, and shins, but not feet.)
note(11), text(Roll 1d; on 5-6, the armor is hit.*)
note(*), text(Partial limb armor provides only partial protection! Roll 1d once to see whether an attack hits armor. For an arm: (1-3) forearm; (4) elbow; (5) upper arm; (6) shoulder. For a leg: (1-3) shin; (4) knee; (5-6) thigh.)


********************************************************************************************************\[STOP]
[EQUIPMENT]
*******************************************************************************************************\[START]

// We have to delete all the Basic Set low-tech armors because they're not compatible with Low Tech's armor system.

#Delete EQ:Cloth Armor Suit
#Delete EQ:Leather Armor Suit
#Delete EQ:Light Scale Suit
#Delete EQ:Mail Suit
#Delete EQ:Steel Laminate Suit
#Delete EQ:Plate Suit
#Delete EQ:Fur Loincloth
#Delete EQ:Fur Tunic
#Delete EQ:Bronze Breastplate
#Delete EQ:Bronze Corselet
#Delete EQ:Cloth Armor
#Delete EQ:Leather Armor
#Delete EQ:Leather Jacket
#Delete EQ:Light Scale Armor
#Delete EQ:Lorica Segmentata
#Delete EQ:Mail Hauberk
#Delete EQ:Mail Shirt
#Delete EQ:Scale Armor
#Delete EQ:Double Mail Hauberk
#Delete EQ:Heavy Steel Corselet
#Delete EQ:Steel Breastplate
#Delete EQ:Steel Corselet
#Delete EQ:Steel Laminate Plate
#Delete EQ:Buff Leather Coat
#Delete EQ:Bronze Armbands
#Delete EQ:Bronze Greaves
#Delete EQ:Cloth Sleeves
#Delete EQ:Heavy Leather Leggings
#Delete EQ:Heavy Leather Sleeves
#Delete EQ:Leather Leggings
#Delete EQ:Leather Pants
#Delete EQ:Studded Leather Skirt
#Delete EQ:Mail Leggings
#Delete EQ:Mail Sleeves
#Delete EQ:Scale Leggings
#Delete EQ:Scale Sleeves
#Delete EQ:Heavy Plate Arms
#Delete EQ:Heavy Plate Legs
#Delete EQ:Plate Arms
#Delete EQ:Plate Legs
#Delete EQ:Bronze Helmet
#Delete EQ:Bronze Pot-Helmet
#Delete EQ:Cloth Cap
#Delete EQ:Leather Cap
#Delete EQ:Leather Helm
#Delete EQ:Legionary Helmet
#Delete EQ:Mail Coif
#Delete EQ:Barrel Helm
#Delete EQ:Face Mask
#Delete EQ:Greathelm
#Delete EQ:Pot-Helm
#Delete EQ:Cloth Gloves
#Delete EQ:Leather Gloves
#Delete EQ:Gauntlets
#Delete EQ:Heavy Gauntlets
#Delete EQ:Sollerets

*******************************************************************************************************************
//  SHIELDS ******************************************************************************
*******************************************************************************************************************
//  #ReplaceTags in "EQ:Light Buckler" with "mode(Bash|Rush), damage(thr|slam), reach(1|1)"
//  #ReplaceTags in "EQ:Small Buckler" with "mode(Bash|Rush), damage(thr|slam), reach(1|1)"
//  #ReplaceTags in "EQ:Medium Buckler" with "mode(Bash|Rush), damage(thr|slam+1), reach(1|1)"
//  #ReplaceTags in "EQ:Light Iron Buckler" with "mode(Bash|Rush), damage(thr|slam), reach(1|1)"
//  #ReplaceTags in "EQ:Small Iron Buckler" with "mode(Bash|Rush), damage(thr|slam), reach(1|1)"
//  #ReplaceTags in "EQ:Medium Iron Buckler" with "mode(Bash|Rush), damage(thr|slam+1), reach(1|1)"
//  #ReplaceTags in "EQ:Light Plastic Buckler" with "mode(Bash|Rush), damage(thr|slam), reach(1|1)"
//  #ReplaceTags in "EQ:Small Plastic Buckler" with "mode(Bash|Rush), damage(thr|slam), reach(1|1)"
//  #ReplaceTags in "EQ:Medium Plastic Buckler" with "mode(Bash|Rush), damage(thr|slam+1), reach(1|1)"
//  #ReplaceTags in "EQ:Force Buckler" with "mode(Bash|Rush), damage(thr|slam+2), reach(1|1)"

<_Armor - Shields, Low-Tech, Low-Tech - Armor, Low-Tech - Armor - Shields>
"Parrying Buckler", basecost(50), baseweight(8), techlvl(0), db(1), dr(4), hp(16), page(LT 116),_
	itemnotes(_
				{+1 to Block.}_
			),_
	mods(Equipment, Shield), description(TL:0 DB:1 Dam:thr cr Reach:1 Parry:No ST:--  DR:4 Cover DR:8 HP:16 Skill:Shield(Buckler) Notes:[1], +1 to Block.), notes([1]), conditional(+1 to ST:Block when "blocking with this shield"),_
	newmode(Bash, skillused(ST:DX-4, SK:Shield (Shield)-2, SK:Shield (Force)-2, SK:Shield (Buckler)), damage(thr), damtype(cr), reach(1), parry(No), minst()),_
	newmode(Rush, skillused(ST:DX-4, SK:Shield (Shield)-2, SK:Shield (Force)-2, SK:Shield (Buckler)), damage(slam), damtype(cr), reach(1), parry(No), minst())
"Homeric Buckler, Medium", basecost(100), baseweight(16), techlvl(1), db(2), dr(4), hp(21), page(LT 116),_
	mods(Equipment, Shield), description(TL:1 DB:2 Dam:thr cr Reach:1 Parry:No ST:--  DR:4 Cover DR:9 HP:21 Skill:Shield(Buckler)),_
	newmode(Bash, skillused(ST:DX-4, SK:Shield (Shield)-2, SK:Shield (Force)-2, SK:Shield (Buckler)), damage(thr), damtype(cr), reach(1), parry(No), minst()),_
	newmode(Rush, skillused(ST:DX-4, SK:Shield (Shield)-2, SK:Shield (Force)-2, SK:Shield (Buckler)), damage(slam+1), damtype(cr), reach(1), parry(No), minst())
"Homeric Buckler, Large", basecost(150), baseweight(20), techlvl(1), db(3), dr(4), hp(22), page(LT 116),_
	mods(Equipment, Shield), description(TL:1 DB:3 Dam:thr cr Reach:1 Parry:No ST:--  DR:4 Cover DR:9 HP:22 Skill:Shield(Buckler)),_
	newmode(Bash, skillused(ST:DX-4, SK:Shield (Shield)-2, SK:Shield (Force)-2, SK:Shield (Buckler)), damage(thr), damtype(cr), reach(1), parry(No), minst()),_
	newmode(Rush, skillused(ST:DX-4, SK:Shield (Shield)-2, SK:Shield (Force)-2, SK:Shield (Buckler)), damage(slam+2), damtype(cr), reach(1), parry(No), minst())
"Dueling Buckler", basecost(25), baseweight(2), techlvl(3), db(0), dr(4), hp(11), page(LT 116),_
	itemnotes(_
				{+1 to Block.}_
			),_
	mods(Equipment, Shield), description(TL:3 DB:0 Dam:thr cr Reach:1 Parry:No ST:--  DR:4 Cover DR:6 HP:11 Skill:Shield(Buckler) Notes:[1], +1 to Block.), notes([1]), conditional(+1 to ST:Block when "blocking with this shield"),_
	newmode(Bash, skillused(ST:DX-4, SK:Shield (Shield)-2, SK:Shield (Force)-2, SK:Shield (Buckler)), damage(thr), damtype(cr), reach(1), parry(No), minst()),_
	newmode(Rush, skillused(ST:DX-4, SK:Shield (Shield)-2, SK:Shield (Force)-2, SK:Shield (Buckler)), damage(slam-1), damtype(cr), reach(1), parry(No), minst())

"Mycenaean Shield", basecost(58), baseweight(9), techlvl(0), db(3), dr(2), hp(17), page(LT 116),_
	itemnotes(_
				{Controlled solely by neck strap; see Shield Grips (Low-Tech, p. 113-114).}_
			),_
	mods(Equipment, Shield), skillused(DX-4, Shield-2, Shield (Guige)),description(TL:0 DB:3 Dam:thr cr Reach:1 Parry:No ST:--  DR:2 Cover DR:6 HP:17 Skill:Shield(Guige) Notes:[3], Controlled solely by neck strap; may not Bash or Rush and -3 to Block, see Shield Grips (p. 113-114).), notes([3])

"Small Shield, Light", basecost(30), baseweight(3), techlvl(0), db(1), dr(2), hp(12), page(LT 116),_
	mods(Equipment, Shield), description(TL:0 DB:1 Dam:thr cr Reach:1 Parry:No ST:--  DR:2 Cover DR:5 HP:12 Skill:Shield(Shield)),_
	newmode(Bash, skillused(ST:DX-4, SK:Shield (Buckler)-2, SK:Shield (Force)-2, SK:Shield (Shield)), damage(thr), damtype(cr), reach(1), parry(No), minst()),_
	newmode(Rush, skillused(ST:DX-4, SK:Shield (Buckler)-2, SK:Shield (Force)-2, SK:Shield (Shield)), damage(slam+1), damtype(cr), reach(1), parry(No), minst())
"Comanche Shield", basecost(100), baseweight(16), techlvl(0), db(2), dr(4), hp(21), page(LT 116),_
	itemnotes(_
				{Fragile (Combustible); see p. B136.}_
			),_
	mods(Equipment, Shield), description(TL:0 DB:2 Dam:thr cr Reach:1 Parry:No ST:--  DR:4 Cover DR:9 HP:21 Skill:Shield(Shield) Notes:[2], Fragile (Combustible); see p. B136.), notes([2]),_
	newmode(Bash, skillused(ST:DX-4, SK:Shield (Buckler)-2, SK:Shield (Force)-2, SK:Shield (Shield)), damage(thr), damtype(cr), reach(1), parry(No), minst()),_
	newmode(Rush, skillused(ST:DX-4, SK:Shield (Buckler)-2, SK:Shield (Force)-2, SK:Shield (Shield)), damage(slam+2), damtype(cr), reach(1), parry(No), minst())
"Medium Shield, Light", basecost(45), baseweight(7), techlvl(0), db(2), dr(2), hp(16), page(LT 116),_
	mods(Equipment, Shield), description(TL:0 DB:2 Dam:thr cr Reach:1 Parry:No ST:--  DR:2 Cover DR:6 HP:16 Skill:Shield(Shield)),_
	newmode(Bash, skillused(ST:DX-4, SK:Shield (Buckler)-2, SK:Shield (Force)-2, SK:Shield (Shield)), damage(thr), damtype(cr), reach(1), parry(No), minst()),_
	newmode(Rush, skillused(ST:DX-4, SK:Shield (Buckler)-2, SK:Shield (Force)-2, SK:Shield (Shield)), damage(slam+2), damtype(cr), reach(1), parry(No), minst())
"Large Shield, Light", basecost(68), baseweight(10), techlvl(0), db(3), dr(2), hp(18), page(LT 116),_
	mods(Equipment, Shield), description(TL:0 DB:3 Dam:thr cr Reach:1 Parry:No ST:--  DR:2 Cover DR:6 HP:18 Skill:Shield(Shield)),_
	newmode(Bash, skillused(ST:DX-4, SK:Shield (Buckler)-2, SK:Shield (Force)-2, SK:Shield (Shield)), damage(thr), damtype(cr), reach(1), parry(No), minst()),_
	newmode(Rush, skillused(ST:DX-4, SK:Shield (Buckler)-2, SK:Shield (Force)-2, SK:Shield (Shield)), damage(slam+3), damtype(cr), reach(1), parry(No), minst())
"Small Shield, Heavy", basecost(40), baseweight(6), techlvl(1), db(1), dr(4), hp(15), page(LT 116),_
	mods(Equipment, Shield), description(TL:1 DB:1 Dam:thr cr Reach:1 Parry:No ST:--  DR:4 Cover DR:7 HP:15 Skill:Shield(Shield)),_
	newmode(Bash, skillused(ST:DX-4, SK:Shield (Buckler)-2, SK:Shield (Force)-2, SK:Shield (Shield)), damage(thr), damtype(cr), reach(1), parry(No), minst()),_
	newmode(Rush, skillused(ST:DX-4, SK:Shield (Buckler)-2, SK:Shield (Force)-2, SK:Shield (Shield)), damage(slam+1), damtype(cr), reach(1), parry(No), minst())
"Medium Shield, Heavy", basecost(60), baseweight(14), techlvl(1), db(2), dr(4), hp(20), page(LT 116),_
	mods(Equipment, Shield), description(TL:1 DB:2 Dam:thr cr Reach:1 Parry:No ST:--  DR:4 Cover DR:9 HP:20 Skill:Shield(Shield)),_
	newmode(Bash, skillused(ST:DX-4, SK:Shield (Buckler)-2, SK:Shield (Force)-2, SK:Shield (Shield)), damage(thr), damtype(cr), reach(1), parry(No), minst()),_
	newmode(Rush, skillused(ST:DX-4, SK:Shield (Buckler)-2, SK:Shield (Force)-2, SK:Shield (Shield)), damage(slam+2), damtype(cr), reach(1), parry(No), minst())
"Large Shield, Heavy", basecost(90), baseweight(20), techlvl(1), db(3), dr(4), hp(22), page(LT 116),_
	mods(Equipment, Shield), description(TL:1 DB:3 Dam:thr cr Reach:1 Parry:No ST:--  DR:4 Cover DR:9 HP:22 Skill:Shield(Shield)),_
	newmode(Bash, skillused(ST:DX-4, SK:Shield (Buckler)-2, SK:Shield (Force)-2, SK:Shield (Shield)), damage(thr), damtype(cr), reach(1), parry(No), minst()),_
	newmode(Rush, skillused(ST:DX-4, SK:Shield (Buckler)-2, SK:Shield (Force)-2, SK:Shield (Shield)), damage(slam+3), damtype(cr), reach(1), parry(No), minst())
"Argive Shield", basecost(120), baseweight(15), techlvl(2), db(2), dr(4), hp(20), page(LT 116),_
	itemnotes(_
				{+1 DB when used in shield wall.}_
			),_
	mods(Equipment, Shield), description(TL:2 DB:2 Dam:thr cr Reach:1 Parry:No ST:--  DR:4 Cover DR:9 HP:20 Skill:Shield(Shield) Notes:[4], +1 DB when used in shield wall.), notes([4]),_
	newmode(Bash, skillused(ST:DX-4, SK:Shield (Buckler)-2, SK:Shield (Force)-2, SK:Shield (Shield)), damage(thr), damtype(cr), reach(1), parry(No), minst()),_
	newmode(Rush, skillused(ST:DX-4, SK:Shield (Buckler)-2, SK:Shield (Force)-2, SK:Shield (Shield)), damage(slam+2), damtype(cr), reach(1), parry(No), minst())
"Roman Scutum, Medium", basecost(140), baseweight(16), techlvl(2), db(2), dr(4), hp(25), page(LT 116),_
	itemnotes(_
				{Laminated wood (+20% HP).}_
			),_
	mods(Equipment, Shield), description(TL:2 DB:2 Dam:thr cr Reach:1 Parry:No ST:--  DR:4 Cover DR:10 HP:25 Skill:Shield(Shield) Notes:[5], Laminated wood (+20% HP).), notes([5]),_
	newmode(Bash, skillused(ST:DX-4, SK:Shield (Buckler)-2, SK:Shield (Force)-2, SK:Shield (Shield)), damage(thr), damtype(cr), reach(1), parry(No), minst()),_
	newmode(Rush, skillused(ST:DX-4, SK:Shield (Buckler)-2, SK:Shield (Force)-2, SK:Shield (Shield)), damage(slam+2), damtype(cr), reach(1), parry(No), minst())
"Roman Scutum, Large", basecost(200), baseweight(22), techlvl(2), db(3), dr(4), hp(27), page(LT 116),_
	itemnotes(_
				{Laminated wood (+20% HP).}_
			),_
	mods(Equipment, Shield), description(TL:2 DB:3 Dam:thr cr Reach:1 Parry:No ST:--  DR:4 Cover DR:10 HP:27 Skill:Shield(Shield) Notes:[5], Laminated wood (+20% HP).), notes([5]),_
	newmode(Bash, skillused(ST:DX-4, SK:Shield (Buckler)-2, SK:Shield (Force)-2, SK:Shield (Shield)), damage(thr), damtype(cr), reach(1), parry(No), minst()),_
	newmode(Rush, skillused(ST:DX-4, SK:Shield (Buckler)-2, SK:Shield (Force)-2, SK:Shield (Shield)), damage(slam+3), damtype(cr), reach(1), parry(No), minst())
"Heater Shield", basecost(75), baseweight(13), techlvl(3), db(2), dr(4), hp(19), page(LT 116),_
	mods(Equipment, Shield), description(TL:3 DB:2 Dam:thr cr Reach:1 Parry:No ST:--  DR:4 Cover DR:8 HP:19 Skill:Shield(Shield)),_
	newmode(Bash, skillused(ST:DX-4, SK:Shield (Buckler)-2, SK:Shield (Force)-2, SK:Shield (Shield)), damage(thr), damtype(cr), reach(1), parry(No), minst()),_
	newmode(Rush, skillused(ST:DX-4, SK:Shield (Buckler)-2, SK:Shield (Force)-2, SK:Shield (Shield)), damage(slam+2), damtype(cr), reach(1), parry(No), minst())
"Kite Shield", basecost(120), baseweight(18), techlvl(3), db(3), dr(4), hp(21), page(LT 116),_
	mods(Equipment, Shield), description(TL:3 DB:3 Dam:thr cr Reach:1 Parry:No ST:--  DR:4 Cover DR:9 HP:21 Skill:Shield(Shield)),_
	newmode(Bash, skillused(ST:DX-4, SK:Shield (Buckler)-2, SK:Shield (Force)-2, SK:Shield (Shield)), damage(thr), damtype(cr), reach(1), parry(No), minst()),_
	newmode(Rush, skillused(ST:DX-4, SK:Shield (Buckler)-2, SK:Shield (Force)-2, SK:Shield (Shield)), damage(slam+3), damtype(cr), reach(1), parry(No), minst())
"Dueling Long Shield", basecost(200), baseweight(16), techlvl(4), db(3), dr(4), hp(21), page(LT 116),_
	itemnotes(_
				{Attacks at Shield-2 or Staff-4.}_
			),_
	mods(Equipment, Shield), description(TL:4 DB:3 Dam:thr cr Reach:1 Parry:No ST:--  DR:4 Cover DR:9 HP:21 Skill:Shield(Shield) Notes:[6], Attacks at Shield-2 or Staff-4.), notes([6]),_
	newmode(Bash, skillused(ST:DX-4-2, SK:Shield (Buckler)-2-2, SK:Shield (Force)-2-2, SK:Shield (Shield)-2, SK:Staff-4), damage(thr), damtype(cr), reach(1), parry(No), minst()),_
	newmode(Rush, skillused(ST:DX-4-2, SK:Shield (Buckler)-2-2, SK:Shield (Force)-2-2, SK:Shield (Shield)-2, SK:Staff-4), damage(slam+3), damtype(cr), reach(1), parry(No), minst())


<_Armor, _Armor - Low-Tech, Low-Tech - Armor, Low-Tech - Armor - Helmets - Build Your Own>
*******************************************************************************************************************

"Cane (%Helmet_Alt1List%)", gives(%Paddingalt2list%), page(LT100-110),_
	displayname(Cane (Build-your-own Helmet)),_
	drnotes(_
				{Combustible. If DR is penetrated by burning damage, it can catch fire. See Making Things Burn (p. B433); treat the armor material as resistant.}_
			),_
	location(%Helmet_AliasList%%options1alias%%optionsalt1List%), coverage(%Helmet_Alt2List%%Options1alias%%OptionsAlt3List%),_
	mods(Equipment, Helmet, Armor, Armor - Organic, Armor - Cloth, Armor - Textile),_
	techlvl(0), notes([1]), don(30), dr(1), displaycost(35/base), displayweight(12/base), basecost(@round(35 * me::basecostmultiplier,2)), baseweight(@round(12 * me::basecostmultiplier,2)),_
	description(TL:0 DR:1 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[1] Combustible. If DR is penetrated by burning damage, it can catch fire. See Making Things Burn (p. B433); treat the armor material as resistant.),_
	paddingcost(%Helmet_Cost1%), basecostmultiplier(_
		(_
			%Helmet_Cost1% _
		) *  _
		(_
		%optionsCost5% + %optionsCost4% + %optionsCost3% + %optionsCost2% + %optionsCost1% + 100_
		)/10000 _
	),_
	x(_
		#ChoiceList(_
				name(Helmet_),_
				title(Armor Location List),_
				text(Please select the type of helmet:),_
				picksallowed(1),_
				method(bynumber),_
					list(_
						"Pot Helm - Skull"=20,_
						"Bascinet - Skull, Face (1/6)"=25,_
						"Full Helm - Skull, Face"=30,_
						"Coif - Skull, Face (1/6), Neck"=30,_
						"Coif, Long - Skull, Face (1/6), Neck, Shoulders"=45,_
						"Greathelm - Skull, Face, Neck"=35_
						),_
						comment(// output to locations() tag ^^^^ Face coverage (1/6) needs to be removed/reset to just Face if coverage() tag is instituted),_
				aliaslist(_
						"Skull",_
						"Skull, Face (1/6)",_
						"Head",_
						"Skull, Face (1/6), Neck",_
						"Skull, Face (1/6), Neck, Shoulders",_
						"Head, Neck"_
						),_
						comment(// output to nameext() tag),_
				alt1list(_
						"Pot Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Bascinet%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Full Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Long Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Greathelm%options1alias%%optionsalt2list%%Paddingalt1list%"_
						),_
						comment(// output to coverage() tag),_
				alt2list(_
						"1",_
						"1, 1/6",_
						"1",_
						"1, 1/6, 1",_
						"1, 1/6, 1, 1",_
						"1, 1"_
						)_
				),_
		#ChoiceList(_
				name(options),_
				title(Helmet Options List),_
				text(Please select any helmet options. A Visor replaces Cheek Guards, Spectacle, and Nasal options. A Bascinet already covers the ears, precluding the Wide Cheek Guards option.),_
				picksallowed(atleast 1, upto 4),_
				method(bynumber),_
					list(_
						"_No Options"=0,_
						"Nasal (1/6)"=5,_
						"Brim (1/6*)"=15,_
						"Cheek Guard (2/6)"=10,_
						"Cheek Guard, Wide (3/6)"=15,_
						"Spectacle (1/6)"=5,_
						"Visor (5/6)"=25_
						),_
						comment(// output to nameext() tag),_
				aliaslist(_
						"",_
						", ",_
						", ",_
						", ",_
						", ",_
						", ",_
						", "_
						),_
						comment(// output to locations() tag ^^^^ Face coverage (1/6) needs to be removed/reset to just Face if coverage() tag is instituted),_
				alt1list(_
						"",_
						"Face (1/6)",_
						"Face (1/6*)",_
						"Face (2/6)",_
						"Face (3/6)",_
						"Face (1/6)",_
						"Face (5/6)"_
						),_
						comment(// output to nameext() tag),_
					alt2list(_
						"",_
						"Nasal",_
						"Brim",_
						"Cheek Guard",_
						"Wide Cheek Guard",_
						"Spectacle",_
						"Visor"_
						),_
						comment(// output to coverage() tag),_
				alt3list(_
						"",_
						"1/6",_
						"1/6*",_
						"2/6",_
						"3/6",_
						"1/6",_
						"5/6"_
						)_
				),_
		#ChoiceList(_
					name(Padding),_
					title(Helmet Padding),_
					default(2),_
					text(Does this helmet include Padding:),_
					picksallowed(1),_
					method(bynumber),_
						list(_
						"No Padding",_
						"Padding"_
						),_
						comment(// unused?),_
						aliaslist(_
						"",_
						""_
						),_
						comment(// output to nameext() tag),_
						alt1list(_
						"",_
						", Padding"_
						),_
						comment(// output to gives() tag),_
						alt2list(_
						"",_
						{=+@if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1) to me::dr listas "Padding", +@round(50 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::basecost listas "",  + @round(6 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::baseweight listas ""}_
						)_
				)_
	), noresync(yes)

"Cloth, Padded (%Helmet_Alt1List%)", gives(%Paddingalt2list%), page(LT100-110),_
	displayname(Cloth, Padded (Build-your-own Helmet)),_
	location(%Helmet_AliasList%%options1alias%%optionsalt1List%), coverage(%Helmet_Alt2List%%Options1alias%%OptionsAlt3List%),_
	mods(Equipment, Helmet, Armor, Armor - Organic, Armor - Cloth, Armor - Textile),_
	techlvl(0), notes(), don(15), dr(1*), displaycost(50/base), displayweight(6/base), basecost(@round(50 * me::basecostmultiplier,2)), baseweight(@round(6 * me::basecostmultiplier,2)),_
	description(TL:0 DR:1* Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%),_
	paddingcost(%Helmet_Cost1%), basecostmultiplier(_
		(_
			%Helmet_Cost1% _
		) *  _
		(_
		%optionsCost5% + %optionsCost4% + %optionsCost3% + %optionsCost2% + %optionsCost1% + 100_
		)/10000 _
	),_
	x(_
		#ChoiceList(_
				name(Helmet_),_
				title(Armor Location List),_
				text(Please select the type of helmet:),_
				picksallowed(1),_
				method(bynumber),_
					list(_
						"Pot Helm - Skull"=20,_
						"Bascinet - Skull, Face (1/6)"=25,_
						"Full Helm - Skull, Face"=30,_
						"Coif - Skull, Face (1/6), Neck"=30,_
						"Coif, Long - Skull, Face (1/6), Neck, Shoulders"=45,_
						"Greathelm - Skull, Face, Neck"=35_
						),_
						comment(// output to location() tag),_
				aliaslist(_
						"Skull",_
						"Skull, Face (1/6)",_
						"Head",_
						"Skull, Face (1/6), Neck",_
						"Skull, Face (1/6), Neck, Shoulders",_
						"Head, Neck"_
						),_
						comment(// output to nameext() tag),_
				alt1list(_
						"Pot Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Bascinet%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Full Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Long Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Greathelm%options1alias%%optionsalt2list%%Paddingalt1list%"_
						),_
						comment(// output to coverage() tag),_
				alt2list(_
						"1",_
						"1, 1/6",_
						"1",_
						"1, 1/6, 1",_
						"1, 1/6, 1, 1",_
						"1, 1"_
						)_
				),_
		#ChoiceList(_
				name(options),_
				title(Helmet Options List),_
				text(Please select any helmet options. A Visor replaces Cheek Guards, Spectacle, and Nasal options. A Bascinet already covers the ears, precluding the Wide Cheek Guards option.),_
				picksallowed(atleast 1, upto 4),_
				method(bynumber),_
					list(_
						"_No Options"=0,_
						"Nasal (1/6)"=5,_
						"Brim (1/6*)"=15,_
						"Cheek Guard (2/6)"=10,_
						"Cheek Guard, Wide (3/6)"=15,_
						"Spectacle (1/6)"=5,_
						"Visor (5/6)"=25_
						),_
						comment(// output to nameext() tag),_
				aliaslist(_
						"",_
						", ",_
						", ",_
						", ",_
						", ",_
						", ",_
						", "_
						),_
						comment(// output to locations() tag),_
				alt1list(_
						"",_
						"Face (1/6)",_
						"Face (1/6*)",_
						"Face (2/6)",_
						"Face (3/6)",_
						"Face (1/6)",_
						"Face (5/6)"_
						),_
						comment(// output to nameext() tag),_
					alt2list(_
						"",_
						"Nasal",_
						"Brim",_
						"Cheek Guard",_
						"Wide Cheek Guard",_
						"Spectacle",_
						"Visor"_
						),_
						comment(// output to coverage() tag),_
				alt3list(_
						"",_
						"1/6",_
						"1/6*",_
						"2/6",_
						"3/6",_
						"1/6",_
						"5/6"_
						)_
				),_
		#ChoiceList(_
					name(Padding),_
					title(Helmet Padding),_
					default(2),_
					text(Does this helmet include Padding:),_
					picksallowed(1),_
					method(bynumber),_
						list(_
						"No Padding",_
						"Padding"_
						),_
						comment(// unused?),_
						aliaslist(_
						"",_
						""_
						),_
						comment(// output to nameext() tag),_
						alt1list(_
						"",_
						", Padding"_
						),_
						comment(// output to gives() tag),_
						alt2list(_
						"",_
						{=+@if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1) to me::dr listas "Padding", +@round(50 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::basecost listas "",  + @round(6 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::baseweight listas ""}_
						)_
				)_
	), noresync(yes)

"Horn (%Helmet_Alt1List%)", gives(%Paddingalt2list%), page(LT100-110),_
	displayname(Horn (Build-your-own Helmet)),_
	location(%Helmet_AliasList%%options1alias%%optionsalt1List%), coverage(%Helmet_Alt2List%%Options1alias%%OptionsAlt3List%),_
	mods(Equipment, Helmet, Armor, Armor - Organic),_
	techlvl(0), notes(), don(30), dr(3), displaycost(250/base), displayweight(25/base), basecost(@round(250 * me::basecostmultiplier,2)), baseweight(@round(25 * me::basecostmultiplier,2)),_
	description(TL:0 DR:3 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%),_
	paddingcost(%Helmet_Cost1%), basecostmultiplier(_
		(_
			%Helmet_Cost1% _
		) *  _
		(_
		%optionsCost5% + %optionsCost4% + %optionsCost3% + %optionsCost2% + %optionsCost1% + 100_
		)/10000 _
	),_
	x(_
		#ChoiceList(_
				name(Helmet_),_
				title(Armor Location List),_
				text(Please select the type of helmet:),_
				picksallowed(1),_
				method(bynumber),_
					list(_
						"Pot Helm - Skull"=20,_
						"Bascinet - Skull, Face (1/6)"=25,_
						"Full Helm - Skull, Face"=30,_
						"Coif - Skull, Face (1/6), Neck"=30,_
						"Coif, Long - Skull, Face (1/6), Neck, Shoulders"=45,_
						"Greathelm - Skull, Face, Neck"=35_
						),_
						comment(// output to location() tag),_
				aliaslist(_
						"Skull",_
						"Skull, Face (1/6)",_
						"Head",_
						"Skull, Face (1/6), Neck",_
						"Skull, Face (1/6), Neck, Shoulders",_
						"Head, Neck"_
						),_
						comment(// output to nameext() tag),_
				alt1list(_
						"Pot Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Bascinet%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Full Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Long Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Greathelm%options1alias%%optionsalt2list%%Paddingalt1list%"_
						),_
						comment(// output to coverage() tag),_
				alt2list(_
						"1",_
						"1, 1/6",_
						"1",_
						"1, 1/6, 1",_
						"1, 1/6, 1, 1",_
						"1, 1"_
						)_
				),_
		#ChoiceList(_
				name(options),_
				title(Helmet Options List),_
				text(Please select any helmet options. A Visor replaces Cheek Guards, Spectacle, and Nasal options. A Bascinet already covers the ears, precluding the Wide Cheek Guards option.),_
				picksallowed(atleast 1, upto 4),_
				method(bynumber),_
					list(_
						"_No Options"=0,_
						"Nasal (1/6)"=5,_
						"Brim (1/6*)"=15,_
						"Cheek Guard (2/6)"=10,_
						"Cheek Guard, Wide (3/6)"=15,_
						"Spectacle (1/6)"=5,_
						"Visor (5/6)"=25_
						),_
						comment(// output to nameext() tag),_
				aliaslist(_
						"",_
						", ",_
						", ",_
						", ",_
						", ",_
						", ",_
						", "_
						),_
						comment(// output to locations() tag),_
				alt1list(_
						"",_
						"Face (1/6)",_
						"Face (1/6*)",_
						"Face (2/6)",_
						"Face (3/6)",_
						"Face (1/6)",_
						"Face (5/6)"_
						),_
						comment(// output to nameext() tag),_
					alt2list(_
						"",_
						"Nasal",_
						"Brim",_
						"Cheek Guard",_
						"Wide Cheek Guard",_
						"Spectacle",_
						"Visor"_
						),_
						comment(// output to coverage() tag),_
				alt3list(_
						"",_
						"1/6",_
						"1/6*",_
						"2/6",_
						"3/6",_
						"1/6",_
						"5/6"_
						)_
				),_
		#ChoiceList(_
					name(Padding),_
					title(Helmet Padding),_
					default(2),_
					text(Does this helmet include Padding:),_
					picksallowed(1),_
					method(bynumber),_
						list(_
						"No Padding",_
						"Padding"_
						),_
						comment(// unused?),_
						aliaslist(_
						"",_
						""_
						),_
						comment(// output to nameext() tag),_
						alt1list(_
						"",_
						", Padding"_
						),_
						comment(// output to gives() tag),_
						alt2list(_
						"",_
						{=+@if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1) to me::dr listas "Padding", +@round(50 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::basecost listas "",  + @round(6 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::baseweight listas ""}_
						)_
				)_
	), noresync(yes)

"Layered Cloth, Light (%Helmet_Alt1List%)", gives(%Paddingalt2list%), page(LT100-110),_
	displayname(Layered Cloth, Light (Build-your-own Helmet)),_
	location(%Helmet_AliasList%%options1alias%%optionsalt1List%), coverage(%Helmet_Alt2List%%Options1alias%%OptionsAlt3List%),_
	mods(Equipment, Helmet, Armor, Armor - Organic, Armor - Cloth, Armor - Textile),_
	techlvl(0), notes(), don(20), dr(2*), displaycost(150/base), displayweight(12/base), basecost(@round(150 * me::basecostmultiplier,2)), baseweight(@round(12 * me::basecostmultiplier,2)),_
	description(TL:0 DR:2* Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%),_
	paddingcost(%Helmet_Cost1%), basecostmultiplier(_
		(_
			%Helmet_Cost1% _
		) *  _
		(_
		%optionsCost5% + %optionsCost4% + %optionsCost3% + %optionsCost2% + %optionsCost1% + 100_
		)/10000 _
	),_
	x(_
		#ChoiceList(_
				name(Helmet_),_
				title(Armor Location List),_
				text(Please select the type of helmet:),_
				picksallowed(1),_
				method(bynumber),_
					list(_
						"Pot Helm - Skull"=20,_
						"Bascinet - Skull, Face (1/6)"=25,_
						"Full Helm - Skull, Face"=30,_
						"Coif - Skull, Face (1/6), Neck"=30,_
						"Coif, Long - Skull, Face (1/6), Neck, Shoulders"=45,_
						"Greathelm - Skull, Face, Neck"=35_
						),_
						comment(// output to location() tag),_
				aliaslist(_
						"Skull",_
						"Skull, Face (1/6)",_
						"Head",_
						"Skull, Face (1/6), Neck",_
						"Skull, Face (1/6), Neck, Shoulders",_
						"Head, Neck"_
						),_
						comment(// output to nameext() tag),_
				alt1list(_
						"Pot Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Bascinet%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Full Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Long Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Greathelm%options1alias%%optionsalt2list%%Paddingalt1list%"_
						),_
						comment(// output to coverage() tag),_
				alt2list(_
						"1",_
						"1, 1/6",_
						"1",_
						"1, 1/6, 1",_
						"1, 1/6, 1, 1",_
						"1, 1"_
						)_
				),_
		#ChoiceList(_
				name(options),_
				title(Helmet Options List),_
				text(Please select any helmet options. A Visor replaces Cheek Guards, Spectacle, and Nasal options. A Bascinet already covers the ears, precluding the Wide Cheek Guards option.),_
				picksallowed(atleast 1, upto 4),_
				method(bynumber),_
					list(_
						"_No Options"=0,_
						"Nasal (1/6)"=5,_
						"Brim (1/6*)"=15,_
						"Cheek Guard (2/6)"=10,_
						"Cheek Guard, Wide (3/6)"=15,_
						"Spectacle (1/6)"=5,_
						"Visor (5/6)"=25_
						),_
						comment(// output to nameext() tag),_
				aliaslist(_
						"",_
						", ",_
						", ",_
						", ",_
						", ",_
						", ",_
						", "_
						),_
						comment(// output to locations() tag),_
				alt1list(_
						"",_
						"Face (1/6)",_
						"Face (1/6*)",_
						"Face (2/6)",_
						"Face (3/6)",_
						"Face (1/6)",_
						"Face (5/6)"_
						),_
						comment(// output to nameext() tag),_
					alt2list(_
						"",_
						"Nasal",_
						"Brim",_
						"Cheek Guard",_
						"Wide Cheek Guard",_
						"Spectacle",_
						"Visor"_
						),_
						comment(// output to coverage() tag),_
				alt3list(_
						"",_
						"1/6",_
						"1/6*",_
						"2/6",_
						"3/6",_
						"1/6",_
						"5/6"_
						)_
				),_
		#ChoiceList(_
					name(Padding),_
					title(Helmet Padding),_
					default(2),_
					text(Does this helmet include Padding:),_
					picksallowed(1),_
					method(bynumber),_
						list(_
						"No Padding",_
						"Padding"_
						),_
						comment(// unused?),_
						aliaslist(_
						"",_
						""_
						),_
						comment(// output to nameext() tag),_
						alt1list(_
						"",_
						", Padding"_
						),_
						comment(// output to gives() tag),_
						alt2list(_
						"",_
						{=+@if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1) to me::dr listas "Padding", +@round(50 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::basecost listas "",  + @round(6 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::baseweight listas ""}_
						)_
				)_
	), noresync(yes)

"Layered Cloth, Medium (%Helmet_Alt1List%)", gives(%Paddingalt2list%), page(LT100-110),_
	displayname(Layered Cloth, Medium (Build-your-own Helmet)),_
	location(%Helmet_AliasList%%options1alias%%optionsalt1List%), coverage(%Helmet_Alt2List%%Options1alias%%OptionsAlt3List%),_
	mods(Equipment, Helmet, Armor, Armor - Organic, Armor - Cloth, Armor - Textile),_
	techlvl(0), notes(), don(30), dr(3), displaycost(350/base), displayweight(20/base), basecost(@round(350 * me::basecostmultiplier,2)), baseweight(@round(20 * me::basecostmultiplier,2)),_
	description(TL:0 DR:3 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%),_
	paddingcost(%Helmet_Cost1%), basecostmultiplier(_
		(_
			%Helmet_Cost1% _
		) *  _
		(_
		%optionsCost5% + %optionsCost4% + %optionsCost3% + %optionsCost2% + %optionsCost1% + 100_
		)/10000 _
	),_
	x(_
		#ChoiceList(_
				name(Helmet_),_
				title(Armor Location List),_
				text(Please select the type of helmet:),_
				picksallowed(1),_
				method(bynumber),_
					list(_
						"Pot Helm - Skull"=20,_
						"Bascinet - Skull, Face (1/6)"=25,_
						"Full Helm - Skull, Face"=30,_
						"Coif - Skull, Face (1/6), Neck"=30,_
						"Coif, Long - Skull, Face (1/6), Neck, Shoulders"=45,_
						"Greathelm - Skull, Face, Neck"=35_
						),_
						comment(// output to location() tag),_
				aliaslist(_
						"Skull",_
						"Skull, Face (1/6)",_
						"Head",_
						"Skull, Face (1/6), Neck",_
						"Skull, Face (1/6), Neck, Shoulders",_
						"Head, Neck"_
						),_
						comment(// output to nameext() tag),_
				alt1list(_
						"Pot Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Bascinet%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Full Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Long Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Greathelm%options1alias%%optionsalt2list%%Paddingalt1list%"_
						),_
						comment(// output to coverage() tag),_
				alt2list(_
						"1",_
						"1, 1/6",_
						"1",_
						"1, 1/6, 1",_
						"1, 1/6, 1, 1",_
						"1, 1"_
						)_
				),_
		#ChoiceList(_
				name(options),_
				title(Helmet Options List),_
				text(Please select any helmet options. A Visor replaces Cheek Guards, Spectacle, and Nasal options. A Bascinet already covers the ears, precluding the Wide Cheek Guards option.),_
				picksallowed(atleast 1, upto 4),_
				method(bynumber),_
					list(_
						"_No Options"=0,_
						"Nasal (1/6)"=5,_
						"Brim (1/6*)"=15,_
						"Cheek Guard (2/6)"=10,_
						"Cheek Guard, Wide (3/6)"=15,_
						"Spectacle (1/6)"=5,_
						"Visor (5/6)"=25_
						),_
						comment(// output to nameext() tag),_
				aliaslist(_
						"",_
						", ",_
						", ",_
						", ",_
						", ",_
						", ",_
						", "_
						),_
						comment(// output to locations() tag),_
				alt1list(_
						"",_
						"Face (1/6)",_
						"Face (1/6*)",_
						"Face (2/6)",_
						"Face (3/6)",_
						"Face (1/6)",_
						"Face (5/6)"_
						),_
						comment(// output to nameext() tag),_
					alt2list(_
						"",_
						"Nasal",_
						"Brim",_
						"Cheek Guard",_
						"Wide Cheek Guard",_
						"Spectacle",_
						"Visor"_
						),_
						comment(// output to coverage() tag),_
				alt3list(_
						"",_
						"1/6",_
						"1/6*",_
						"2/6",_
						"3/6",_
						"1/6",_
						"5/6"_
						)_
				),_
		#ChoiceList(_
					name(Padding),_
					title(Helmet Padding),_
					default(2),_
					text(Does this helmet include Padding:),_
					picksallowed(1),_
					method(bynumber),_
						list(_
						"No Padding",_
						"Padding"_
						),_
						comment(// unused?),_
						aliaslist(_
						"",_
						""_
						),_
						comment(// output to nameext() tag),_
						alt1list(_
						"",_
						", Padding"_
						),_
						comment(// output to gives() tag),_
						alt2list(_
						"",_
						{=+@if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1) to me::dr listas "Padding", +@round(50 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::basecost listas "",  + @round(6 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::baseweight listas ""}_
						)_
				)_
	), noresync(yes)

"Layered Cloth, Heavy (%Helmet_Alt1List%)", gives(%Paddingalt2list%), page(LT100-110),_
	displayname(Layered Cloth, Heavy (Build-your-own Helmet)),_
	location(%Helmet_AliasList%%options1alias%%optionsalt1List%), coverage(%Helmet_Alt2List%%Options1alias%%OptionsAlt3List%),_
	mods(Equipment, Helmet, Armor, Armor - Organic, Armor - Cloth, Armor - Textile),_
	techlvl(0), notes(), don(30), dr(4), displaycost(600/base), displayweight(28/base), basecost(@round(600 * me::basecostmultiplier,2)), baseweight(@round(28 * me::basecostmultiplier,2)),_
	description(TL:0 DR:4 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%),_
	paddingcost(%Helmet_Cost1%), basecostmultiplier(_
		(_
			%Helmet_Cost1% _
		) *  _
		(_
		%optionsCost5% + %optionsCost4% + %optionsCost3% + %optionsCost2% + %optionsCost1% + 100_
		)/10000 _
	),_
	x(_
		#ChoiceList(_
				name(Helmet_),_
				title(Armor Location List),_
				text(Please select the type of helmet:),_
				picksallowed(1),_
				method(bynumber),_
					list(_
						"Pot Helm - Skull"=20,_
						"Bascinet - Skull, Face (1/6)"=25,_
						"Full Helm - Skull, Face"=30,_
						"Coif - Skull, Face (1/6), Neck"=30,_
						"Coif, Long - Skull, Face (1/6), Neck, Shoulders"=45,_
						"Greathelm - Skull, Face, Neck"=35_
						),_
						comment(// output to location() tag),_
				aliaslist(_
						"Skull",_
						"Skull, Face (1/6)",_
						"Head",_
						"Skull, Face (1/6), Neck",_
						"Skull, Face (1/6), Neck, Shoulders",_
						"Head, Neck"_
						),_
						comment(// output to nameext() tag),_
				alt1list(_
						"Pot Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Bascinet%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Full Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Long Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Greathelm%options1alias%%optionsalt2list%%Paddingalt1list%"_
						),_
						comment(// output to coverage() tag),_
				alt2list(_
						"1",_
						"1, 1/6",_
						"1",_
						"1, 1/6, 1",_
						"1, 1/6, 1, 1",_
						"1, 1"_
						)_
				),_
		#ChoiceList(_
				name(options),_
				title(Helmet Options List),_
				text(Please select any helmet options. A Visor replaces Cheek Guards, Spectacle, and Nasal options. A Bascinet already covers the ears, precluding the Wide Cheek Guards option.),_
				picksallowed(atleast 1, upto 4),_
				method(bynumber),_
					list(_
						"_No Options"=0,_
						"Nasal (1/6)"=5,_
						"Brim (1/6*)"=15,_
						"Cheek Guard (2/6)"=10,_
						"Cheek Guard, Wide (3/6)"=15,_
						"Spectacle (1/6)"=5,_
						"Visor (5/6)"=25_
						),_
						comment(// output to nameext() tag),_
				aliaslist(_
						"",_
						", ",_
						", ",_
						", ",_
						", ",_
						", ",_
						", "_
						),_
						comment(// output to locations() tag),_
				alt1list(_
						"",_
						"Face (1/6)",_
						"Face (1/6*)",_
						"Face (2/6)",_
						"Face (3/6)",_
						"Face (1/6)",_
						"Face (5/6)"_
						),_
						comment(// output to nameext() tag),_
					alt2list(_
						"",_
						"Nasal",_
						"Brim",_
						"Cheek Guard",_
						"Wide Cheek Guard",_
						"Spectacle",_
						"Visor"_
						),_
						comment(// output to coverage() tag),_
				alt3list(_
						"",_
						"1/6",_
						"1/6*",_
						"2/6",_
						"3/6",_
						"1/6",_
						"5/6"_
						)_
				),_
		#ChoiceList(_
					name(Padding),_
					title(Helmet Padding),_
					default(2),_
					text(Does this helmet include Padding:),_
					picksallowed(1),_
					method(bynumber),_
						list(_
						"No Padding",_
						"Padding"_
						),_
						comment(// unused?),_
						aliaslist(_
						"",_
						""_
						),_
						comment(// output to nameext() tag),_
						alt1list(_
						"",_
						", Padding"_
						),_
						comment(// output to gives() tag),_
						alt2list(_
						"",_
						{=+@if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1) to me::dr listas "Padding", +@round(50 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::basecost listas "",  + @round(6 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::baseweight listas ""}_
						)_
				)_
	), noresync(yes)

"Leather, Medium (%Helmet_Alt1List%)", gives(%Paddingalt2list%), page(LT100-110),_
	displayname(Leather, Medium (Build-your-own Helmet)),_
	drnotes(_
				{Split DR: use the lower DR against impaling attacks.}_
			),_
	location(%Helmet_AliasList%%options1alias%%optionsalt1List%), coverage(%Helmet_Alt2List%%Options1alias%%OptionsAlt3List%), basedr(2*), impalingdr(1*),_
	mods(Equipment, Helmet, Armor, Armor - Organic, Armor - Leather),_
	techlvl(0), notes([2]), don(30), dr(2/1*), displaycost(100/base), displayweight(12/base), basecost(@round(100 * me::basecostmultiplier,2)), baseweight(@round(12 * me::basecostmultiplier,2)),_
	description(TL:0 DR:2/1* Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[2] Second DR value vs. impaling.),_
	paddingcost(%Helmet_Cost1%), basecostmultiplier(_
		(_
			%Helmet_Cost1% _
		) *  _
		(_
		%optionsCost5% + %optionsCost4% + %optionsCost3% + %optionsCost2% + %optionsCost1% + 100_
		)/10000 _
	),_
	x(_
		#ChoiceList(_
				name(Helmet_),_
				title(Armor Location List),_
				text(Please select the type of helmet:),_
				picksallowed(1),_
				method(bynumber),_
					list(_
						"Pot Helm - Skull"=20,_
						"Bascinet - Skull, Face (1/6)"=25,_
						"Full Helm - Skull, Face"=30,_
						"Coif - Skull, Face (1/6), Neck"=30,_
						"Coif, Long - Skull, Face (1/6), Neck, Shoulders"=45,_
						"Greathelm - Skull, Face, Neck"=35_
						),_
						comment(// output to location() tag),_
				aliaslist(_
						"Skull",_
						"Skull, Face (1/6)",_
						"Head",_
						"Skull, Face (1/6), Neck",_
						"Skull, Face (1/6), Neck, Shoulders",_
						"Head, Neck"_
						),_
						comment(// output to nameext() tag),_
				alt1list(_
						"Pot Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Bascinet%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Full Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Long Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Greathelm%options1alias%%optionsalt2list%%Paddingalt1list%"_
						),_
						comment(// output to coverage() tag),_
				alt2list(_
						"1",_
						"1, 1/6",_
						"1",_
						"1, 1/6, 1",_
						"1, 1/6, 1, 1",_
						"1, 1"_
						)_
				),_
		#ChoiceList(_
				name(options),_
				title(Helmet Options List),_
				text(Please select any helmet options. A Visor replaces Cheek Guards, Spectacle, and Nasal options. A Bascinet already covers the ears, precluding the Wide Cheek Guards option.),_
				picksallowed(atleast 1, upto 4),_
				method(bynumber),_
					list(_
						"_No Options"=0,_
						"Nasal (1/6)"=5,_
						"Brim (1/6*)"=15,_
						"Cheek Guard (2/6)"=10,_
						"Cheek Guard, Wide (3/6)"=15,_
						"Spectacle (1/6)"=5,_
						"Visor (5/6)"=25_
						),_
						comment(// output to nameext() tag),_
				aliaslist(_
						"",_
						", ",_
						", ",_
						", ",_
						", ",_
						", ",_
						", "_
						),_
						comment(// output to locations() tag),_
				alt1list(_
						"",_
						"Face (1/6)",_
						"Face (1/6*)",_
						"Face (2/6)",_
						"Face (3/6)",_
						"Face (1/6)",_
						"Face (5/6)"_
						),_
						comment(// output to nameext() tag),_
					alt2list(_
						"",_
						"Nasal",_
						"Brim",_
						"Cheek Guard",_
						"Wide Cheek Guard",_
						"Spectacle",_
						"Visor"_
						),_
						comment(// output to coverage() tag),_
				alt3list(_
						"",_
						"1/6",_
						"1/6*",_
						"2/6",_
						"3/6",_
						"1/6",_
						"5/6"_
						)_
				),_
		#ChoiceList(_
					name(Padding),_
					title(Helmet Padding),_
					default(2),_
					text(Does this helmet include Padding:),_
					picksallowed(1),_
					method(bynumber),_
						list(_
						"No Padding",_
						"Padding"_
						),_
						comment(// unused?),_
						aliaslist(_
						"",_
						""_
						),_
						comment(// output to nameext() tag),_
						alt1list(_
						"",_
						", Padding"_
						),_
						comment(// output to gives() tag),_
						alt2list(_
						"",_
						{=+@if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1) to me::dr listas "Padding", +@round(50 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::basecost listas "",  + @round(6 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::baseweight listas ""}_
						)_
				)_
	), noresync(yes)

"Leather, Heavy (%Helmet_Alt1List%)", gives(%Paddingalt2list%), page(LT100-110),_
	displayname(Leather, Heavy (Build-your-own Helmet)),_
	drnotes(_
				{Split DR: use the lower DR against impaling attacks.}_
			),_
	location(%Helmet_AliasList%%options1alias%%optionsalt1List%), coverage(%Helmet_Alt2List%%Options1alias%%OptionsAlt3List%), basedr(3), impalingdr(2),_
	mods(Equipment, Helmet, Armor, Armor - Organic, Armor - Leather),_
	techlvl(0), notes([2]), don(30), dr(3/2), displaycost(200/base), displayweight(20/base), basecost(@round(200 * me::basecostmultiplier,2)), baseweight(@round(20 * me::basecostmultiplier,2)),_
	description(TL:0 DR:3/2 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[2] Second DR value vs. impaling.),_
	paddingcost(%Helmet_Cost1%), basecostmultiplier(_
		(_
			%Helmet_Cost1% _
		) *  _
		(_
		%optionsCost5% + %optionsCost4% + %optionsCost3% + %optionsCost2% + %optionsCost1% + 100_
		)/10000 _
	),_
	x(_
		#ChoiceList(_
				name(Helmet_),_
				title(Armor Location List),_
				text(Please select the type of helmet:),_
				picksallowed(1),_
				method(bynumber),_
					list(_
						"Pot Helm - Skull"=20,_
						"Bascinet - Skull, Face (1/6)"=25,_
						"Full Helm - Skull, Face"=30,_
						"Coif - Skull, Face (1/6), Neck"=30,_
						"Coif, Long - Skull, Face (1/6), Neck, Shoulders"=45,_
						"Greathelm - Skull, Face, Neck"=35_
						),_
						comment(// output to location() tag),_
				aliaslist(_
						"Skull",_
						"Skull, Face (1/6)",_
						"Head",_
						"Skull, Face (1/6), Neck",_
						"Skull, Face (1/6), Neck, Shoulders",_
						"Head, Neck"_
						),_
						comment(// output to nameext() tag),_
				alt1list(_
						"Pot Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Bascinet%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Full Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Long Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Greathelm%options1alias%%optionsalt2list%%Paddingalt1list%"_
						),_
						comment(// output to coverage() tag),_
				alt2list(_
						"1",_
						"1, 1/6",_
						"1",_
						"1, 1/6, 1",_
						"1, 1/6, 1, 1",_
						"1, 1"_
						)_
				),_
		#ChoiceList(_
				name(options),_
				title(Helmet Options List),_
				text(Please select any helmet options. A Visor replaces Cheek Guards, Spectacle, and Nasal options. A Bascinet already covers the ears, precluding the Wide Cheek Guards option.),_
				picksallowed(atleast 1, upto 4),_
				method(bynumber),_
					list(_
						"_No Options"=0,_
						"Nasal (1/6)"=5,_
						"Brim (1/6*)"=15,_
						"Cheek Guard (2/6)"=10,_
						"Cheek Guard, Wide (3/6)"=15,_
						"Spectacle (1/6)"=5,_
						"Visor (5/6)"=25_
						),_
						comment(// output to nameext() tag),_
				aliaslist(_
						"",_
						", ",_
						", ",_
						", ",_
						", ",_
						", ",_
						", "_
						),_
						comment(// output to locations() tag),_
				alt1list(_
						"",_
						"Face (1/6)",_
						"Face (1/6*)",_
						"Face (2/6)",_
						"Face (3/6)",_
						"Face (1/6)",_
						"Face (5/6)"_
						),_
						comment(// output to nameext() tag),_
					alt2list(_
						"",_
						"Nasal",_
						"Brim",_
						"Cheek Guard",_
						"Wide Cheek Guard",_
						"Spectacle",_
						"Visor"_
						),_
						comment(// output to coverage() tag),_
				alt3list(_
						"",_
						"1/6",_
						"1/6*",_
						"2/6",_
						"3/6",_
						"1/6",_
						"5/6"_
						)_
				),_
		#ChoiceList(_
					name(Padding),_
					title(Helmet Padding),_
					default(2),_
					text(Does this helmet include Padding:),_
					picksallowed(1),_
					method(bynumber),_
						list(_
						"No Padding",_
						"Padding"_
						),_
						comment(// unused?),_
						aliaslist(_
						"",_
						""_
						),_
						comment(// output to nameext() tag),_
						alt1list(_
						"",_
						", Padding"_
						),_
						comment(// output to gives() tag),_
						alt2list(_
						"",_
						{=+@if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1) to me::dr listas "Padding", +@round(50 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::basecost listas "",  + @round(6 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::baseweight listas ""}_
						)_
				)_
	), noresync(yes)

"Straw (%Helmet_Alt1List%)", gives(%Paddingalt2list%), page(LT100-110),_
	displayname(Straw (Build-your-own Helmet)),_
	location(%Helmet_AliasList%%options1alias%%optionsalt1List%), coverage(%Helmet_Alt2List%%Options1alias%%OptionsAlt3List%),_
	mods(Equipment, Helmet, Armor, Armor - Organic),_
	techlvl(0), notes([1]), don(30), dr(2), displaycost(50/base), displayweight(20/base), basecost(@round(50 * me::basecostmultiplier,2)), baseweight(@round(20 * me::basecostmultiplier,2)),_
	description(TL:0 DR:2 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[1] Combustible. If DR is penetrated by burning damage, it can catch fire. See Making Things Burn (p. B433); treat the armor material as resistant.),_
	paddingcost(%Helmet_Cost1%), basecostmultiplier(_
		(_
			%Helmet_Cost1% _
		) *  _
		(_
		%optionsCost5% + %optionsCost4% + %optionsCost3% + %optionsCost2% + %optionsCost1% + 100_
		)/10000 _
	),_
	x(_
		#ChoiceList(_
				name(Helmet_),_
				title(Armor Location List),_
				text(Please select the type of helmet:),_
				picksallowed(1),_
				method(bynumber),_
					list(_
						"Pot Helm - Skull"=20,_
						"Bascinet - Skull, Face (1/6)"=25,_
						"Full Helm - Skull, Face"=30,_
						"Coif - Skull, Face (1/6), Neck"=30,_
						"Coif, Long - Skull, Face (1/6), Neck, Shoulders"=45,_
						"Greathelm - Skull, Face, Neck"=35_
						),_
						comment(// output to location() tag),_
				aliaslist(_
						"Skull",_
						"Skull, Face (1/6)",_
						"Head",_
						"Skull, Face (1/6), Neck",_
						"Skull, Face (1/6), Neck, Shoulders",_
						"Head, Neck"_
						),_
						comment(// output to nameext() tag),_
				alt1list(_
						"Pot Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Bascinet%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Full Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Long Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Greathelm%options1alias%%optionsalt2list%%Paddingalt1list%"_
						),_
						comment(// output to coverage() tag),_
				alt2list(_
						"1",_
						"1, 1/6",_
						"1",_
						"1, 1/6, 1",_
						"1, 1/6, 1, 1",_
						"1, 1"_
						)_
				),_
		#ChoiceList(_
				name(options),_
				title(Helmet Options List),_
				text(Please select any helmet options. A Visor replaces Cheek Guards, Spectacle, and Nasal options. A Bascinet already covers the ears, precluding the Wide Cheek Guards option.),_
				picksallowed(atleast 1, upto 4),_
				method(bynumber),_
					list(_
						"_No Options"=0,_
						"Nasal (1/6)"=5,_
						"Brim (1/6*)"=15,_
						"Cheek Guard (2/6)"=10,_
						"Cheek Guard, Wide (3/6)"=15,_
						"Spectacle (1/6)"=5,_
						"Visor (5/6)"=25_
						),_
						comment(// output to nameext() tag),_
				aliaslist(_
						"",_
						", ",_
						", ",_
						", ",_
						", ",_
						", ",_
						", "_
						),_
						comment(// output to locations() tag),_
				alt1list(_
						"",_
						"Face (1/6)",_
						"Face (1/6*)",_
						"Face (2/6)",_
						"Face (3/6)",_
						"Face (1/6)",_
						"Face (5/6)"_
						),_
						comment(// output to nameext() tag),_
					alt2list(_
						"",_
						"Nasal",_
						"Brim",_
						"Cheek Guard",_
						"Wide Cheek Guard",_
						"Spectacle",_
						"Visor"_
						),_
						comment(// output to coverage() tag),_
				alt3list(_
						"",_
						"1/6",_
						"1/6*",_
						"2/6",_
						"3/6",_
						"1/6",_
						"5/6"_
						)_
				),_
		#ChoiceList(_
					name(Padding),_
					title(Helmet Padding),_
					default(2),_
					text(Does this helmet include Padding:),_
					picksallowed(1),_
					method(bynumber),_
						list(_
						"No Padding",_
						"Padding"_
						),_
						comment(// unused?),_
						aliaslist(_
						"",_
						""_
						),_
						comment(// output to nameext() tag),_
						alt1list(_
						"",_
						", Padding"_
						),_
						comment(// output to gives() tag),_
						alt2list(_
						"",_
						{=+@if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1) to me::dr listas "Padding", +@round(50 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::basecost listas "",  + @round(6 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::baseweight listas ""}_
						)_
				)_
	), noresync(yes)

"Wood (%Helmet_Alt1List%)", gives(%Paddingalt2list%), page(LT100-110),_
	displayname(Wood (Build-your-own Helmet)),_
	drnotes(_
				{Semi-ablative. Loses 1 DR per 10 points of basic damage it resists (see p. B47)}_
			),_
	location(%Helmet_AliasList%%options1alias%%optionsalt1List%), coverage(%Helmet_Alt2List%%Options1alias%%OptionsAlt3List%),_
	mods(Equipment, Helmet, Armor, Armor - Organic),_
	techlvl(0), notes([3]), don(30), dr(3), displaycost(100/base), displayweight(30/base), basecost(@round(100 * me::basecostmultiplier,2)), baseweight(@round(30 * me::basecostmultiplier,2)),_
	description(TL:0 DR:3 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[3] Semi-ablative. Loses 1 DR per 10 points of basic damage it resists (see p. B47)),_
	paddingcost(%Helmet_Cost1%), basecostmultiplier(_
		(_
			%Helmet_Cost1% _
		) *  _
		(_
		%optionsCost5% + %optionsCost4% + %optionsCost3% + %optionsCost2% + %optionsCost1% + 100_
		)/10000 _
	),_
	x(_
		#ChoiceList(_
				name(Helmet_),_
				title(Armor Location List),_
				text(Please select the type of helmet:),_
				picksallowed(1),_
				method(bynumber),_
					list(_
						"Pot Helm - Skull"=20,_
						"Bascinet - Skull, Face (1/6)"=25,_
						"Full Helm - Skull, Face"=30,_
						"Coif - Skull, Face (1/6), Neck"=30,_
						"Coif, Long - Skull, Face (1/6), Neck, Shoulders"=45,_
						"Greathelm - Skull, Face, Neck"=35_
						),_
						comment(// output to location() tag),_
				aliaslist(_
						"Skull",_
						"Skull, Face (1/6)",_
						"Head",_
						"Skull, Face (1/6), Neck",_
						"Skull, Face (1/6), Neck, Shoulders",_
						"Head, Neck"_
						),_
						comment(// output to nameext() tag),_
				alt1list(_
						"Pot Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Bascinet%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Full Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Long Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Greathelm%options1alias%%optionsalt2list%%Paddingalt1list%"_
						),_
						comment(// output to coverage() tag),_
				alt2list(_
						"1",_
						"1, 1/6",_
						"1",_
						"1, 1/6, 1",_
						"1, 1/6, 1, 1",_
						"1, 1"_
						)_
				),_
		#ChoiceList(_
				name(options),_
				title(Helmet Options List),_
				text(Please select any helmet options. A Visor replaces Cheek Guards, Spectacle, and Nasal options. A Bascinet already covers the ears, precluding the Wide Cheek Guards option.),_
				picksallowed(atleast 1, upto 4),_
				method(bynumber),_
					list(_
						"_No Options"=0,_
						"Nasal (1/6)"=5,_
						"Brim (1/6*)"=15,_
						"Cheek Guard (2/6)"=10,_
						"Cheek Guard, Wide (3/6)"=15,_
						"Spectacle (1/6)"=5,_
						"Visor (5/6)"=25_
						),_
						comment(// output to nameext() tag),_
				aliaslist(_
						"",_
						", ",_
						", ",_
						", ",_
						", ",_
						", ",_
						", "_
						),_
						comment(// output to locations() tag),_
				alt1list(_
						"",_
						"Face (1/6)",_
						"Face (1/6*)",_
						"Face (2/6)",_
						"Face (3/6)",_
						"Face (1/6)",_
						"Face (5/6)"_
						),_
						comment(// output to nameext() tag),_
					alt2list(_
						"",_
						"Nasal",_
						"Brim",_
						"Cheek Guard",_
						"Wide Cheek Guard",_
						"Spectacle",_
						"Visor"_
						),_
						comment(// output to coverage() tag),_
				alt3list(_
						"",_
						"1/6",_
						"1/6*",_
						"2/6",_
						"3/6",_
						"1/6",_
						"5/6"_
						)_
				),_
		#ChoiceList(_
					name(Padding),_
					title(Helmet Padding),_
					default(2),_
					text(Does this helmet include Padding:),_
					picksallowed(1),_
					method(bynumber),_
						list(_
						"No Padding",_
						"Padding"_
						),_
						comment(// unused?),_
						aliaslist(_
						"",_
						""_
						),_
						comment(// output to nameext() tag),_
						alt1list(_
						"",_
						", Padding"_
						),_
						comment(// output to gives() tag),_
						alt2list(_
						"",_
						{=+@if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1) to me::dr listas "Padding", +@round(50 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::basecost listas "",  + @round(6 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::baseweight listas ""}_
						)_
				)_
	), noresync(yes)

"Layered Leather, Light (%Helmet_Alt1List%)", gives(%Paddingalt2list%), page(LT100-110),_
	displayname(Layered Leather, Light (Build-your-own Helmet)),_
	location(%Helmet_AliasList%%options1alias%%optionsalt1List%), coverage(%Helmet_Alt2List%%Options1alias%%OptionsAlt3List%),_
	mods(Equipment, Helmet, Armor, Armor - Organic, Armor - Leather),_
	techlvl(1), notes(), don(20), dr(2*), displaycost(120/base), displayweight(15/base), basecost(@round(120 * me::basecostmultiplier,2)), baseweight(@round(15 * me::basecostmultiplier,2)),_
	description(TL:1 DR:2* Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%),_
	paddingcost(%Helmet_Cost1%), basecostmultiplier(_
		(_
			%Helmet_Cost1% _
		) *  _
		(_
		%optionsCost5% + %optionsCost4% + %optionsCost3% + %optionsCost2% + %optionsCost1% + 100_
		)/10000 _
	),_
	x(_
		#ChoiceList(_
				name(Helmet_),_
				title(Armor Location List),_
				text(Please select the type of helmet:),_
				picksallowed(1),_
				method(bynumber),_
					list(_
						"Pot Helm - Skull"=20,_
						"Bascinet - Skull, Face (1/6)"=25,_
						"Full Helm - Skull, Face"=30,_
						"Coif - Skull, Face (1/6), Neck"=30,_
						"Coif, Long - Skull, Face (1/6), Neck, Shoulders"=45,_
						"Greathelm - Skull, Face, Neck"=35_
						),_
						comment(// output to location() tag),_
				aliaslist(_
						"Skull",_
						"Skull, Face (1/6)",_
						"Head",_
						"Skull, Face (1/6), Neck",_
						"Skull, Face (1/6), Neck, Shoulders",_
						"Head, Neck"_
						),_
						comment(// output to nameext() tag),_
				alt1list(_
						"Pot Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Bascinet%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Full Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Long Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Greathelm%options1alias%%optionsalt2list%%Paddingalt1list%"_
						),_
						comment(// output to coverage() tag),_
				alt2list(_
						"1",_
						"1, 1/6",_
						"1",_
						"1, 1/6, 1",_
						"1, 1/6, 1, 1",_
						"1, 1"_
						)_
				),_
		#ChoiceList(_
				name(options),_
				title(Helmet Options List),_
				text(Please select any helmet options. A Visor replaces Cheek Guards, Spectacle, and Nasal options. A Bascinet already covers the ears, precluding the Wide Cheek Guards option.),_
				picksallowed(atleast 1, upto 4),_
				method(bynumber),_
					list(_
						"_No Options"=0,_
						"Nasal (1/6)"=5,_
						"Brim (1/6*)"=15,_
						"Cheek Guard (2/6)"=10,_
						"Cheek Guard, Wide (3/6)"=15,_
						"Spectacle (1/6)"=5,_
						"Visor (5/6)"=25_
						),_
						comment(// output to nameext() tag),_
				aliaslist(_
						"",_
						", ",_
						", ",_
						", ",_
						", ",_
						", ",_
						", "_
						),_
						comment(// output to locations() tag),_
				alt1list(_
						"",_
						"Face (1/6)",_
						"Face (1/6*)",_
						"Face (2/6)",_
						"Face (3/6)",_
						"Face (1/6)",_
						"Face (5/6)"_
						),_
						comment(// output to nameext() tag),_
					alt2list(_
						"",_
						"Nasal",_
						"Brim",_
						"Cheek Guard",_
						"Wide Cheek Guard",_
						"Spectacle",_
						"Visor"_
						),_
						comment(// output to coverage() tag),_
				alt3list(_
						"",_
						"1/6",_
						"1/6*",_
						"2/6",_
						"3/6",_
						"1/6",_
						"5/6"_
						)_
				),_
		#ChoiceList(_
					name(Padding),_
					title(Helmet Padding),_
					default(2),_
					text(Does this helmet include Padding:),_
					picksallowed(1),_
					method(bynumber),_
						list(_
						"No Padding",_
						"Padding"_
						),_
						comment(// unused?),_
						aliaslist(_
						"",_
						""_
						),_
						comment(// output to nameext() tag),_
						alt1list(_
						"",_
						", Padding"_
						),_
						comment(// output to gives() tag),_
						alt2list(_
						"",_
						{=+@if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1) to me::dr listas "Padding", +@round(50 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::basecost listas "",  + @round(6 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::baseweight listas ""}_
						)_
				)_
	), noresync(yes)

"Layered Leather, Medium (%Helmet_Alt1List%)", gives(%Paddingalt2list%), page(LT100-110),_
	displayname(Layered Leather, Medium (Build-your-own Helmet)),_
	location(%Helmet_AliasList%%options1alias%%optionsalt1List%), coverage(%Helmet_Alt2List%%Options1alias%%OptionsAlt3List%),_
	mods(Equipment, Helmet, Armor, Armor - Organic, Armor - Leather),_
	techlvl(1), notes(), don(30), dr(3), displaycost(220/base), displayweight(26/base), basecost(@round(220 * me::basecostmultiplier,2)), baseweight(@round(26 * me::basecostmultiplier,2)),_
	description(TL:1 DR:3 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%),_
	paddingcost(%Helmet_Cost1%), basecostmultiplier(_
		(_
			%Helmet_Cost1% _
		) *  _
		(_
		%optionsCost5% + %optionsCost4% + %optionsCost3% + %optionsCost2% + %optionsCost1% + 100_
		)/10000 _
	),_
	x(_
		#ChoiceList(_
				name(Helmet_),_
				title(Armor Location List),_
				text(Please select the type of helmet:),_
				picksallowed(1),_
				method(bynumber),_
					list(_
						"Pot Helm - Skull"=20,_
						"Bascinet - Skull, Face (1/6)"=25,_
						"Full Helm - Skull, Face"=30,_
						"Coif - Skull, Face (1/6), Neck"=30,_
						"Coif, Long - Skull, Face (1/6), Neck, Shoulders"=45,_
						"Greathelm - Skull, Face, Neck"=35_
						),_
						comment(// output to location() tag),_
				aliaslist(_
						"Skull",_
						"Skull, Face (1/6)",_
						"Head",_
						"Skull, Face (1/6), Neck",_
						"Skull, Face (1/6), Neck, Shoulders",_
						"Head, Neck"_
						),_
						comment(// output to nameext() tag),_
				alt1list(_
						"Pot Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Bascinet%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Full Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Long Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Greathelm%options1alias%%optionsalt2list%%Paddingalt1list%"_
						),_
						comment(// output to coverage() tag),_
				alt2list(_
						"1",_
						"1, 1/6",_
						"1",_
						"1, 1/6, 1",_
						"1, 1/6, 1, 1",_
						"1, 1"_
						)_
				),_
		#ChoiceList(_
				name(options),_
				title(Helmet Options List),_
				text(Please select any helmet options. A Visor replaces Cheek Guards, Spectacle, and Nasal options. A Bascinet already covers the ears, precluding the Wide Cheek Guards option.),_
				picksallowed(atleast 1, upto 4),_
				method(bynumber),_
					list(_
						"_No Options"=0,_
						"Nasal (1/6)"=5,_
						"Brim (1/6*)"=15,_
						"Cheek Guard (2/6)"=10,_
						"Cheek Guard, Wide (3/6)"=15,_
						"Spectacle (1/6)"=5,_
						"Visor (5/6)"=25_
						),_
						comment(// output to nameext() tag),_
				aliaslist(_
						"",_
						", ",_
						", ",_
						", ",_
						", ",_
						", ",_
						", "_
						),_
						comment(// output to locations() tag),_
				alt1list(_
						"",_
						"Face (1/6)",_
						"Face (1/6*)",_
						"Face (2/6)",_
						"Face (3/6)",_
						"Face (1/6)",_
						"Face (5/6)"_
						),_
						comment(// output to nameext() tag),_
					alt2list(_
						"",_
						"Nasal",_
						"Brim",_
						"Cheek Guard",_
						"Wide Cheek Guard",_
						"Spectacle",_
						"Visor"_
						),_
						comment(// output to coverage() tag),_
				alt3list(_
						"",_
						"1/6",_
						"1/6*",_
						"2/6",_
						"3/6",_
						"1/6",_
						"5/6"_
						)_
				),_
		#ChoiceList(_
					name(Padding),_
					title(Helmet Padding),_
					default(2),_
					text(Does this helmet include Padding:),_
					picksallowed(1),_
					method(bynumber),_
						list(_
						"No Padding",_
						"Padding"_
						),_
						comment(// unused?),_
						aliaslist(_
						"",_
						""_
						),_
						comment(// output to nameext() tag),_
						alt1list(_
						"",_
						", Padding"_
						),_
						comment(// output to gives() tag),_
						alt2list(_
						"",_
						{=+@if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1) to me::dr listas "Padding", +@round(50 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::basecost listas "",  + @round(6 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::baseweight listas ""}_
						)_
				)_
	), noresync(yes)

"Layered Leather, Heavy (%Helmet_Alt1List%)", gives(%Paddingalt2list%), page(LT100-110),_
	displayname(Layered Leather, Heavy (Build-your-own Helmet)),_
	location(%Helmet_AliasList%%options1alias%%optionsalt1List%), coverage(%Helmet_Alt2List%%Options1alias%%OptionsAlt3List%),_
	mods(Equipment, Helmet, Armor, Armor - Organic, Armor - Leather),_
	techlvl(1), notes(), don(30), dr(4), displaycost(525/base), displayweight(35/base), basecost(@round(525 * me::basecostmultiplier,2)), baseweight(@round(35 * me::basecostmultiplier,2)),_
	description(TL:1 DR:4 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%),_
	paddingcost(%Helmet_Cost1%), basecostmultiplier(_
		(_
			%Helmet_Cost1% _
		) *  _
		(_
		%optionsCost5% + %optionsCost4% + %optionsCost3% + %optionsCost2% + %optionsCost1% + 100_
		)/10000 _
	),_
	x(_
		#ChoiceList(_
				name(Helmet_),_
				title(Armor Location List),_
				text(Please select the type of helmet:),_
				picksallowed(1),_
				method(bynumber),_
					list(_
						"Pot Helm - Skull"=20,_
						"Bascinet - Skull, Face (1/6)"=25,_
						"Full Helm - Skull, Face"=30,_
						"Coif - Skull, Face (1/6), Neck"=30,_
						"Coif, Long - Skull, Face (1/6), Neck, Shoulders"=45,_
						"Greathelm - Skull, Face, Neck"=35_
						),_
						comment(// output to location() tag),_
				aliaslist(_
						"Skull",_
						"Skull, Face (1/6)",_
						"Head",_
						"Skull, Face (1/6), Neck",_
						"Skull, Face (1/6), Neck, Shoulders",_
						"Head, Neck"_
						),_
						comment(// output to nameext() tag),_
				alt1list(_
						"Pot Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Bascinet%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Full Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Long Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Greathelm%options1alias%%optionsalt2list%%Paddingalt1list%"_
						),_
						comment(// output to coverage() tag),_
				alt2list(_
						"1",_
						"1, 1/6",_
						"1",_
						"1, 1/6, 1",_
						"1, 1/6, 1, 1",_
						"1, 1"_
						)_
				),_
		#ChoiceList(_
				name(options),_
				title(Helmet Options List),_
				text(Please select any helmet options. A Visor replaces Cheek Guards, Spectacle, and Nasal options. A Bascinet already covers the ears, precluding the Wide Cheek Guards option.),_
				picksallowed(atleast 1, upto 4),_
				method(bynumber),_
					list(_
						"_No Options"=0,_
						"Nasal (1/6)"=5,_
						"Brim (1/6*)"=15,_
						"Cheek Guard (2/6)"=10,_
						"Cheek Guard, Wide (3/6)"=15,_
						"Spectacle (1/6)"=5,_
						"Visor (5/6)"=25_
						),_
						comment(// output to nameext() tag),_
				aliaslist(_
						"",_
						", ",_
						", ",_
						", ",_
						", ",_
						", ",_
						", "_
						),_
						comment(// output to locations() tag),_
				alt1list(_
						"",_
						"Face (1/6)",_
						"Face (1/6*)",_
						"Face (2/6)",_
						"Face (3/6)",_
						"Face (1/6)",_
						"Face (5/6)"_
						),_
						comment(// output to nameext() tag),_
					alt2list(_
						"",_
						"Nasal",_
						"Brim",_
						"Cheek Guard",_
						"Wide Cheek Guard",_
						"Spectacle",_
						"Visor"_
						),_
						comment(// output to coverage() tag),_
				alt3list(_
						"",_
						"1/6",_
						"1/6*",_
						"2/6",_
						"3/6",_
						"1/6",_
						"5/6"_
						)_
				),_
		#ChoiceList(_
					name(Padding),_
					title(Helmet Padding),_
					default(2),_
					text(Does this helmet include Padding:),_
					picksallowed(1),_
					method(bynumber),_
						list(_
						"No Padding",_
						"Padding"_
						),_
						comment(// unused?),_
						aliaslist(_
						"",_
						""_
						),_
						comment(// output to nameext() tag),_
						alt1list(_
						"",_
						", Padding"_
						),_
						comment(// output to gives() tag),_
						alt2list(_
						"",_
						{=+@if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1) to me::dr listas "Padding", +@round(50 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::basecost listas "",  + @round(6 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::baseweight listas ""}_
						)_
				)_
	), noresync(yes)

"Scale, Light (%Helmet_Alt1List%)", gives(%Paddingalt2list%), page(LT100-110),_
	displayname(Scale, Light (Build-your-own Helmet)),_
	drnotes(_
				{Split DR: use the lower DR against crushing attacks.}_
			),_
	location(%Helmet_AliasList%%options1alias%%optionsalt1List%), coverage(%Helmet_Alt2List%%Options1alias%%OptionsAlt3List%), basedr(3), crushingdr(2),_
	mods(Equipment, Helmet, Armor, Armor - Metal, Armor - Scale),_
	techlvl(1), notes([4]), don(30), dr(3/2), displaycost(320/base), displayweight(16/base), basecost(@round(320 * me::basecostmultiplier,2)), baseweight(@round(16 * me::basecostmultiplier,2)),_
	description(TL:1 DR:3/2 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[4] Second DR value vs. crushing.),_
	paddingcost(%Helmet_Cost1%), basecostmultiplier(_
		(_
			%Helmet_Cost1% _
		) *  _
		(_
		%optionsCost5% + %optionsCost4% + %optionsCost3% + %optionsCost2% + %optionsCost1% + 100_
		)/10000 _
	),_
	x(_
		#ChoiceList(_
				name(Helmet_),_
				title(Armor Location List),_
				text(Please select the type of helmet:),_
				picksallowed(1),_
				method(bynumber),_
					list(_
						"Pot Helm - Skull"=20,_
						"Bascinet - Skull, Face (1/6)"=25,_
						"Full Helm - Skull, Face"=30,_
						"Coif - Skull, Face (1/6), Neck"=30,_
						"Coif, Long - Skull, Face (1/6), Neck, Shoulders"=45,_
						"Greathelm - Skull, Face, Neck"=35_
						),_
						comment(// output to location() tag),_
				aliaslist(_
						"Skull",_
						"Skull, Face (1/6)",_
						"Head",_
						"Skull, Face (1/6), Neck",_
						"Skull, Face (1/6), Neck, Shoulders",_
						"Head, Neck"_
						),_
						comment(// output to nameext() tag),_
				alt1list(_
						"Pot Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Bascinet%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Full Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Long Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Greathelm%options1alias%%optionsalt2list%%Paddingalt1list%"_
						),_
						comment(// output to coverage() tag),_
				alt2list(_
						"1",_
						"1, 1/6",_
						"1",_
						"1, 1/6, 1",_
						"1, 1/6, 1, 1",_
						"1, 1"_
						)_
				),_
		#ChoiceList(_
				name(options),_
				title(Helmet Options List),_
				text(Please select any helmet options. A Visor replaces Cheek Guards, Spectacle, and Nasal options. A Bascinet already covers the ears, precluding the Wide Cheek Guards option.),_
				picksallowed(atleast 1, upto 4),_
				method(bynumber),_
					list(_
						"_No Options"=0,_
						"Nasal (1/6)"=5,_
						"Brim (1/6*)"=15,_
						"Cheek Guard (2/6)"=10,_
						"Cheek Guard, Wide (3/6)"=15,_
						"Spectacle (1/6)"=5,_
						"Visor (5/6)"=25_
						),_
						comment(// output to nameext() tag),_
				aliaslist(_
						"",_
						", ",_
						", ",_
						", ",_
						", ",_
						", ",_
						", "_
						),_
						comment(// output to locations() tag),_
				alt1list(_
						"",_
						"Face (1/6)",_
						"Face (1/6*)",_
						"Face (2/6)",_
						"Face (3/6)",_
						"Face (1/6)",_
						"Face (5/6)"_
						),_
						comment(// output to nameext() tag),_
					alt2list(_
						"",_
						"Nasal",_
						"Brim",_
						"Cheek Guard",_
						"Wide Cheek Guard",_
						"Spectacle",_
						"Visor"_
						),_
						comment(// output to coverage() tag),_
				alt3list(_
						"",_
						"1/6",_
						"1/6*",_
						"2/6",_
						"3/6",_
						"1/6",_
						"5/6"_
						)_
				),_
		#ChoiceList(_
					name(Padding),_
					title(Helmet Padding),_
					default(2),_
					text(Does this helmet include Padding:),_
					picksallowed(1),_
					method(bynumber),_
						list(_
						"No Padding",_
						"Padding"_
						),_
						comment(// unused?),_
						aliaslist(_
						"",_
						""_
						),_
						comment(// output to nameext() tag),_
						alt1list(_
						"",_
						", Padding"_
						),_
						comment(// output to gives() tag),_
						alt2list(_
						"",_
						{=+@if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1) to me::dr listas "Padding", +@round(50 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::basecost listas "",  + @round(6 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::baseweight listas ""}_
						)_
				)_
	), noresync(yes)

"Scale, Medium (%Helmet_Alt1List%)", gives(%Paddingalt2list%), page(LT100-110),_
	displayname(Scale, Medium (Build-your-own Helmet)),_
	drnotes(_
				{Split DR: use the lower DR against crushing attacks.}_
			),_
	location(%Helmet_AliasList%%options1alias%%optionsalt1List%), coverage(%Helmet_Alt2List%%Options1alias%%OptionsAlt3List%), basedr(4), crushingdr(3),_
	mods(Equipment, Helmet, Armor, Armor - Metal, Armor - Scale),_
	techlvl(1), notes([4]), don(30), dr(4/3), displaycost(550/base), displayweight(24/base), basecost(@round(550 * me::basecostmultiplier,2)), baseweight(@round(24 * me::basecostmultiplier,2)),_
	description(TL:1 DR:4/3 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[4] Second DR value vs. crushing.),_
	paddingcost(%Helmet_Cost1%), basecostmultiplier(_
		(_
			%Helmet_Cost1% _
		) *  _
		(_
		%optionsCost5% + %optionsCost4% + %optionsCost3% + %optionsCost2% + %optionsCost1% + 100_
		)/10000 _
	),_
	x(_
		#ChoiceList(_
				name(Helmet_),_
				title(Armor Location List),_
				text(Please select the type of helmet:),_
				picksallowed(1),_
				method(bynumber),_
					list(_
						"Pot Helm - Skull"=20,_
						"Bascinet - Skull, Face (1/6)"=25,_
						"Full Helm - Skull, Face"=30,_
						"Coif - Skull, Face (1/6), Neck"=30,_
						"Coif, Long - Skull, Face (1/6), Neck, Shoulders"=45,_
						"Greathelm - Skull, Face, Neck"=35_
						),_
						comment(// output to location() tag),_
				aliaslist(_
						"Skull",_
						"Skull, Face (1/6)",_
						"Head",_
						"Skull, Face (1/6), Neck",_
						"Skull, Face (1/6), Neck, Shoulders",_
						"Head, Neck"_
						),_
						comment(// output to nameext() tag),_
				alt1list(_
						"Pot Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Bascinet%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Full Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Long Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Greathelm%options1alias%%optionsalt2list%%Paddingalt1list%"_
						),_
						comment(// output to coverage() tag),_
				alt2list(_
						"1",_
						"1, 1/6",_
						"1",_
						"1, 1/6, 1",_
						"1, 1/6, 1, 1",_
						"1, 1"_
						)_
				),_
		#ChoiceList(_
				name(options),_
				title(Helmet Options List),_
				text(Please select any helmet options. A Visor replaces Cheek Guards, Spectacle, and Nasal options. A Bascinet already covers the ears, precluding the Wide Cheek Guards option.),_
				picksallowed(atleast 1, upto 4),_
				method(bynumber),_
					list(_
						"_No Options"=0,_
						"Nasal (1/6)"=5,_
						"Brim (1/6*)"=15,_
						"Cheek Guard (2/6)"=10,_
						"Cheek Guard, Wide (3/6)"=15,_
						"Spectacle (1/6)"=5,_
						"Visor (5/6)"=25_
						),_
						comment(// output to nameext() tag),_
				aliaslist(_
						"",_
						", ",_
						", ",_
						", ",_
						", ",_
						", ",_
						", "_
						),_
						comment(// output to locations() tag),_
				alt1list(_
						"",_
						"Face (1/6)",_
						"Face (1/6*)",_
						"Face (2/6)",_
						"Face (3/6)",_
						"Face (1/6)",_
						"Face (5/6)"_
						),_
						comment(// output to nameext() tag),_
					alt2list(_
						"",_
						"Nasal",_
						"Brim",_
						"Cheek Guard",_
						"Wide Cheek Guard",_
						"Spectacle",_
						"Visor"_
						),_
						comment(// output to coverage() tag),_
				alt3list(_
						"",_
						"1/6",_
						"1/6*",_
						"2/6",_
						"3/6",_
						"1/6",_
						"5/6"_
						)_
				),_
		#ChoiceList(_
					name(Padding),_
					title(Helmet Padding),_
					default(2),_
					text(Does this helmet include Padding:),_
					picksallowed(1),_
					method(bynumber),_
						list(_
						"No Padding",_
						"Padding"_
						),_
						comment(// unused?),_
						aliaslist(_
						"",_
						""_
						),_
						comment(// output to nameext() tag),_
						alt1list(_
						"",_
						", Padding"_
						),_
						comment(// output to gives() tag),_
						alt2list(_
						"",_
						{=+@if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1) to me::dr listas "Padding", +@round(50 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::basecost listas "",  + @round(6 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::baseweight listas ""}_
						)_
				)_
	), noresync(yes)

"Scale, Heavy (%Helmet_Alt1List%)", gives(%Paddingalt2list%), page(LT100-110),_
	displayname(Scale, Heavy (Build-your-own Helmet)),_
	location(%Helmet_AliasList%%options1alias%%optionsalt1List%), coverage(%Helmet_Alt2List%%Options1alias%%OptionsAlt3List%),_
	mods(Equipment, Helmet, Armor, Armor - Metal, Armor - Scale),_
	techlvl(1), notes(), don(30), dr(5), displaycost(1100/base), displayweight(32/base), basecost(@round(1100 * me::basecostmultiplier,2)), baseweight(@round(32 * me::basecostmultiplier,2)),_
	description(TL:1 DR:5 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%),_
	paddingcost(%Helmet_Cost1%), basecostmultiplier(_
		(_
			%Helmet_Cost1% _
		) *  _
		(_
		%optionsCost5% + %optionsCost4% + %optionsCost3% + %optionsCost2% + %optionsCost1% + 100_
		)/10000 _
	),_
	x(_
		#ChoiceList(_
				name(Helmet_),_
				title(Armor Location List),_
				text(Please select the type of helmet:),_
				picksallowed(1),_
				method(bynumber),_
					list(_
						"Pot Helm - Skull"=20,_
						"Bascinet - Skull, Face (1/6)"=25,_
						"Full Helm - Skull, Face"=30,_
						"Coif - Skull, Face (1/6), Neck"=30,_
						"Coif, Long - Skull, Face (1/6), Neck, Shoulders"=45,_
						"Greathelm - Skull, Face, Neck"=35_
						),_
						comment(// output to location() tag),_
				aliaslist(_
						"Skull",_
						"Skull, Face (1/6)",_
						"Head",_
						"Skull, Face (1/6), Neck",_
						"Skull, Face (1/6), Neck, Shoulders",_
						"Head, Neck"_
						),_
						comment(// output to nameext() tag),_
				alt1list(_
						"Pot Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Bascinet%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Full Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Long Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Greathelm%options1alias%%optionsalt2list%%Paddingalt1list%"_
						),_
						comment(// output to coverage() tag),_
				alt2list(_
						"1",_
						"1, 1/6",_
						"1",_
						"1, 1/6, 1",_
						"1, 1/6, 1, 1",_
						"1, 1"_
						)_
				),_
		#ChoiceList(_
				name(options),_
				title(Helmet Options List),_
				text(Please select any helmet options. A Visor replaces Cheek Guards, Spectacle, and Nasal options. A Bascinet already covers the ears, precluding the Wide Cheek Guards option.),_
				picksallowed(atleast 1, upto 4),_
				method(bynumber),_
					list(_
						"_No Options"=0,_
						"Nasal (1/6)"=5,_
						"Brim (1/6*)"=15,_
						"Cheek Guard (2/6)"=10,_
						"Cheek Guard, Wide (3/6)"=15,_
						"Spectacle (1/6)"=5,_
						"Visor (5/6)"=25_
						),_
						comment(// output to nameext() tag),_
				aliaslist(_
						"",_
						", ",_
						", ",_
						", ",_
						", ",_
						", ",_
						", "_
						),_
						comment(// output to locations() tag),_
				alt1list(_
						"",_
						"Face (1/6)",_
						"Face (1/6*)",_
						"Face (2/6)",_
						"Face (3/6)",_
						"Face (1/6)",_
						"Face (5/6)"_
						),_
						comment(// output to nameext() tag),_
					alt2list(_
						"",_
						"Nasal",_
						"Brim",_
						"Cheek Guard",_
						"Wide Cheek Guard",_
						"Spectacle",_
						"Visor"_
						),_
						comment(// output to coverage() tag),_
				alt3list(_
						"",_
						"1/6",_
						"1/6*",_
						"2/6",_
						"3/6",_
						"1/6",_
						"5/6"_
						)_
				),_
		#ChoiceList(_
					name(Padding),_
					title(Helmet Padding),_
					default(2),_
					text(Does this helmet include Padding:),_
					picksallowed(1),_
					method(bynumber),_
						list(_
						"No Padding",_
						"Padding"_
						),_
						comment(// unused?),_
						aliaslist(_
						"",_
						""_
						),_
						comment(// output to nameext() tag),_
						alt1list(_
						"",_
						", Padding"_
						),_
						comment(// output to gives() tag),_
						alt2list(_
						"",_
						{=+@if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1) to me::dr listas "Padding", +@round(50 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::basecost listas "",  + @round(6 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::baseweight listas ""}_
						)_
				)_
	), noresync(yes)

"Hardened Leather, Medium (%Helmet_Alt1List%)", gives(%Paddingalt2list%), page(LT100-110),_
	displayname(Hardened Leather, Medium (Build-your-own Helmet)),_
	location(%Helmet_AliasList%%options1alias%%optionsalt1List%), coverage(%Helmet_Alt2List%%Options1alias%%OptionsAlt3List%),_
	mods(Equipment, Helmet, Armor, Armor - Organic, Armor - Leather),_
	techlvl(2), notes(), don(30), dr(2), displaycost(125/base), displayweight(15/base), basecost(@round(125 * me::basecostmultiplier,2)), baseweight(@round(15 * me::basecostmultiplier,2)),_
	description(TL:2 DR:2 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%),_
	paddingcost(%Helmet_Cost1%), basecostmultiplier(_
		(_
			%Helmet_Cost1% _
		) *  _
		(_
		%optionsCost5% + %optionsCost4% + %optionsCost3% + %optionsCost2% + %optionsCost1% + 100_
		)/10000 _
	),_
	x(_
		#ChoiceList(_
				name(Helmet_),_
				title(Armor Location List),_
				text(Please select the type of helmet:),_
				picksallowed(1),_
				method(bynumber),_
					list(_
						"Pot Helm - Skull"=20,_
						"Bascinet - Skull, Face (1/6)"=25,_
						"Full Helm - Skull, Face"=30,_
						"Coif - Skull, Face (1/6), Neck"=30,_
						"Coif, Long - Skull, Face (1/6), Neck, Shoulders"=45,_
						"Greathelm - Skull, Face, Neck"=35_
						),_
						comment(// output to location() tag),_
				aliaslist(_
						"Skull",_
						"Skull, Face (1/6)",_
						"Head",_
						"Skull, Face (1/6), Neck",_
						"Skull, Face (1/6), Neck, Shoulders",_
						"Head, Neck"_
						),_
						comment(// output to nameext() tag),_
				alt1list(_
						"Pot Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Bascinet%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Full Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Long Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Greathelm%options1alias%%optionsalt2list%%Paddingalt1list%"_
						),_
						comment(// output to coverage() tag),_
				alt2list(_
						"1",_
						"1, 1/6",_
						"1",_
						"1, 1/6, 1",_
						"1, 1/6, 1, 1",_
						"1, 1"_
						)_
				),_
		#ChoiceList(_
				name(options),_
				title(Helmet Options List),_
				text(Please select any helmet options. A Visor replaces Cheek Guards, Spectacle, and Nasal options. A Bascinet already covers the ears, precluding the Wide Cheek Guards option.),_
				picksallowed(atleast 1, upto 4),_
				method(bynumber),_
					list(_
						"_No Options"=0,_
						"Nasal (1/6)"=5,_
						"Brim (1/6*)"=15,_
						"Cheek Guard (2/6)"=10,_
						"Cheek Guard, Wide (3/6)"=15,_
						"Spectacle (1/6)"=5,_
						"Visor (5/6)"=25_
						),_
						comment(// output to nameext() tag),_
				aliaslist(_
						"",_
						", ",_
						", ",_
						", ",_
						", ",_
						", ",_
						", "_
						),_
						comment(// output to locations() tag),_
				alt1list(_
						"",_
						"Face (1/6)",_
						"Face (1/6*)",_
						"Face (2/6)",_
						"Face (3/6)",_
						"Face (1/6)",_
						"Face (5/6)"_
						),_
						comment(// output to nameext() tag),_
					alt2list(_
						"",_
						"Nasal",_
						"Brim",_
						"Cheek Guard",_
						"Wide Cheek Guard",_
						"Spectacle",_
						"Visor"_
						),_
						comment(// output to coverage() tag),_
				alt3list(_
						"",_
						"1/6",_
						"1/6*",_
						"2/6",_
						"3/6",_
						"1/6",_
						"5/6"_
						)_
				),_
		#ChoiceList(_
					name(Padding),_
					title(Helmet Padding),_
					default(2),_
					text(Does this helmet include Padding:),_
					picksallowed(1),_
					method(bynumber),_
						list(_
						"No Padding",_
						"Padding"_
						),_
						comment(// unused?),_
						aliaslist(_
						"",_
						""_
						),_
						comment(// output to nameext() tag),_
						alt1list(_
						"",_
						", Padding"_
						),_
						comment(// output to gives() tag),_
						alt2list(_
						"",_
						{=+@if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1) to me::dr listas "Padding", +@round(50 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::basecost listas "",  + @round(6 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::baseweight listas ""}_
						)_
				)_
	), noresync(yes)

"Hardened Leather, Heavy (%Helmet_Alt1List%)", gives(%Paddingalt2list%), page(LT100-110),_
	displayname(Hardened Leather, Heavy (Build-your-own Helmet)),_
	location(%Helmet_AliasList%%options1alias%%optionsalt1List%), coverage(%Helmet_Alt2List%%Options1alias%%OptionsAlt3List%),_
	mods(Equipment, Helmet, Armor, Armor - Organic, Armor - Leather),_
	techlvl(2), notes(), don(30), dr(3), displaycost(250/base), displayweight(25/base), basecost(@round(250 * me::basecostmultiplier,2)), baseweight(@round(25 * me::basecostmultiplier,2)),_
	description(TL:2 DR:3 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%),_
	paddingcost(%Helmet_Cost1%), basecostmultiplier(_
		(_
			%Helmet_Cost1% _
		) *  _
		(_
		%optionsCost5% + %optionsCost4% + %optionsCost3% + %optionsCost2% + %optionsCost1% + 100_
		)/10000 _
	),_
	x(_
		#ChoiceList(_
				name(Helmet_),_
				title(Armor Location List),_
				text(Please select the type of helmet:),_
				picksallowed(1),_
				method(bynumber),_
					list(_
						"Pot Helm - Skull"=20,_
						"Bascinet - Skull, Face (1/6)"=25,_
						"Full Helm - Skull, Face"=30,_
						"Coif - Skull, Face (1/6), Neck"=30,_
						"Coif, Long - Skull, Face (1/6), Neck, Shoulders"=45,_
						"Greathelm - Skull, Face, Neck"=35_
						),_
						comment(// output to location() tag),_
				aliaslist(_
						"Skull",_
						"Skull, Face (1/6)",_
						"Head",_
						"Skull, Face (1/6), Neck",_
						"Skull, Face (1/6), Neck, Shoulders",_
						"Head, Neck"_
						),_
						comment(// output to nameext() tag),_
				alt1list(_
						"Pot Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Bascinet%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Full Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Long Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Greathelm%options1alias%%optionsalt2list%%Paddingalt1list%"_
						),_
						comment(// output to coverage() tag),_
				alt2list(_
						"1",_
						"1, 1/6",_
						"1",_
						"1, 1/6, 1",_
						"1, 1/6, 1, 1",_
						"1, 1"_
						)_
				),_
		#ChoiceList(_
				name(options),_
				title(Helmet Options List),_
				text(Please select any helmet options. A Visor replaces Cheek Guards, Spectacle, and Nasal options. A Bascinet already covers the ears, precluding the Wide Cheek Guards option.),_
				picksallowed(atleast 1, upto 4),_
				method(bynumber),_
					list(_
						"_No Options"=0,_
						"Nasal (1/6)"=5,_
						"Brim (1/6*)"=15,_
						"Cheek Guard (2/6)"=10,_
						"Cheek Guard, Wide (3/6)"=15,_
						"Spectacle (1/6)"=5,_
						"Visor (5/6)"=25_
						),_
						comment(// output to nameext() tag),_
				aliaslist(_
						"",_
						", ",_
						", ",_
						", ",_
						", ",_
						", ",_
						", "_
						),_
						comment(// output to locations() tag),_
				alt1list(_
						"",_
						"Face (1/6)",_
						"Face (1/6*)",_
						"Face (2/6)",_
						"Face (3/6)",_
						"Face (1/6)",_
						"Face (5/6)"_
						),_
						comment(// output to nameext() tag),_
					alt2list(_
						"",_
						"Nasal",_
						"Brim",_
						"Cheek Guard",_
						"Wide Cheek Guard",_
						"Spectacle",_
						"Visor"_
						),_
						comment(// output to coverage() tag),_
				alt3list(_
						"",_
						"1/6",_
						"1/6*",_
						"2/6",_
						"3/6",_
						"1/6",_
						"5/6"_
						)_
				),_
		#ChoiceList(_
					name(Padding),_
					title(Helmet Padding),_
					default(2),_
					text(Does this helmet include Padding:),_
					picksallowed(1),_
					method(bynumber),_
						list(_
						"No Padding",_
						"Padding"_
						),_
						comment(// unused?),_
						aliaslist(_
						"",_
						""_
						),_
						comment(// output to nameext() tag),_
						alt1list(_
						"",_
						", Padding"_
						),_
						comment(// output to gives() tag),_
						alt2list(_
						"",_
						{=+@if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1) to me::dr listas "Padding", +@round(50 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::basecost listas "",  + @round(6 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::baseweight listas ""}_
						)_
				)_
	), noresync(yes)

"Jack of Plates (%Helmet_Alt1List%)", gives(%Paddingalt2list%), page(LT100-110),_
	displayname(Jack of Plates (Build-your-own Helmet)),_
	drnotes(_
				{Split DR: use the lower DR against crushing attacks.}_
			),_
	location(%Helmet_AliasList%%options1alias%%optionsalt1List%), coverage(%Helmet_Alt2List%%Options1alias%%OptionsAlt3List%), basedr(3), crushingdr(2),_
	mods(Equipment, Helmet, Armor, Armor - Metal, Armor - Plate),_
	techlvl(2), notes([4]), don(30), dr(3/2), displaycost(300/base), displayweight(18/base), basecost(@round(300 * me::basecostmultiplier,2)), baseweight(@round(18 * me::basecostmultiplier,2)),_
	description(TL:2 DR:3/2 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[4] Second DR value vs. crushing.),_
	paddingcost(%Helmet_Cost1%), basecostmultiplier(_
		(_
			%Helmet_Cost1% _
		) *  _
		(_
		%optionsCost5% + %optionsCost4% + %optionsCost3% + %optionsCost2% + %optionsCost1% + 100_
		)/10000 _
	),_
	x(_
		#ChoiceList(_
				name(Helmet_),_
				title(Armor Location List),_
				text(Please select the type of helmet:),_
				picksallowed(1),_
				method(bynumber),_
					list(_
						"Pot Helm - Skull"=20,_
						"Bascinet - Skull, Face (1/6)"=25,_
						"Full Helm - Skull, Face"=30,_
						"Coif - Skull, Face (1/6), Neck"=30,_
						"Coif, Long - Skull, Face (1/6), Neck, Shoulders"=45,_
						"Greathelm - Skull, Face, Neck"=35_
						),_
						comment(// output to location() tag),_
				aliaslist(_
						"Skull",_
						"Skull, Face (1/6)",_
						"Head",_
						"Skull, Face (1/6), Neck",_
						"Skull, Face (1/6), Neck, Shoulders",_
						"Head, Neck"_
						),_
						comment(// output to nameext() tag),_
				alt1list(_
						"Pot Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Bascinet%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Full Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Long Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Greathelm%options1alias%%optionsalt2list%%Paddingalt1list%"_
						),_
						comment(// output to coverage() tag),_
				alt2list(_
						"1",_
						"1, 1/6",_
						"1",_
						"1, 1/6, 1",_
						"1, 1/6, 1, 1",_
						"1, 1"_
						)_
				),_
		#ChoiceList(_
				name(options),_
				title(Helmet Options List),_
				text(Please select any helmet options. A Visor replaces Cheek Guards, Spectacle, and Nasal options. A Bascinet already covers the ears, precluding the Wide Cheek Guards option.),_
				picksallowed(atleast 1, upto 4),_
				method(bynumber),_
					list(_
						"_No Options"=0,_
						"Nasal (1/6)"=5,_
						"Brim (1/6*)"=15,_
						"Cheek Guard (2/6)"=10,_
						"Cheek Guard, Wide (3/6)"=15,_
						"Spectacle (1/6)"=5,_
						"Visor (5/6)"=25_
						),_
						comment(// output to nameext() tag),_
				aliaslist(_
						"",_
						", ",_
						", ",_
						", ",_
						", ",_
						", ",_
						", "_
						),_
						comment(// output to locations() tag),_
				alt1list(_
						"",_
						"Face (1/6)",_
						"Face (1/6*)",_
						"Face (2/6)",_
						"Face (3/6)",_
						"Face (1/6)",_
						"Face (5/6)"_
						),_
						comment(// output to nameext() tag),_
					alt2list(_
						"",_
						"Nasal",_
						"Brim",_
						"Cheek Guard",_
						"Wide Cheek Guard",_
						"Spectacle",_
						"Visor"_
						),_
						comment(// output to coverage() tag),_
				alt3list(_
						"",_
						"1/6",_
						"1/6*",_
						"2/6",_
						"3/6",_
						"1/6",_
						"5/6"_
						)_
				),_
		#ChoiceList(_
					name(Padding),_
					title(Helmet Padding),_
					default(2),_
					text(Does this helmet include Padding:),_
					picksallowed(1),_
					method(bynumber),_
						list(_
						"No Padding",_
						"Padding"_
						),_
						comment(// unused?),_
						aliaslist(_
						"",_
						""_
						),_
						comment(// output to nameext() tag),_
						alt1list(_
						"",_
						", Padding"_
						),_
						comment(// output to gives() tag),_
						alt2list(_
						"",_
						{=+@if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1) to me::dr listas "Padding", +@round(50 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::basecost listas "",  + @round(6 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::baseweight listas ""}_
						)_
				)_
	), noresync(yes)

"Mail, Light (%Helmet_Alt1List%)", gives(%Paddingalt2list%), page(LT100-110),_
	displayname(Mail, Light (Build-your-own Helmet)),_
	drnotes(_
				{Split DR: use the lower DR against crushing attacks.}_
			),_
	location(%Helmet_AliasList%%options1alias%%optionsalt1List%), coverage(%Helmet_Alt2List%%Options1alias%%OptionsAlt3List%), basedr(3*), crushingdr(1*),_
	mods(Equipment, Helmet, Armor, Armor - Metal, Armor - Mail),_
	techlvl(2), notes([5]), don(15), dr(3/1*), displaycost(500/base), displayweight(12/base), basecost(@round(500 * me::basecostmultiplier,2)), baseweight(@round(12 * me::basecostmultiplier,2)),_
	description(TL:2 DR:3/1* Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[5] Second DR value vs. crushing.),_
	paddingcost(%Helmet_Cost1%), basecostmultiplier(_
		(_
			%Helmet_Cost1% _
		) *  _
		(_
		%optionsCost5% + %optionsCost4% + %optionsCost3% + %optionsCost2% + %optionsCost1% + 100_
		)/10000 _
	),_
	x(_
		#ChoiceList(_
				name(Helmet_),_
				title(Armor Location List),_
				text(Please select the type of helmet:),_
				picksallowed(1),_
				method(bynumber),_
					list(_
						"Pot Helm - Skull"=20,_
						"Bascinet - Skull, Face (1/6)"=25,_
						"Full Helm - Skull, Face"=30,_
						"Coif - Skull, Face (1/6), Neck"=30,_
						"Coif, Long - Skull, Face (1/6), Neck, Shoulders"=45,_
						"Greathelm - Skull, Face, Neck"=35_
						),_
						comment(// output to location() tag),_
				aliaslist(_
						"Skull",_
						"Skull, Face (1/6)",_
						"Head",_
						"Skull, Face (1/6), Neck",_
						"Skull, Face (1/6), Neck, Shoulders",_
						"Head, Neck"_
						),_
						comment(// output to nameext() tag),_
				alt1list(_
						"Pot Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Bascinet%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Full Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Long Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Greathelm%options1alias%%optionsalt2list%%Paddingalt1list%"_
						),_
						comment(// output to coverage() tag),_
				alt2list(_
						"1",_
						"1, 1/6",_
						"1",_
						"1, 1/6, 1",_
						"1, 1/6, 1, 1",_
						"1, 1"_
						)_
				),_
		#ChoiceList(_
				name(options),_
				title(Helmet Options List),_
				text(Please select any helmet options. A Visor replaces Cheek Guards, Spectacle, and Nasal options. A Bascinet already covers the ears, precluding the Wide Cheek Guards option.),_
				picksallowed(atleast 1, upto 4),_
				method(bynumber),_
					list(_
						"_No Options"=0,_
						"Nasal (1/6)"=5,_
						"Brim (1/6*)"=15,_
						"Cheek Guard (2/6)"=10,_
						"Cheek Guard, Wide (3/6)"=15,_
						"Spectacle (1/6)"=5,_
						"Visor (5/6)"=25_
						),_
						comment(// output to nameext() tag),_
				aliaslist(_
						"",_
						", ",_
						", ",_
						", ",_
						", ",_
						", ",_
						", "_
						),_
						comment(// output to locations() tag),_
				alt1list(_
						"",_
						"Face (1/6)",_
						"Face (1/6*)",_
						"Face (2/6)",_
						"Face (3/6)",_
						"Face (1/6)",_
						"Face (5/6)"_
						),_
						comment(// output to nameext() tag),_
					alt2list(_
						"",_
						"Nasal",_
						"Brim",_
						"Cheek Guard",_
						"Wide Cheek Guard",_
						"Spectacle",_
						"Visor"_
						),_
						comment(// output to coverage() tag),_
				alt3list(_
						"",_
						"1/6",_
						"1/6*",_
						"2/6",_
						"3/6",_
						"1/6",_
						"5/6"_
						)_
				),_
		#ChoiceList(_
					name(Padding),_
					title(Helmet Padding),_
					default(2),_
					text(Does this helmet include Padding:),_
					picksallowed(1),_
					method(bynumber),_
						list(_
						"No Padding",_
						"Padding"_
						),_
						comment(// unused?),_
						aliaslist(_
						"",_
						""_
						),_
						comment(// output to nameext() tag),_
						alt1list(_
						"",_
						", Padding"_
						),_
						comment(// output to gives() tag),_
						alt2list(_
						"",_
						{=+@if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1) to me::dr listas "Padding", +@round(50 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::basecost listas "",  + @round(6 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::baseweight listas ""}_
						)_
				)_
	), noresync(yes)

"Mail, Fine (%Helmet_Alt1List%)", gives(%Paddingalt2list%), page(LT100-110),_
	displayname(Mail, Fine (Build-your-own Helmet)),_
	drnotes(_
				{Split DR: use the lower DR against crushing attacks.}_
			),_
	location(%Helmet_AliasList%%options1alias%%optionsalt1List%), coverage(%Helmet_Alt2List%%Options1alias%%OptionsAlt3List%), basedr(4*), crushingdr(2*),_
	mods(Equipment, Helmet, Armor, Armor - Metal, Armor - Mail),_
	techlvl(2), notes([5]), don(15), dr(4/2*), displaycost(900/base), displayweight(15/base), basecost(@round(900 * me::basecostmultiplier,2)), baseweight(@round(15 * me::basecostmultiplier,2)),_
	description(TL:2 DR:4/2* Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[5] Second DR value vs. crushing.),_
	paddingcost(%Helmet_Cost1%), basecostmultiplier(_
		(_
			%Helmet_Cost1% _
		) *  _
		(_
		%optionsCost5% + %optionsCost4% + %optionsCost3% + %optionsCost2% + %optionsCost1% + 100_
		)/10000 _
	),_
	x(_
		#ChoiceList(_
				name(Helmet_),_
				title(Armor Location List),_
				text(Please select the type of helmet:),_
				picksallowed(1),_
				method(bynumber),_
					list(_
						"Pot Helm - Skull"=20,_
						"Bascinet - Skull, Face (1/6)"=25,_
						"Full Helm - Skull, Face"=30,_
						"Coif - Skull, Face (1/6), Neck"=30,_
						"Coif, Long - Skull, Face (1/6), Neck, Shoulders"=45,_
						"Greathelm - Skull, Face, Neck"=35_
						),_
						comment(// output to location() tag),_
				aliaslist(_
						"Skull",_
						"Skull, Face (1/6)",_
						"Head",_
						"Skull, Face (1/6), Neck",_
						"Skull, Face (1/6), Neck, Shoulders",_
						"Head, Neck"_
						),_
						comment(// output to nameext() tag),_
				alt1list(_
						"Pot Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Bascinet%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Full Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Long Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Greathelm%options1alias%%optionsalt2list%%Paddingalt1list%"_
						),_
						comment(// output to coverage() tag),_
				alt2list(_
						"1",_
						"1, 1/6",_
						"1",_
						"1, 1/6, 1",_
						"1, 1/6, 1, 1",_
						"1, 1"_
						)_
				),_
		#ChoiceList(_
				name(options),_
				title(Helmet Options List),_
				text(Please select any helmet options. A Visor replaces Cheek Guards, Spectacle, and Nasal options. A Bascinet already covers the ears, precluding the Wide Cheek Guards option.),_
				picksallowed(atleast 1, upto 4),_
				method(bynumber),_
					list(_
						"_No Options"=0,_
						"Nasal (1/6)"=5,_
						"Brim (1/6*)"=15,_
						"Cheek Guard (2/6)"=10,_
						"Cheek Guard, Wide (3/6)"=15,_
						"Spectacle (1/6)"=5,_
						"Visor (5/6)"=25_
						),_
						comment(// output to nameext() tag),_
				aliaslist(_
						"",_
						", ",_
						", ",_
						", ",_
						", ",_
						", ",_
						", "_
						),_
						comment(// output to locations() tag),_
				alt1list(_
						"",_
						"Face (1/6)",_
						"Face (1/6*)",_
						"Face (2/6)",_
						"Face (3/6)",_
						"Face (1/6)",_
						"Face (5/6)"_
						),_
						comment(// output to nameext() tag),_
					alt2list(_
						"",_
						"Nasal",_
						"Brim",_
						"Cheek Guard",_
						"Wide Cheek Guard",_
						"Spectacle",_
						"Visor"_
						),_
						comment(// output to coverage() tag),_
				alt3list(_
						"",_
						"1/6",_
						"1/6*",_
						"2/6",_
						"3/6",_
						"1/6",_
						"5/6"_
						)_
				),_
		#ChoiceList(_
					name(Padding),_
					title(Helmet Padding),_
					default(2),_
					text(Does this helmet include Padding:),_
					picksallowed(1),_
					method(bynumber),_
						list(_
						"No Padding",_
						"Padding"_
						),_
						comment(// unused?),_
						aliaslist(_
						"",_
						""_
						),_
						comment(// output to nameext() tag),_
						alt1list(_
						"",_
						", Padding"_
						),_
						comment(// output to gives() tag),_
						alt2list(_
						"",_
						{=+@if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1) to me::dr listas "Padding", +@round(50 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::basecost listas "",  + @round(6 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::baseweight listas ""}_
						)_
				)_
	), noresync(yes)

"Mail, Heavy (%Helmet_Alt1List%)", gives(%Paddingalt2list%), page(LT100-110),_
	displayname(Mail, Heavy (Build-your-own Helmet)),_
	drnotes(_
				{Split DR: use the lower DR against crushing attacks.}_
			),_
	location(%Helmet_AliasList%%options1alias%%optionsalt1List%), coverage(%Helmet_Alt2List%%Options1alias%%OptionsAlt3List%), basedr(5*), crushingdr(3*),_
	mods(Equipment, Helmet, Armor, Armor - Metal, Armor - Mail),_
	techlvl(2), notes([5]), don(15), dr(5/3*), displaycost(1200/base), displayweight(18/base), basecost(@round(1200 * me::basecostmultiplier,2)), baseweight(@round(18 * me::basecostmultiplier,2)),_
	description(TL:2 DR:5/3* Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[5] Second DR value vs. crushing.),_
	paddingcost(%Helmet_Cost1%), basecostmultiplier(_
		(_
			%Helmet_Cost1% _
		) *  _
		(_
		%optionsCost5% + %optionsCost4% + %optionsCost3% + %optionsCost2% + %optionsCost1% + 100_
		)/10000 _
	),_
	x(_
		#ChoiceList(_
				name(Helmet_),_
				title(Armor Location List),_
				text(Please select the type of helmet:),_
				picksallowed(1),_
				method(bynumber),_
					list(_
						"Pot Helm - Skull"=20,_
						"Bascinet - Skull, Face (1/6)"=25,_
						"Full Helm - Skull, Face"=30,_
						"Coif - Skull, Face (1/6), Neck"=30,_
						"Coif, Long - Skull, Face (1/6), Neck, Shoulders"=45,_
						"Greathelm - Skull, Face, Neck"=35_
						),_
						comment(// output to location() tag),_
				aliaslist(_
						"Skull",_
						"Skull, Face (1/6)",_
						"Head",_
						"Skull, Face (1/6), Neck",_
						"Skull, Face (1/6), Neck, Shoulders",_
						"Head, Neck"_
						),_
						comment(// output to nameext() tag),_
				alt1list(_
						"Pot Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Bascinet%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Full Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Long Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Greathelm%options1alias%%optionsalt2list%%Paddingalt1list%"_
						),_
						comment(// output to coverage() tag),_
				alt2list(_
						"1",_
						"1, 1/6",_
						"1",_
						"1, 1/6, 1",_
						"1, 1/6, 1, 1",_
						"1, 1"_
						)_
				),_
		#ChoiceList(_
				name(options),_
				title(Helmet Options List),_
				text(Please select any helmet options. A Visor replaces Cheek Guards, Spectacle, and Nasal options. A Bascinet already covers the ears, precluding the Wide Cheek Guards option.),_
				picksallowed(atleast 1, upto 4),_
				method(bynumber),_
					list(_
						"_No Options"=0,_
						"Nasal (1/6)"=5,_
						"Brim (1/6*)"=15,_
						"Cheek Guard (2/6)"=10,_
						"Cheek Guard, Wide (3/6)"=15,_
						"Spectacle (1/6)"=5,_
						"Visor (5/6)"=25_
						),_
						comment(// output to nameext() tag),_
				aliaslist(_
						"",_
						", ",_
						", ",_
						", ",_
						", ",_
						", ",_
						", "_
						),_
						comment(// output to locations() tag),_
				alt1list(_
						"",_
						"Face (1/6)",_
						"Face (1/6*)",_
						"Face (2/6)",_
						"Face (3/6)",_
						"Face (1/6)",_
						"Face (5/6)"_
						),_
						comment(// output to nameext() tag),_
					alt2list(_
						"",_
						"Nasal",_
						"Brim",_
						"Cheek Guard",_
						"Wide Cheek Guard",_
						"Spectacle",_
						"Visor"_
						),_
						comment(// output to coverage() tag),_
				alt3list(_
						"",_
						"1/6",_
						"1/6*",_
						"2/6",_
						"3/6",_
						"1/6",_
						"5/6"_
						)_
				),_
		#ChoiceList(_
					name(Padding),_
					title(Helmet Padding),_
					default(2),_
					text(Does this helmet include Padding:),_
					picksallowed(1),_
					method(bynumber),_
						list(_
						"No Padding",_
						"Padding"_
						),_
						comment(// unused?),_
						aliaslist(_
						"",_
						""_
						),_
						comment(// output to nameext() tag),_
						alt1list(_
						"",_
						", Padding"_
						),_
						comment(// output to gives() tag),_
						alt2list(_
						"",_
						{=+@if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1) to me::dr listas "Padding", +@round(50 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::basecost listas "",  + @round(6 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::baseweight listas ""}_
						)_
				)_
	), noresync(yes)

"Segmented Plate, Light (%Helmet_Alt1List%)", gives(%Paddingalt2list%), page(LT100-110),_
	displayname(Segmented Plate, Light (Build-your-own Helmet)),_
	location(%Helmet_AliasList%%options1alias%%optionsalt1List%), coverage(%Helmet_Alt2List%%Options1alias%%OptionsAlt3List%),_
	mods(Equipment, Helmet, Armor, Armor - Metal, Armor - Plate),_
	techlvl(2), notes(), don(45), dr(3), displaycost(600/base), displayweight(16/base), basecost(@round(600 * me::basecostmultiplier,2)), baseweight(@round(14 * me::basecostmultiplier,2)),_
	description(TL:2 DR:3 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%),_
	paddingcost(%Helmet_Cost1%), basecostmultiplier(_
		(_
			%Helmet_Cost1% _
		) *  _
		(_
		%optionsCost5% + %optionsCost4% + %optionsCost3% + %optionsCost2% + %optionsCost1% + 100_
		)/10000 _
	),_
	x(_
		#ChoiceList(_
				name(Helmet_),_
				title(Armor Location List),_
				text(Please select the type of helmet:),_
				picksallowed(1),_
				method(bynumber),_
					list(_
						"Pot Helm - Skull"=20,_
						"Bascinet - Skull, Face (1/6)"=25,_
						"Full Helm - Skull, Face"=30,_
						"Coif - Skull, Face (1/6), Neck"=30,_
						"Coif, Long - Skull, Face (1/6), Neck, Shoulders"=45,_
						"Greathelm - Skull, Face, Neck"=35_
						),_
						comment(// output to location() tag),_
				aliaslist(_
						"Skull",_
						"Skull, Face (1/6)",_
						"Head",_
						"Skull, Face (1/6), Neck",_
						"Skull, Face (1/6), Neck, Shoulders",_
						"Head, Neck"_
						),_
						comment(// output to nameext() tag),_
				alt1list(_
						"Pot Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Bascinet%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Full Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Long Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Greathelm%options1alias%%optionsalt2list%%Paddingalt1list%"_
						),_
						comment(// output to coverage() tag),_
				alt2list(_
						"1",_
						"1, 1/6",_
						"1",_
						"1, 1/6, 1",_
						"1, 1/6, 1, 1",_
						"1, 1"_
						)_
				),_
		#ChoiceList(_
				name(options),_
				title(Helmet Options List),_
				text(Please select any helmet options. A Visor replaces Cheek Guards, Spectacle, and Nasal options. A Bascinet already covers the ears, precluding the Wide Cheek Guards option.),_
				picksallowed(atleast 1, upto 4),_
				method(bynumber),_
					list(_
						"_No Options"=0,_
						"Nasal (1/6)"=5,_
						"Brim (1/6*)"=15,_
						"Cheek Guard (2/6)"=10,_
						"Cheek Guard, Wide (3/6)"=15,_
						"Spectacle (1/6)"=5,_
						"Visor (5/6)"=25_
						),_
						comment(// output to nameext() tag),_
				aliaslist(_
						"",_
						", ",_
						", ",_
						", ",_
						", ",_
						", ",_
						", "_
						),_
						comment(// output to locations() tag),_
				alt1list(_
						"",_
						"Face (1/6)",_
						"Face (1/6*)",_
						"Face (2/6)",_
						"Face (3/6)",_
						"Face (1/6)",_
						"Face (5/6)"_
						),_
						comment(// output to nameext() tag),_
					alt2list(_
						"",_
						"Nasal",_
						"Brim",_
						"Cheek Guard",_
						"Wide Cheek Guard",_
						"Spectacle",_
						"Visor"_
						),_
						comment(// output to coverage() tag),_
				alt3list(_
						"",_
						"1/6",_
						"1/6*",_
						"2/6",_
						"3/6",_
						"1/6",_
						"5/6"_
						)_
				),_
		#ChoiceList(_
					name(Padding),_
					title(Helmet Padding),_
					default(2),_
					text(Does this helmet include Padding:),_
					picksallowed(1),_
					method(bynumber),_
						list(_
						"No Padding",_
						"Padding"_
						),_
						comment(// unused?),_
						aliaslist(_
						"",_
						""_
						),_
						comment(// output to nameext() tag),_
						alt1list(_
						"",_
						", Padding"_
						),_
						comment(// output to gives() tag),_
						alt2list(_
						"",_
						{=+@if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1) to me::dr listas "Padding", +@round(50 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::basecost listas "",  + @round(6 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::baseweight listas ""}_
						)_
				)_
	), noresync(yes)

"Segmented Plate, Medium (%Helmet_Alt1List%)", gives(%Paddingalt2list%), page(LT100-110),_
	displayname(Segmented Plate, Medium (Build-your-own Helmet)),_
	location(%Helmet_AliasList%%options1alias%%optionsalt1List%), coverage(%Helmet_Alt2List%%Options1alias%%OptionsAlt3List%),_
	mods(Equipment, Helmet, Armor, Armor - Metal, Armor - Plate),_
	techlvl(2), notes(), don(45), dr(4), displaycost(900/base), displayweight(24/base), basecost(@round(900 * me::basecostmultiplier,2)), baseweight(@round(21 * me::basecostmultiplier,2)),_
	description(TL:2 DR:4 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%),_
	paddingcost(%Helmet_Cost1%), basecostmultiplier(_
		(_
			%Helmet_Cost1% _
		) *  _
		(_
		%optionsCost5% + %optionsCost4% + %optionsCost3% + %optionsCost2% + %optionsCost1% + 100_
		)/10000 _
	),_
	x(_
		#ChoiceList(_
				name(Helmet_),_
				title(Armor Location List),_
				text(Please select the type of helmet:),_
				picksallowed(1),_
				method(bynumber),_
					list(_
						"Pot Helm - Skull"=20,_
						"Bascinet - Skull, Face (1/6)"=25,_
						"Full Helm - Skull, Face"=30,_
						"Coif - Skull, Face (1/6), Neck"=30,_
						"Coif, Long - Skull, Face (1/6), Neck, Shoulders"=45,_
						"Greathelm - Skull, Face, Neck"=35_
						),_
						comment(// output to location() tag),_
				aliaslist(_
						"Skull",_
						"Skull, Face (1/6)",_
						"Head",_
						"Skull, Face (1/6), Neck",_
						"Skull, Face (1/6), Neck, Shoulders",_
						"Head, Neck"_
						),_
						comment(// output to nameext() tag),_
				alt1list(_
						"Pot Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Bascinet%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Full Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Long Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Greathelm%options1alias%%optionsalt2list%%Paddingalt1list%"_
						),_
						comment(// output to coverage() tag),_
				alt2list(_
						"1",_
						"1, 1/6",_
						"1",_
						"1, 1/6, 1",_
						"1, 1/6, 1, 1",_
						"1, 1"_
						)_
				),_
		#ChoiceList(_
				name(options),_
				title(Helmet Options List),_
				text(Please select any helmet options. A Visor replaces Cheek Guards, Spectacle, and Nasal options. A Bascinet already covers the ears, precluding the Wide Cheek Guards option.),_
				picksallowed(atleast 1, upto 4),_
				method(bynumber),_
					list(_
						"_No Options"=0,_
						"Nasal (1/6)"=5,_
						"Brim (1/6*)"=15,_
						"Cheek Guard (2/6)"=10,_
						"Cheek Guard, Wide (3/6)"=15,_
						"Spectacle (1/6)"=5,_
						"Visor (5/6)"=25_
						),_
						comment(// output to nameext() tag),_
				aliaslist(_
						"",_
						", ",_
						", ",_
						", ",_
						", ",_
						", ",_
						", "_
						),_
						comment(// output to locations() tag),_
				alt1list(_
						"",_
						"Face (1/6)",_
						"Face (1/6*)",_
						"Face (2/6)",_
						"Face (3/6)",_
						"Face (1/6)",_
						"Face (5/6)"_
						),_
						comment(// output to nameext() tag),_
					alt2list(_
						"",_
						"Nasal",_
						"Brim",_
						"Cheek Guard",_
						"Wide Cheek Guard",_
						"Spectacle",_
						"Visor"_
						),_
						comment(// output to coverage() tag),_
				alt3list(_
						"",_
						"1/6",_
						"1/6*",_
						"2/6",_
						"3/6",_
						"1/6",_
						"5/6"_
						)_
				),_
		#ChoiceList(_
					name(Padding),_
					title(Helmet Padding),_
					default(2),_
					text(Does this helmet include Padding:),_
					picksallowed(1),_
					method(bynumber),_
						list(_
						"No Padding",_
						"Padding"_
						),_
						comment(// unused?),_
						aliaslist(_
						"",_
						""_
						),_
						comment(// output to nameext() tag),_
						alt1list(_
						"",_
						", Padding"_
						),_
						comment(// output to gives() tag),_
						alt2list(_
						"",_
						{=+@if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1) to me::dr listas "Padding", +@round(50 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::basecost listas "",  + @round(6 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::baseweight listas ""}_
						)_
				)_
	), noresync(yes)

"Segmented Plate, Heavy (%Helmet_Alt1List%)", gives(%Paddingalt2list%), page(LT100-110),_
	displayname(Segmented Plate, Heavy (Build-your-own Helmet)),_
	location(%Helmet_AliasList%%options1alias%%optionsalt1List%), coverage(%Helmet_Alt2List%%Options1alias%%OptionsAlt3List%),_
	mods(Equipment, Helmet, Armor, Armor - Metal, Armor - Plate),_
	techlvl(2), notes(), don(45), dr(5), displaycost(1200/base), displayweight(32/base), basecost(@round(1200 * me::basecostmultiplier,2)), baseweight(@round(28 * me::basecostmultiplier,2)),_
	description(TL:2 DR:5 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%),_
	paddingcost(%Helmet_Cost1%), basecostmultiplier(_
		(_
			%Helmet_Cost1% _
		) *  _
		(_
		%optionsCost5% + %optionsCost4% + %optionsCost3% + %optionsCost2% + %optionsCost1% + 100_
		)/10000 _
	),_
	x(_
		#ChoiceList(_
				name(Helmet_),_
				title(Armor Location List),_
				text(Please select the type of helmet:),_
				picksallowed(1),_
				method(bynumber),_
					list(_
						"Pot Helm - Skull"=20,_
						"Bascinet - Skull, Face (1/6)"=25,_
						"Full Helm - Skull, Face"=30,_
						"Coif - Skull, Face (1/6), Neck"=30,_
						"Coif, Long - Skull, Face (1/6), Neck, Shoulders"=45,_
						"Greathelm - Skull, Face, Neck"=35_
						),_
						comment(// output to location() tag),_
				aliaslist(_
						"Skull",_
						"Skull, Face (1/6)",_
						"Head",_
						"Skull, Face (1/6), Neck",_
						"Skull, Face (1/6), Neck, Shoulders",_
						"Head, Neck"_
						),_
						comment(// output to nameext() tag),_
				alt1list(_
						"Pot Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Bascinet%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Full Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Long Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Greathelm%options1alias%%optionsalt2list%%Paddingalt1list%"_
						),_
						comment(// output to coverage() tag),_
				alt2list(_
						"1",_
						"1, 1/6",_
						"1",_
						"1, 1/6, 1",_
						"1, 1/6, 1, 1",_
						"1, 1"_
						)_
				),_
		#ChoiceList(_
				name(options),_
				title(Helmet Options List),_
				text(Please select any helmet options. A Visor replaces Cheek Guards, Spectacle, and Nasal options. A Bascinet already covers the ears, precluding the Wide Cheek Guards option.),_
				picksallowed(atleast 1, upto 4),_
				method(bynumber),_
					list(_
						"_No Options"=0,_
						"Nasal (1/6)"=5,_
						"Brim (1/6*)"=15,_
						"Cheek Guard (2/6)"=10,_
						"Cheek Guard, Wide (3/6)"=15,_
						"Spectacle (1/6)"=5,_
						"Visor (5/6)"=25_
						),_
						comment(// output to nameext() tag),_
				aliaslist(_
						"",_
						", ",_
						", ",_
						", ",_
						", ",_
						", ",_
						", "_
						),_
						comment(// output to locations() tag),_
				alt1list(_
						"",_
						"Face (1/6)",_
						"Face (1/6*)",_
						"Face (2/6)",_
						"Face (3/6)",_
						"Face (1/6)",_
						"Face (5/6)"_
						),_
						comment(// output to nameext() tag),_
					alt2list(_
						"",_
						"Nasal",_
						"Brim",_
						"Cheek Guard",_
						"Wide Cheek Guard",_
						"Spectacle",_
						"Visor"_
						),_
						comment(// output to coverage() tag),_
				alt3list(_
						"",_
						"1/6",_
						"1/6*",_
						"2/6",_
						"3/6",_
						"1/6",_
						"5/6"_
						)_
				),_
		#ChoiceList(_
					name(Padding),_
					title(Helmet Padding),_
					default(2),_
					text(Does this helmet include Padding:),_
					picksallowed(1),_
					method(bynumber),_
						list(_
						"No Padding",_
						"Padding"_
						),_
						comment(// unused?),_
						aliaslist(_
						"",_
						""_
						),_
						comment(// output to nameext() tag),_
						alt1list(_
						"",_
						", Padding"_
						),_
						comment(// output to gives() tag),_
						alt2list(_
						"",_
						{=+@if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1) to me::dr listas "Padding", +@round(50 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::basecost listas "",  + @round(6 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::baseweight listas ""}_
						)_
				)_
	), noresync(yes)

"Mail and Plates (%Helmet_Alt1List%)", gives(%Paddingalt2list%), page(LT100-110),_
	displayname(Mail and Plates (Build-your-own Helmet)),_
	drnotes(_
				{Split DR: use the lower DR against crushing attacks.}_
			),_
	location(%Helmet_AliasList%%options1alias%%optionsalt1List%), coverage(%Helmet_Alt2List%%Options1alias%%OptionsAlt3List%), basedr(5), crushingdr(4),_
	mods(Equipment, Helmet, Armor, Armor - Metal, Armor - Plate),_
	techlvl(3), notes([4]), don(20), dr(5/4), displaycost(1000/base), displayweight(20/base), basecost(@round(1000 * me::basecostmultiplier,2)), baseweight(@round(20 * me::basecostmultiplier,2)),_
	description(TL:3 DR:5/4 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[4] Second DR value vs. crushing.),_
	paddingcost(%Helmet_Cost1%), basecostmultiplier(_
		(_
			%Helmet_Cost1% _
		) *  _
		(_
		%optionsCost5% + %optionsCost4% + %optionsCost3% + %optionsCost2% + %optionsCost1% + 100_
		)/10000 _
	),_
	x(_
		#ChoiceList(_
				name(Helmet_),_
				title(Armor Location List),_
				text(Please select the type of helmet:),_
				picksallowed(1),_
				method(bynumber),_
					list(_
						"Pot Helm - Skull"=20,_
						"Bascinet - Skull, Face (1/6)"=25,_
						"Full Helm - Skull, Face"=30,_
						"Coif - Skull, Face (1/6), Neck"=30,_
						"Coif, Long - Skull, Face (1/6), Neck, Shoulders"=45,_
						"Greathelm - Skull, Face, Neck"=35_
						),_
						comment(// output to location() tag),_
				aliaslist(_
						"Skull",_
						"Skull, Face (1/6)",_
						"Head",_
						"Skull, Face (1/6), Neck",_
						"Skull, Face (1/6), Neck, Shoulders",_
						"Head, Neck"_
						),_
						comment(// output to nameext() tag),_
				alt1list(_
						"Pot Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Bascinet%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Full Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Long Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Greathelm%options1alias%%optionsalt2list%%Paddingalt1list%"_
						),_
						comment(// output to coverage() tag),_
				alt2list(_
						"1",_
						"1, 1/6",_
						"1",_
						"1, 1/6, 1",_
						"1, 1/6, 1, 1",_
						"1, 1"_
						)_
				),_
		#ChoiceList(_
				name(options),_
				title(Helmet Options List),_
				text(Please select any helmet options. A Visor replaces Cheek Guards, Spectacle, and Nasal options. A Bascinet already covers the ears, precluding the Wide Cheek Guards option.),_
				picksallowed(atleast 1, upto 4),_
				method(bynumber),_
					list(_
						"_No Options"=0,_
						"Nasal (1/6)"=5,_
						"Brim (1/6*)"=15,_
						"Cheek Guard (2/6)"=10,_
						"Cheek Guard, Wide (3/6)"=15,_
						"Spectacle (1/6)"=5,_
						"Visor (5/6)"=25_
						),_
						comment(// output to nameext() tag),_
				aliaslist(_
						"",_
						", ",_
						", ",_
						", ",_
						", ",_
						", ",_
						", "_
						),_
						comment(// output to locations() tag),_
				alt1list(_
						"",_
						"Face (1/6)",_
						"Face (1/6*)",_
						"Face (2/6)",_
						"Face (3/6)",_
						"Face (1/6)",_
						"Face (5/6)"_
						),_
						comment(// output to nameext() tag),_
					alt2list(_
						"",_
						"Nasal",_
						"Brim",_
						"Cheek Guard",_
						"Wide Cheek Guard",_
						"Spectacle",_
						"Visor"_
						),_
						comment(// output to coverage() tag),_
				alt3list(_
						"",_
						"1/6",_
						"1/6*",_
						"2/6",_
						"3/6",_
						"1/6",_
						"5/6"_
						)_
				),_
		#ChoiceList(_
					name(Padding),_
					title(Helmet Padding),_
					default(2),_
					text(Does this helmet include Padding:),_
					picksallowed(1),_
					method(bynumber),_
						list(_
						"No Padding",_
						"Padding"_
						),_
						comment(// unused?),_
						aliaslist(_
						"",_
						""_
						),_
						comment(// output to nameext() tag),_
						alt1list(_
						"",_
						", Padding"_
						),_
						comment(// output to gives() tag),_
						alt2list(_
						"",_
						{=+@if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1) to me::dr listas "Padding", +@round(50 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::basecost listas "",  + @round(6 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::baseweight listas ""}_
						)_
				)_
	), noresync(yes)

"Mail, Jousting (%Helmet_Alt1List%)", gives(%Paddingalt2list%), page(LT100-110),_
	displayname(Mail, Jousting (Build-your-own Helmet)),_
	itemnotes(_
				{-1 DX, except for Lance skill.}_
			),_
	location(%Helmet_AliasList%%options1alias%%optionsalt1List%), coverage(%Helmet_Alt2List%%Options1alias%%OptionsAlt3List%),_
	mods(Equipment, Helmet, Armor, Armor - Metal, Armor - Mail),_
	techlvl(3), notes([6]), don(30), dr(6), displaycost(1500/base), displayweight(30/base), basecost(@round(1500 * me::basecostmultiplier,2)), baseweight(@round(30 * me::basecostmultiplier,2)),_
	description(TL:3 DR:6 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[6] -1 DX, except for Lance skill.),_
	conditional(-1 to ST:DX when "not Lance Skill"),_
	paddingcost(%Helmet_Cost1%), basecostmultiplier(_
		(_
			%Helmet_Cost1% _
		) *  _
		(_
		%optionsCost5% + %optionsCost4% + %optionsCost3% + %optionsCost2% + %optionsCost1% + 100_
		)/10000 _
	),_
	x(_
		#ChoiceList(_
				name(Helmet_),_
				title(Armor Location List),_
				text(Please select the type of helmet:),_
				picksallowed(1),_
				method(bynumber),_
					list(_
						"Pot Helm - Skull"=20,_
						"Bascinet - Skull, Face (1/6)"=25,_
						"Full Helm - Skull, Face"=30,_
						"Coif - Skull, Face (1/6), Neck"=30,_
						"Coif, Long - Skull, Face (1/6), Neck, Shoulders"=45,_
						"Greathelm - Skull, Face, Neck"=35_
						),_
						comment(// output to location() tag),_
				aliaslist(_
						"Skull",_
						"Skull, Face (1/6)",_
						"Head",_
						"Skull, Face (1/6), Neck",_
						"Skull, Face (1/6), Neck, Shoulders",_
						"Head, Neck"_
						),_
						comment(// output to nameext() tag),_
				alt1list(_
						"Pot Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Bascinet%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Full Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Long Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Greathelm%options1alias%%optionsalt2list%%Paddingalt1list%"_
						),_
						comment(// output to coverage() tag),_
				alt2list(_
						"1",_
						"1, 1/6",_
						"1",_
						"1, 1/6, 1",_
						"1, 1/6, 1, 1",_
						"1, 1"_
						)_
				),_
		#ChoiceList(_
				name(options),_
				title(Helmet Options List),_
				text(Please select any helmet options. A Visor replaces Cheek Guards, Spectacle, and Nasal options. A Bascinet already covers the ears, precluding the Wide Cheek Guards option.),_
				picksallowed(atleast 1, upto 4),_
				method(bynumber),_
					list(_
						"_No Options"=0,_
						"Nasal (1/6)"=5,_
						"Brim (1/6*)"=15,_
						"Cheek Guard (2/6)"=10,_
						"Cheek Guard, Wide (3/6)"=15,_
						"Spectacle (1/6)"=5,_
						"Visor (5/6)"=25_
						),_
						comment(// output to nameext() tag),_
				aliaslist(_
						"",_
						", ",_
						", ",_
						", ",_
						", ",_
						", ",_
						", "_
						),_
						comment(// output to locations() tag),_
				alt1list(_
						"",_
						"Face (1/6)",_
						"Face (1/6*)",_
						"Face (2/6)",_
						"Face (3/6)",_
						"Face (1/6)",_
						"Face (5/6)"_
						),_
						comment(// output to nameext() tag),_
					alt2list(_
						"",_
						"Nasal",_
						"Brim",_
						"Cheek Guard",_
						"Wide Cheek Guard",_
						"Spectacle",_
						"Visor"_
						),_
						comment(// output to coverage() tag),_
				alt3list(_
						"",_
						"1/6",_
						"1/6*",_
						"2/6",_
						"3/6",_
						"1/6",_
						"5/6"_
						)_
				),_
		#ChoiceList(_
					name(Padding),_
					title(Helmet Padding),_
					default(2),_
					text(Does this helmet include Padding:),_
					picksallowed(1),_
					method(bynumber),_
						list(_
						"No Padding",_
						"Padding"_
						),_
						comment(// unused?),_
						aliaslist(_
						"",_
						""_
						),_
						comment(// output to nameext() tag),_
						alt1list(_
						"",_
						", Padding"_
						),_
						comment(// output to gives() tag),_
						alt2list(_
						"",_
						{=+@if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1) to me::dr listas "Padding", +@round(50 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::basecost listas "",  + @round(6 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::baseweight listas ""}_
						)_
				)_
	), noresync(yes)

"Brigandine, Light (%Helmet_Alt1List%)", gives(%Paddingalt2list%), page(LT100-110),_
	displayname(Brigandine, Light (Build-your-own Helmet)),_
	location(%Helmet_AliasList%%options1alias%%optionsalt1List%), coverage(%Helmet_Alt2List%%Options1alias%%OptionsAlt3List%),_
	mods(Equipment, Helmet, Armor, Armor - Metal, Armor - Plate),_
	techlvl(4), notes(), don(30), dr(3), displaycost(900/base), displayweight(10/base), basecost(@round(900 * me::basecostmultiplier,2)), baseweight(@round(10 * me::basecostmultiplier,2)),_
	description(TL:4 DR:3 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%),_
	paddingcost(%Helmet_Cost1%), basecostmultiplier(_
		(_
			%Helmet_Cost1% _
		) *  _
		(_
		%optionsCost5% + %optionsCost4% + %optionsCost3% + %optionsCost2% + %optionsCost1% + 100_
		)/10000 _
	),_
	x(_
		#ChoiceList(_
				name(Helmet_),_
				title(Armor Location List),_
				text(Please select the type of helmet:),_
				picksallowed(1),_
				method(bynumber),_
					list(_
						"Pot Helm - Skull"=20,_
						"Bascinet - Skull, Face (1/6)"=25,_
						"Full Helm - Skull, Face"=30,_
						"Coif - Skull, Face (1/6), Neck"=30,_
						"Coif, Long - Skull, Face (1/6), Neck, Shoulders"=45,_
						"Greathelm - Skull, Face, Neck"=35_
						),_
						comment(// output to location() tag),_
				aliaslist(_
						"Skull",_
						"Skull, Face (1/6)",_
						"Head",_
						"Skull, Face (1/6), Neck",_
						"Skull, Face (1/6), Neck, Shoulders",_
						"Head, Neck"_
						),_
						comment(// output to nameext() tag),_
				alt1list(_
						"Pot Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Bascinet%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Full Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Long Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Greathelm%options1alias%%optionsalt2list%%Paddingalt1list%"_
						),_
						comment(// output to coverage() tag),_
				alt2list(_
						"1",_
						"1, 1/6",_
						"1",_
						"1, 1/6, 1",_
						"1, 1/6, 1, 1",_
						"1, 1"_
						)_
				),_
		#ChoiceList(_
				name(options),_
				title(Helmet Options List),_
				text(Please select any helmet options. A Visor replaces Cheek Guards, Spectacle, and Nasal options. A Bascinet already covers the ears, precluding the Wide Cheek Guards option.),_
				picksallowed(atleast 1, upto 4),_
				method(bynumber),_
					list(_
						"_No Options"=0,_
						"Nasal (1/6)"=5,_
						"Brim (1/6*)"=15,_
						"Cheek Guard (2/6)"=10,_
						"Cheek Guard, Wide (3/6)"=15,_
						"Spectacle (1/6)"=5,_
						"Visor (5/6)"=25_
						),_
						comment(// output to nameext() tag),_
				aliaslist(_
						"",_
						", ",_
						", ",_
						", ",_
						", ",_
						", ",_
						", "_
						),_
						comment(// output to locations() tag),_
				alt1list(_
						"",_
						"Face (1/6)",_
						"Face (1/6*)",_
						"Face (2/6)",_
						"Face (3/6)",_
						"Face (1/6)",_
						"Face (5/6)"_
						),_
						comment(// output to nameext() tag),_
					alt2list(_
						"",_
						"Nasal",_
						"Brim",_
						"Cheek Guard",_
						"Wide Cheek Guard",_
						"Spectacle",_
						"Visor"_
						),_
						comment(// output to coverage() tag),_
				alt3list(_
						"",_
						"1/6",_
						"1/6*",_
						"2/6",_
						"3/6",_
						"1/6",_
						"5/6"_
						)_
				),_
		#ChoiceList(_
					name(Padding),_
					title(Helmet Padding),_
					default(2),_
					text(Does this helmet include Padding:),_
					picksallowed(1),_
					method(bynumber),_
						list(_
						"No Padding",_
						"Padding"_
						),_
						comment(// unused?),_
						aliaslist(_
						"",_
						""_
						),_
						comment(// output to nameext() tag),_
						alt1list(_
						"",_
						", Padding"_
						),_
						comment(// output to gives() tag),_
						alt2list(_
						"",_
						{=+@if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1) to me::dr listas "Padding", +@round(50 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::basecost listas "",  + @round(6 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::baseweight listas ""}_
						)_
				)_
	), noresync(yes)

"Brigandine, Medium (%Helmet_Alt1List%)", gives(%Paddingalt2list%), page(LT100-110),_
	displayname(Brigandine, Medium (Build-your-own Helmet)),_
	location(%Helmet_AliasList%%options1alias%%optionsalt1List%), coverage(%Helmet_Alt2List%%Options1alias%%OptionsAlt3List%),_
	mods(Equipment, Helmet, Armor, Armor - Metal, Armor - Plate),_
	techlvl(4), notes(), don(30), dr(5), displaycost(1800/base), displayweight(20/base), basecost(@round(1800 * me::basecostmultiplier,2)), baseweight(@round(20 * me::basecostmultiplier,2)),_
	description(TL:4 DR:5 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%),_
	paddingcost(%Helmet_Cost1%), basecostmultiplier(_
		(_
			%Helmet_Cost1% _
		) *  _
		(_
		%optionsCost5% + %optionsCost4% + %optionsCost3% + %optionsCost2% + %optionsCost1% + 100_
		)/10000 _
	),_
	x(_
		#ChoiceList(_
				name(Helmet_),_
				title(Armor Location List),_
				text(Please select the type of helmet:),_
				picksallowed(1),_
				method(bynumber),_
					list(_
						"Pot Helm - Skull"=20,_
						"Bascinet - Skull, Face (1/6)"=25,_
						"Full Helm - Skull, Face"=30,_
						"Coif - Skull, Face (1/6), Neck"=30,_
						"Coif, Long - Skull, Face (1/6), Neck, Shoulders"=45,_
						"Greathelm - Skull, Face, Neck"=35_
						),_
						comment(// output to location() tag),_
				aliaslist(_
						"Skull",_
						"Skull, Face (1/6)",_
						"Head",_
						"Skull, Face (1/6), Neck",_
						"Skull, Face (1/6), Neck, Shoulders",_
						"Head, Neck"_
						),_
						comment(// output to nameext() tag),_
				alt1list(_
						"Pot Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Bascinet%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Full Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Long Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Greathelm%options1alias%%optionsalt2list%%Paddingalt1list%"_
						),_
						comment(// output to coverage() tag),_
				alt2list(_
						"1",_
						"1, 1/6",_
						"1",_
						"1, 1/6, 1",_
						"1, 1/6, 1, 1",_
						"1, 1"_
						)_
				),_
		#ChoiceList(_
				name(options),_
				title(Helmet Options List),_
				text(Please select any helmet options. A Visor replaces Cheek Guards, Spectacle, and Nasal options. A Bascinet already covers the ears, precluding the Wide Cheek Guards option.),_
				picksallowed(atleast 1, upto 4),_
				method(bynumber),_
					list(_
						"_No Options"=0,_
						"Nasal (1/6)"=5,_
						"Brim (1/6*)"=15,_
						"Cheek Guard (2/6)"=10,_
						"Cheek Guard, Wide (3/6)"=15,_
						"Spectacle (1/6)"=5,_
						"Visor (5/6)"=25_
						),_
						comment(// output to nameext() tag),_
				aliaslist(_
						"",_
						", ",_
						", ",_
						", ",_
						", ",_
						", ",_
						", "_
						),_
						comment(// output to locations() tag),_
				alt1list(_
						"",_
						"Face (1/6)",_
						"Face (1/6*)",_
						"Face (2/6)",_
						"Face (3/6)",_
						"Face (1/6)",_
						"Face (5/6)"_
						),_
						comment(// output to nameext() tag),_
					alt2list(_
						"",_
						"Nasal",_
						"Brim",_
						"Cheek Guard",_
						"Wide Cheek Guard",_
						"Spectacle",_
						"Visor"_
						),_
						comment(// output to coverage() tag),_
				alt3list(_
						"",_
						"1/6",_
						"1/6*",_
						"2/6",_
						"3/6",_
						"1/6",_
						"5/6"_
						)_
				),_
		#ChoiceList(_
					name(Padding),_
					title(Helmet Padding),_
					default(2),_
					text(Does this helmet include Padding:),_
					picksallowed(1),_
					method(bynumber),_
						list(_
						"No Padding",_
						"Padding"_
						),_
						comment(// unused?),_
						aliaslist(_
						"",_
						""_
						),_
						comment(// output to nameext() tag),_
						alt1list(_
						"",_
						", Padding"_
						),_
						comment(// output to gives() tag),_
						alt2list(_
						"",_
						{=+@if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1) to me::dr listas "Padding", +@round(50 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::basecost listas "",  + @round(6 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::baseweight listas ""}_
						)_
				)_
	), noresync(yes)

"Paper, Proofed (%Helmet_Alt1List%)", gives(%Paddingalt2list%), page(LT100-110),_
	displayname(Paper, Proofed (Build-your-own Helmet)),_
	drnotes(_
				{Combustible. If DR is penetrated by burning damage, it can catch fire. See Making Things Burn (p. B433); treat the armor material as resistant.}_
			),_
	location(%Helmet_AliasList%%options1alias%%optionsalt1List%), coverage(%Helmet_Alt2List%%Options1alias%%OptionsAlt3List%),_
	mods(Equipment, Helmet, Armor, Armor - Organic),_
	techlvl(4), notes([1]), don(20), dr(6), displaycost(2000/base), displayweight(45/base), basecost(@round(2000 * me::basecostmultiplier,2)), baseweight(@round(45 * me::basecostmultiplier,2)),_
	description(TL:4 DR:6 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[1] Combustible. If DR is penetrated by burning damage, it can catch fire. See Making Things Burn (p. B433); treat the armor material as resistant.),_
	paddingcost(%Helmet_Cost1%), basecostmultiplier(_
		(_
			%Helmet_Cost1% _
		) *  _
		(_
		%optionsCost5% + %optionsCost4% + %optionsCost3% + %optionsCost2% + %optionsCost1% + 100_
		)/10000 _
	),_
	x(_
		#ChoiceList(_
				name(Helmet_),_
				title(Armor Location List),_
				text(Please select the type of helmet:),_
				picksallowed(1),_
				method(bynumber),_
					list(_
						"Pot Helm - Skull"=20,_
						"Bascinet - Skull, Face (1/6)"=25,_
						"Full Helm - Skull, Face"=30,_
						"Coif - Skull, Face (1/6), Neck"=30,_
						"Coif, Long - Skull, Face (1/6), Neck, Shoulders"=45,_
						"Greathelm - Skull, Face, Neck"=35_
						),_
						comment(// output to location() tag),_
				aliaslist(_
						"Skull",_
						"Skull, Face (1/6)",_
						"Head",_
						"Skull, Face (1/6), Neck",_
						"Skull, Face (1/6), Neck, Shoulders",_
						"Head, Neck"_
						),_
						comment(// output to nameext() tag),_
				alt1list(_
						"Pot Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Bascinet%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Full Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Long Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Greathelm%options1alias%%optionsalt2list%%Paddingalt1list%"_
						),_
						comment(// output to coverage() tag),_
				alt2list(_
						"1",_
						"1, 1/6",_
						"1",_
						"1, 1/6, 1",_
						"1, 1/6, 1, 1",_
						"1, 1"_
						)_
				),_
		#ChoiceList(_
				name(options),_
				title(Helmet Options List),_
				text(Please select any helmet options. A Visor replaces Cheek Guards, Spectacle, and Nasal options. A Bascinet already covers the ears, precluding the Wide Cheek Guards option.),_
				picksallowed(atleast 1, upto 4),_
				method(bynumber),_
					list(_
						"_No Options"=0,_
						"Nasal (1/6)"=5,_
						"Brim (1/6*)"=15,_
						"Cheek Guard (2/6)"=10,_
						"Cheek Guard, Wide (3/6)"=15,_
						"Spectacle (1/6)"=5,_
						"Visor (5/6)"=25_
						),_
						comment(// output to nameext() tag),_
				aliaslist(_
						"",_
						", ",_
						", ",_
						", ",_
						", ",_
						", ",_
						", "_
						),_
						comment(// output to locations() tag),_
				alt1list(_
						"",_
						"Face (1/6)",_
						"Face (1/6*)",_
						"Face (2/6)",_
						"Face (3/6)",_
						"Face (1/6)",_
						"Face (5/6)"_
						),_
						comment(// output to nameext() tag),_
					alt2list(_
						"",_
						"Nasal",_
						"Brim",_
						"Cheek Guard",_
						"Wide Cheek Guard",_
						"Spectacle",_
						"Visor"_
						),_
						comment(// output to coverage() tag),_
				alt3list(_
						"",_
						"1/6",_
						"1/6*",_
						"2/6",_
						"3/6",_
						"1/6",_
						"5/6"_
						)_
				),_
		#ChoiceList(_
					name(Padding),_
					title(Helmet Padding),_
					default(2),_
					text(Does this helmet include Padding:),_
					picksallowed(1),_
					method(bynumber),_
						list(_
						"No Padding",_
						"Padding"_
						),_
						comment(// unused?),_
						aliaslist(_
						"",_
						""_
						),_
						comment(// output to nameext() tag),_
						alt1list(_
						"",_
						", Padding"_
						),_
						comment(// output to gives() tag),_
						alt2list(_
						"",_
						{=+@if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1) to me::dr listas "Padding", +@round(50 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::basecost listas "",  + @round(6 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::baseweight listas ""}_
						)_
				)_
	), noresync(yes)

"Plate, Light (%Helmet_Alt1List%)", gives(%Paddingalt2list%), page(LT100-110),_
	displayname(Plate, Light (Build-your-own Helmet)),_
	location(%Helmet_AliasList%%options1alias%%optionsalt1List%), coverage(%Helmet_Alt2List%%Options1alias%%OptionsAlt3List%),_
	mods(Equipment, Helmet, Armor, Armor - Metal, Armor - Plate),_
	techlvl(4), notes(), don(45), dr(3), displaycost(1000/base), displayweight(8/base), basecost(@round(1000 * me::basecostmultiplier,2)), baseweight(@round(8 * me::basecostmultiplier,2)),_
	description(TL:4 DR:3 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%),_
	paddingcost(%Helmet_Cost1%), basecostmultiplier(_
		(_
			%Helmet_Cost1% _
		) *  _
		(_
		%optionsCost5% + %optionsCost4% + %optionsCost3% + %optionsCost2% + %optionsCost1% + 100_
		)/10000 _
	),_
	x(_
		#ChoiceList(_
				name(Helmet_),_
				title(Armor Location List),_
				text(Please select the type of helmet:),_
				picksallowed(1),_
				method(bynumber),_
					list(_
						"Pot Helm - Skull"=20,_
						"Bascinet - Skull, Face (1/6)"=25,_
						"Full Helm - Skull, Face"=30,_
						"Coif - Skull, Face (1/6), Neck"=30,_
						"Coif, Long - Skull, Face (1/6), Neck, Shoulders"=45,_
						"Greathelm - Skull, Face, Neck"=35_
						),_
						comment(// output to location() tag),_
				aliaslist(_
						"Skull",_
						"Skull, Face (1/6)",_
						"Head",_
						"Skull, Face (1/6), Neck",_
						"Skull, Face (1/6), Neck, Shoulders",_
						"Head, Neck"_
						),_
						comment(// output to nameext() tag),_
				alt1list(_
						"Pot Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Bascinet%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Full Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Long Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Greathelm%options1alias%%optionsalt2list%%Paddingalt1list%"_
						),_
						comment(// output to coverage() tag),_
				alt2list(_
						"1",_
						"1, 1/6",_
						"1",_
						"1, 1/6, 1",_
						"1, 1/6, 1, 1",_
						"1, 1"_
						)_
				),_
		#ChoiceList(_
				name(options),_
				title(Helmet Options List),_
				text(Please select any helmet options. A Visor replaces Cheek Guards, Spectacle, and Nasal options. A Bascinet already covers the ears, precluding the Wide Cheek Guards option.),_
				picksallowed(atleast 1, upto 4),_
				method(bynumber),_
					list(_
						"_No Options"=0,_
						"Nasal (1/6)"=5,_
						"Brim (1/6*)"=15,_
						"Cheek Guard (2/6)"=10,_
						"Cheek Guard, Wide (3/6)"=15,_
						"Spectacle (1/6)"=5,_
						"Visor (5/6)"=25_
						),_
						comment(// output to nameext() tag),_
				aliaslist(_
						"",_
						", ",_
						", ",_
						", ",_
						", ",_
						", ",_
						", "_
						),_
						comment(// output to locations() tag),_
				alt1list(_
						"",_
						"Face (1/6)",_
						"Face (1/6*)",_
						"Face (2/6)",_
						"Face (3/6)",_
						"Face (1/6)",_
						"Face (5/6)"_
						),_
						comment(// output to nameext() tag),_
					alt2list(_
						"",_
						"Nasal",_
						"Brim",_
						"Cheek Guard",_
						"Wide Cheek Guard",_
						"Spectacle",_
						"Visor"_
						),_
						comment(// output to coverage() tag),_
				alt3list(_
						"",_
						"1/6",_
						"1/6*",_
						"2/6",_
						"3/6",_
						"1/6",_
						"5/6"_
						)_
				),_
		#ChoiceList(_
					name(Padding),_
					title(Helmet Padding),_
					default(2),_
					text(Does this helmet include Padding:),_
					picksallowed(1),_
					method(bynumber),_
						list(_
						"No Padding",_
						"Padding"_
						),_
						comment(// unused?),_
						aliaslist(_
						"",_
						""_
						),_
						comment(// output to nameext() tag),_
						alt1list(_
						"",_
						", Padding"_
						),_
						comment(// output to gives() tag),_
						alt2list(_
						"",_
						{=+@if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1) to me::dr listas "Padding", +@round(50 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::basecost listas "",  + @round(6 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::baseweight listas ""}_
						)_
				)_
	), noresync(yes)

"Plate, Medium (%Helmet_Alt1List%)", gives(%Paddingalt2list%), page(LT100-110),_
	displayname(Plate, Medium (Build-your-own Helmet)),_
	location(%Helmet_AliasList%%options1alias%%optionsalt1List%), coverage(%Helmet_Alt2List%%Options1alias%%OptionsAlt3List%),_
	mods(Equipment, Helmet, Armor, Armor - Metal, Armor - Plate),_
	techlvl(4), notes(), don(45), dr(6), displaycost(2500/base), displayweight(20/base), basecost(@round(2500 * me::basecostmultiplier,2)), baseweight(@round(20 * me::basecostmultiplier,2)),_
	description(TL:4 DR:6 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%),_
	paddingcost(%Helmet_Cost1%), basecostmultiplier(_
		(_
			%Helmet_Cost1% _
		) *  _
		(_
		%optionsCost5% + %optionsCost4% + %optionsCost3% + %optionsCost2% + %optionsCost1% + 100_
		)/10000 _
	),_
	x(_
		#ChoiceList(_
				name(Helmet_),_
				title(Armor Location List),_
				text(Please select the type of helmet:),_
				picksallowed(1),_
				method(bynumber),_
					list(_
						"Pot Helm - Skull"=20,_
						"Bascinet - Skull, Face (1/6)"=25,_
						"Full Helm - Skull, Face"=30,_
						"Coif - Skull, Face (1/6), Neck"=30,_
						"Coif, Long - Skull, Face (1/6), Neck, Shoulders"=45,_
						"Greathelm - Skull, Face, Neck"=35_
						),_
						comment(// output to location() tag),_
				aliaslist(_
						"Skull",_
						"Skull, Face (1/6)",_
						"Head",_
						"Skull, Face (1/6), Neck",_
						"Skull, Face (1/6), Neck, Shoulders",_
						"Head, Neck"_
						),_
						comment(// output to nameext() tag),_
				alt1list(_
						"Pot Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Bascinet%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Full Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Long Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Greathelm%options1alias%%optionsalt2list%%Paddingalt1list%"_
						),_
						comment(// output to coverage() tag),_
				alt2list(_
						"1",_
						"1, 1/6",_
						"1",_
						"1, 1/6, 1",_
						"1, 1/6, 1, 1",_
						"1, 1"_
						)_
				),_
		#ChoiceList(_
				name(options),_
				title(Helmet Options List),_
				text(Please select any helmet options. A Visor replaces Cheek Guards, Spectacle, and Nasal options. A Bascinet already covers the ears, precluding the Wide Cheek Guards option.),_
				picksallowed(atleast 1, upto 4),_
				method(bynumber),_
					list(_
						"_No Options"=0,_
						"Nasal (1/6)"=5,_
						"Brim (1/6*)"=15,_
						"Cheek Guard (2/6)"=10,_
						"Cheek Guard, Wide (3/6)"=15,_
						"Spectacle (1/6)"=5,_
						"Visor (5/6)"=25_
						),_
						comment(// output to nameext() tag),_
				aliaslist(_
						"",_
						", ",_
						", ",_
						", ",_
						", ",_
						", ",_
						", "_
						),_
						comment(// output to locations() tag),_
				alt1list(_
						"",_
						"Face (1/6)",_
						"Face (1/6*)",_
						"Face (2/6)",_
						"Face (3/6)",_
						"Face (1/6)",_
						"Face (5/6)"_
						),_
						comment(// output to nameext() tag),_
					alt2list(_
						"",_
						"Nasal",_
						"Brim",_
						"Cheek Guard",_
						"Wide Cheek Guard",_
						"Spectacle",_
						"Visor"_
						),_
						comment(// output to coverage() tag),_
				alt3list(_
						"",_
						"1/6",_
						"1/6*",_
						"2/6",_
						"3/6",_
						"1/6",_
						"5/6"_
						)_
				),_
		#ChoiceList(_
					name(Padding),_
					title(Helmet Padding),_
					default(2),_
					text(Does this helmet include Padding:),_
					picksallowed(1),_
					method(bynumber),_
						list(_
						"No Padding",_
						"Padding"_
						),_
						comment(// unused?),_
						aliaslist(_
						"",_
						""_
						),_
						comment(// output to nameext() tag),_
						alt1list(_
						"",_
						", Padding"_
						),_
						comment(// output to gives() tag),_
						alt2list(_
						"",_
						{=+@if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1) to me::dr listas "Padding", +@round(50 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::basecost listas "",  + @round(6 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::baseweight listas ""}_
						)_
				)_
	), noresync(yes)

"Plate, Heavy (%Helmet_Alt1List%)", gives(%Paddingalt2list%), page(LT100-110),_
	displayname(Plate, Heavy (Build-your-own Helmet)),_
	location(%Helmet_AliasList%%options1alias%%optionsalt1List%), coverage(%Helmet_Alt2List%%Options1alias%%OptionsAlt3List%),_
	mods(Equipment, Helmet, Armor, Armor - Metal, Armor - Plate),_
	techlvl(4), notes(), don(45), dr(9), displaycost(4000/base), displayweight(32/base), basecost(@round(4000 * me::basecostmultiplier,2)), baseweight(@round(32 * me::basecostmultiplier,2)),_
	description(TL:4 DR:9 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%),_
	paddingcost(%Helmet_Cost1%), basecostmultiplier(_
		(_
			%Helmet_Cost1% _
		) *  _
		(_
		%optionsCost5% + %optionsCost4% + %optionsCost3% + %optionsCost2% + %optionsCost1% + 100_
		)/10000 _
	),_
	x(_
		#ChoiceList(_
				name(Helmet_),_
				title(Armor Location List),_
				text(Please select the type of helmet:),_
				picksallowed(1),_
				method(bynumber),_
					list(_
						"Pot Helm - Skull"=20,_
						"Bascinet - Skull, Face (1/6)"=25,_
						"Full Helm - Skull, Face"=30,_
						"Coif - Skull, Face (1/6), Neck"=30,_
						"Coif, Long - Skull, Face (1/6), Neck, Shoulders"=45,_
						"Greathelm - Skull, Face, Neck"=35_
						),_
						comment(// output to location() tag),_
				aliaslist(_
						"Skull",_
						"Skull, Face (1/6)",_
						"Head",_
						"Skull, Face (1/6), Neck",_
						"Skull, Face (1/6), Neck, Shoulders",_
						"Head, Neck"_
						),_
						comment(// output to nameext() tag),_
				alt1list(_
						"Pot Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Bascinet%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Full Helm%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Long Coif%options1alias%%optionsalt2list%%Paddingalt1list%",_
						"Greathelm%options1alias%%optionsalt2list%%Paddingalt1list%"_
						),_
						comment(// output to coverage() tag),_
				alt2list(_
						"1",_
						"1, 1/6",_
						"1",_
						"1, 1/6, 1",_
						"1, 1/6, 1, 1",_
						"1, 1"_
						)_
				),_
		#ChoiceList(_
				name(options),_
				title(Helmet Options List),_
				text(Please select any helmet options. A Visor replaces Cheek Guards, Spectacle, and Nasal options. A Bascinet already covers the ears, precluding the Wide Cheek Guards option.),_
				picksallowed(atleast 1, upto 4),_
				method(bynumber),_
					list(_
						"_No Options"=0,_
						"Nasal (1/6)"=5,_
						"Brim (1/6*)"=15,_
						"Cheek Guard (2/6)"=10,_
						"Cheek Guard, Wide (3/6)"=15,_
						"Spectacle (1/6)"=5,_
						"Visor (5/6)"=25_
						),_
						comment(// output to nameext() tag),_
				aliaslist(_
						"",_
						", ",_
						", ",_
						", ",_
						", ",_
						", ",_
						", "_
						),_
						comment(// output to locations() tag),_
				alt1list(_
						"",_
						"Face (1/6)",_
						"Face (1/6*)",_
						"Face (2/6)",_
						"Face (3/6)",_
						"Face (1/6)",_
						"Face (5/6)"_
						),_
						comment(// output to nameext() tag),_
					alt2list(_
						"",_
						"Nasal",_
						"Brim",_
						"Cheek Guard",_
						"Wide Cheek Guard",_
						"Spectacle",_
						"Visor"_
						),_
						comment(// output to coverage() tag),_
				alt3list(_
						"",_
						"1/6",_
						"1/6*",_
						"2/6",_
						"3/6",_
						"1/6",_
						"5/6"_
						)_
				),_
		#ChoiceList(_
					name(Padding),_
					title(Helmet Padding),_
					default(2),_
					text(Does this helmet include Padding:),_
					picksallowed(1),_
					method(bynumber),_
						list(_
						"No Padding",_
						"Padding"_
						),_
						comment(// unused?),_
						aliaslist(_
						"",_
						""_
						),_
						comment(// output to nameext() tag),_
						alt1list(_
						"",_
						", Padding"_
						),_
						comment(// output to gives() tag),_
						alt2list(_
						"",_
						{=+@if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1) to me::dr listas "Padding", +@round(50 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::basecost listas "",  + @round(6 * me::paddingcost * 0.01 * @if(@hasmod(Armor: Helmet Padding) THEN 0 ELSE 1), 2) to me::baseweight listas ""}_
						)_
				)_
	), noresync(yes)

*******************************************************************************************************************
<_Armor, _Armor - Low-Tech, Low-Tech, Low-Tech - Armor, Low-Tech - Armor - Body Armor - Build Your Own>
*******************************************************************************************************************
//  list() is only used in name() tag
//  aliaslist() is a prefix in the nameext() tag (i.e. Horse:, Dog:, etc.)
//  alt1list() goes in the location() tag
//  alt2list() is placed in the nameext() tag
//  alt3list() goes in the new coverage() tag

"Cane (%Body Armor_1alias%)", page(LT100-110),_
	displayname(Cane (Build-your-own Body Armor)),_
	drnotes(_
				{Combustible. If DR is penetrated by burning damage, it can catch fire. See Making Things Burn (p. B433); treat the armor material as resistant.}_
			),_
	location(%Body Armor_alt1list%), coverage(%Body Armor_alt3list%),_
	mods(Equipment, Armor, Armor - Organic),_
	techlvl(0), notes([1]), don(30), dr(1), displaycost(35/base), displayweight(12/base), basecost(@round(35 * me::basecostmultiplier,2)), baseweight(@round(12 * me::basecostmultiplier,2)),_
	description(TL:0 DR:1 Locations: %Body Armor_alt2List% Notes:[1] Combustible. If DR is penetrated by burning damage, it can catch fire. See Making Things Burn (p. B433); treat the armor material as resistant.),_
	basecostmultiplier(_
		(_
			%Body Armor_Cost20% + %Body Armor_Cost19% + %Body Armor_Cost18% + %Body Armor_Cost17% + %Body Armor_Cost16% + %Body Armor_Cost15% + %Body Armor_Cost14% + %Body Armor_Cost13% + %Body Armor_Cost12% + %Body Armor_Cost11% + _
			%Body Armor_Cost10% + %Body Armor_Cost9% + %Body Armor_Cost8% + %Body Armor_Cost7% + %Body Armor_Cost6% + %Body Armor_Cost5% + %Body Armor_Cost4% + %Body Armor_Cost3% + %Body Armor_Cost2% + %Body Armor_Cost1% _
		)/100 _
	),_
	x(_
		#ChoiceList(_
				name(Body Armor_),_
				title(Armor Location List),_
				text(Please select the location or locations protected by this armor:),_
				picksallowed(atleast 1, upto 20),_
				method(bynumber),_
					list(_
							#List(Body Armor Location One)_
						),_
				aliaslist(_
							#List(Body Armor Prefix)_
						),_
				alt1list(_
							#List(Body Armor Location Two)_
						),_
				alt2list(_
							#List(Body Armor Location Three)_
						),_
				alt3list(_
							#List(Body Armor Location Coverage)_
						)_
				)_
	), noresync(yes)

"Cloth, Padded (%Body Armor_1alias%)", page(LT100-110),_
	displayname(Cloth (Build-your-own Body Armor)),_
	location(%Body Armor_alt1list%), coverage(%Body Armor_alt3list%),_
	mods(Equipment, Armor, Armor - Organic, Armor - Cloth, Armor - Textile),_
	techlvl(0), notes(), don(15), dr(1*), displaycost(50/base), displayweight(6/base), basecost(@round(50 * me::basecostmultiplier,2)), baseweight(@round(6 * me::basecostmultiplier,2)),_
	description(TL:0 DR:1* Locations: %Body Armor_alt2List%),_
	basecostmultiplier(_
		(_
			%Body Armor_Cost20% + %Body Armor_Cost19% + %Body Armor_Cost18% + %Body Armor_Cost17% + %Body Armor_Cost16% + %Body Armor_Cost15% + %Body Armor_Cost14% + %Body Armor_Cost13% + %Body Armor_Cost12% + %Body Armor_Cost11% + _
			%Body Armor_Cost10% + %Body Armor_Cost9% + %Body Armor_Cost8% + %Body Armor_Cost7% + %Body Armor_Cost6% + %Body Armor_Cost5% + %Body Armor_Cost4% + %Body Armor_Cost3% + %Body Armor_Cost2% + %Body Armor_Cost1% _
		)/100 _
	),_
	x(_
		#ChoiceList(_
				name(Body Armor_),_
				title(Armor Location List),_
				text(Please select the location or locations protected by this armor:),_
				picksallowed(atleast 1, upto 20),_
				method(bynumber),_
					list(_
							#List(Body Armor Location One)_
						),_
				aliaslist(_
							#List(Body Armor Prefix)_
						),_
				alt1list(_
							#List(Body Armor Location Two)_
						),_
				alt2list(_
							#List(Body Armor Location Three)_
						),_
				alt3list(_
							#List(Body Armor Location Coverage)_
						)_
				)_
	), noresync(yes)

"Horn (%Body Armor_1alias%)", page(LT100-110),_
	displayname(Horn (Build-your-own Body Armor)),_
	location(%Body Armor_alt1list%), coverage(%Body Armor_alt3list%),_
	mods(Equipment, Armor, Armor - Organic),_
	techlvl(0), notes(), don(30), dr(3), displaycost(250/base), displayweight(25/base), basecost(@round(250 * me::basecostmultiplier,2)), baseweight(@round(25 * me::basecostmultiplier,2)),_
	description(TL:0 DR:3 Locations: %Body Armor_alt2List%),_
	basecostmultiplier(_
		(_
			%Body Armor_Cost20% + %Body Armor_Cost19% + %Body Armor_Cost18% + %Body Armor_Cost17% + %Body Armor_Cost16% + %Body Armor_Cost15% + %Body Armor_Cost14% + %Body Armor_Cost13% + %Body Armor_Cost12% + %Body Armor_Cost11% + _
			%Body Armor_Cost10% + %Body Armor_Cost9% + %Body Armor_Cost8% + %Body Armor_Cost7% + %Body Armor_Cost6% + %Body Armor_Cost5% + %Body Armor_Cost4% + %Body Armor_Cost3% + %Body Armor_Cost2% + %Body Armor_Cost1% _
		)/100 _
	),_
	x(_
		#ChoiceList(_
				name(Body Armor_),_
				title(Armor Location List),_
				text(Please select the location or locations protected by this armor:),_
				picksallowed(atleast 1, upto 20),_
				method(bynumber),_
					list(_
							#List(Body Armor Location One)_
						),_
				aliaslist(_
							#List(Body Armor Prefix)_
						),_
				alt1list(_
							#List(Body Armor Location Two)_
						),_
				alt2list(_
							#List(Body Armor Location Three)_
						),_
				alt3list(_
							#List(Body Armor Location Coverage)_
						)_
				)_
	), noresync(yes)

"Layered Cloth, Light (%Body Armor_1alias%)", page(LT100-110),_
	displayname(Layered Cloth, Light (Build-your-own Body Armor)),_
	location(%Body Armor_alt1list%), coverage(%Body Armor_alt3list%),_
	mods(Equipment, Armor, Armor - Organic, Armor - Cloth, Armor - Textile),_
	techlvl(0), notes(), don(20), dr(2*), displaycost(150/base), displayweight(12/base), basecost(@round(150 * me::basecostmultiplier,2)), baseweight(@round(12 * me::basecostmultiplier,2)),_
	description(TL:0 DR:2* Locations: %Body Armor_alt2List%),_
	basecostmultiplier(_
		(_
			%Body Armor_Cost20% + %Body Armor_Cost19% + %Body Armor_Cost18% + %Body Armor_Cost17% + %Body Armor_Cost16% + %Body Armor_Cost15% + %Body Armor_Cost14% + %Body Armor_Cost13% + %Body Armor_Cost12% + %Body Armor_Cost11% + _
			%Body Armor_Cost10% + %Body Armor_Cost9% + %Body Armor_Cost8% + %Body Armor_Cost7% + %Body Armor_Cost6% + %Body Armor_Cost5% + %Body Armor_Cost4% + %Body Armor_Cost3% + %Body Armor_Cost2% + %Body Armor_Cost1% _
		)/100 _
	),_
	x(_
		#ChoiceList(_
				name(Body Armor_),_
				title(Armor Location List),_
				text(Please select the location or locations protected by this armor:),_
				picksallowed(atleast 1, upto 20),_
				method(bynumber),_
					list(_
							#List(Body Armor Location One)_
						),_
				aliaslist(_
							#List(Body Armor Prefix)_
						),_
				alt1list(_
							#List(Body Armor Location Two)_
						),_
				alt2list(_
							#List(Body Armor Location Three)_
						),_
				alt3list(_
							#List(Body Armor Location Coverage)_
						)_
				)_
	), noresync(yes)

"Layered Cloth, Medium (%Body Armor_1alias%)", page(LT100-110),_
	displayname(Layered Cloth, Medium (Build-your-own Body Armor)),_
	location(%Body Armor_alt1list%), coverage(%Body Armor_alt3list%),_
	mods(Equipment, Armor, Armor - Organic, Armor - Cloth, Armor - Textile),_
	techlvl(0), notes(), don(30), dr(3), displaycost(350/base), displayweight(20/base), basecost(@round(350 * me::basecostmultiplier,2)), baseweight(@round(20 * me::basecostmultiplier,2)),_
	description(TL:0 DR:3 Locations: %Body Armor_alt2List%),_
	basecostmultiplier(_
		(_
			%Body Armor_Cost20% + %Body Armor_Cost19% + %Body Armor_Cost18% + %Body Armor_Cost17% + %Body Armor_Cost16% + %Body Armor_Cost15% + %Body Armor_Cost14% + %Body Armor_Cost13% + %Body Armor_Cost12% + %Body Armor_Cost11% + _
			%Body Armor_Cost10% + %Body Armor_Cost9% + %Body Armor_Cost8% + %Body Armor_Cost7% + %Body Armor_Cost6% + %Body Armor_Cost5% + %Body Armor_Cost4% + %Body Armor_Cost3% + %Body Armor_Cost2% + %Body Armor_Cost1% _
		)/100 _
	),_
	x(_
		#ChoiceList(_
				name(Body Armor_),_
				title(Armor Location List),_
				text(Please select the location or locations protected by this armor:),_
				picksallowed(atleast 1, upto 20),_
				method(bynumber),_
					list(_
							#List(Body Armor Location One)_
						),_
				aliaslist(_
							#List(Body Armor Prefix)_
						),_
				alt1list(_
							#List(Body Armor Location Two)_
						),_
				alt2list(_
							#List(Body Armor Location Three)_
						),_
				alt3list(_
							#List(Body Armor Location Coverage)_
						)_
				)_
	), noresync(yes)

"Layered Cloth, Heavy (%Body Armor_1alias%)", page(LT100-110),_
	displayname(Layered Cloth, Heavy (Build-your-own Body Armor)),_
	location(%Body Armor_alt1list%), coverage(%Body Armor_alt3list%),_
	mods(Equipment, Armor, Armor - Organic, Armor - Cloth, Armor - Textile),_
	techlvl(0), notes(), don(30), dr(4), displaycost(600/base), displayweight(28/base), basecost(@round(600 * me::basecostmultiplier,2)), baseweight(@round(28 * me::basecostmultiplier,2)),_
	description(TL:0 DR:4 Locations: %Body Armor_alt2List%),_
	basecostmultiplier(_
		(_
			%Body Armor_Cost20% + %Body Armor_Cost19% + %Body Armor_Cost18% + %Body Armor_Cost17% + %Body Armor_Cost16% + %Body Armor_Cost15% + %Body Armor_Cost14% + %Body Armor_Cost13% + %Body Armor_Cost12% + %Body Armor_Cost11% + _
			%Body Armor_Cost10% + %Body Armor_Cost9% + %Body Armor_Cost8% + %Body Armor_Cost7% + %Body Armor_Cost6% + %Body Armor_Cost5% + %Body Armor_Cost4% + %Body Armor_Cost3% + %Body Armor_Cost2% + %Body Armor_Cost1% _
		)/100 _
	),_
	x(_
		#ChoiceList(_
				name(Body Armor_),_
				title(Armor Location List),_
				text(Please select the location or locations protected by this armor:),_
				picksallowed(atleast 1, upto 20),_
				method(bynumber),_
					list(_
							#List(Body Armor Location One)_
						),_
				aliaslist(_
							#List(Body Armor Prefix)_
						),_
				alt1list(_
							#List(Body Armor Location Two)_
						),_
				alt2list(_
							#List(Body Armor Location Three)_
						),_
				alt3list(_
							#List(Body Armor Location Coverage)_
						)_
				)_
	), noresync(yes)

"Leather, Medium (%Body Armor_1alias%)", page(LT100-110),_
	displayname(Leather, Medium (Build-your-own Body Armor)),_
	drnotes(_
				{Split DR: use the lower DR against impaling attacks.}_
			),_
	location(%Body Armor_alt1list%), coverage(%Body Armor_alt3list%), basedr(2*), impalingdr(1*),_
	mods(Equipment, Armor, Armor - Organic, Armor - Leather),_
	techlvl(0), notes([2]), don(30), dr(2/1*), displaycost(100/base), displayweight(12/base), basecost(@round(100 * me::basecostmultiplier,2)), baseweight(@round(12 * me::basecostmultiplier,2)),_
	description(DR 2*),_
	basecostmultiplier(_
		(_
			%Body Armor_Cost20% + %Body Armor_Cost19% + %Body Armor_Cost18% + %Body Armor_Cost17% + %Body Armor_Cost16% + %Body Armor_Cost15% + %Body Armor_Cost14% + %Body Armor_Cost13% + %Body Armor_Cost12% + %Body Armor_Cost11% + _
			%Body Armor_Cost10% + %Body Armor_Cost9% + %Body Armor_Cost8% + %Body Armor_Cost7% + %Body Armor_Cost6% + %Body Armor_Cost5% + %Body Armor_Cost4% + %Body Armor_Cost3% + %Body Armor_Cost2% + %Body Armor_Cost1% _
		)/100 _
	),_
	x(_
		#ChoiceList(_
				name(Body Armor_),_
				title(Armor Location List),_
				text(Please select the location or locations protected by this armor:),_
				picksallowed(atleast 1, upto 20),_
				method(bynumber),_
					list(_
							#List(Body Armor Location One)_
						),_
				aliaslist(_
							#List(Body Armor Prefix)_
						),_
				alt1list(_
							#List(Body Armor Location Two)_
						),_
				alt2list(_
							#List(Body Armor Location Three)_
						),_
				alt3list(_
							#List(Body Armor Location Coverage)_
						)_
				)_
	), noresync(yes)

"Leather, Heavy (%Body Armor_1alias%)", page(LT100-110),_
	displayname(Leather, Heavy (Build-your-own Body Armor)),_
	drnotes(_
				{Split DR: use the lower DR against impaling attacks.}_
			),_
	location(%Body Armor_alt1list%), coverage(%Body Armor_alt3list%), basedr(3), impalingdr(2),_
	mods(Equipment, Armor, Armor - Organic, Armor - Leather),_
	techlvl(0), notes([2]), don(30), dr(3/2), displaycost(200/base), displayweight(20/base), basecost(@round(200 * me::basecostmultiplier,2)), baseweight(@round(20 * me::basecostmultiplier,2)),_
	description(TL:0 DR:3/2 Locations: %Body Armor_alt2List% Notes:[2] Second DR value vs. impaling.),_
	basecostmultiplier(_
		(_
			%Body Armor_Cost20% + %Body Armor_Cost19% + %Body Armor_Cost18% + %Body Armor_Cost17% + %Body Armor_Cost16% + %Body Armor_Cost15% + %Body Armor_Cost14% + %Body Armor_Cost13% + %Body Armor_Cost12% + %Body Armor_Cost11% + _
			%Body Armor_Cost10% + %Body Armor_Cost9% + %Body Armor_Cost8% + %Body Armor_Cost7% + %Body Armor_Cost6% + %Body Armor_Cost5% + %Body Armor_Cost4% + %Body Armor_Cost3% + %Body Armor_Cost2% + %Body Armor_Cost1% _
		)/100 _
	),_
	x(_
		#ChoiceList(_
				name(Body Armor_),_
				title(Armor Location List),_
				text(Please select the location or locations protected by this armor:),_
				picksallowed(atleast 1, upto 20),_
				method(bynumber),_
					list(_
							#List(Body Armor Location One)_
						),_
				aliaslist(_
							#List(Body Armor Prefix)_
						),_
				alt1list(_
							#List(Body Armor Location Two)_
						),_
				alt2list(_
							#List(Body Armor Location Three)_
						),_
				alt3list(_
							#List(Body Armor Location Coverage)_
						)_
				)_
	), noresync(yes)

"Straw (%Body Armor_1alias%)", page(LT100-110),_
	displayname(Straw (Build-your-own Body Armor)),_
	location(%Body Armor_alt1list%), coverage(%Body Armor_alt3list%),_
	mods(Equipment, Armor, Armor - Organic),_
	techlvl(0), notes([1]), don(30), dr(2), displaycost(50/base), displayweight(20/base), basecost(@round(50 * me::basecostmultiplier,2)), baseweight(@round(20 * me::basecostmultiplier,2)),_
	description(TL:0 DR:2 Locations: %Body Armor_alt2List% Notes:[1] Combustible. If DR is penetrated by burning damage, it can catch fire. See Making Things Burn (p. B433); treat the armor material as resistant.),_
	basecostmultiplier(_
		(_
			%Body Armor_Cost20% + %Body Armor_Cost19% + %Body Armor_Cost18% + %Body Armor_Cost17% + %Body Armor_Cost16% + %Body Armor_Cost15% + %Body Armor_Cost14% + %Body Armor_Cost13% + %Body Armor_Cost12% + %Body Armor_Cost11% + _
			%Body Armor_Cost10% + %Body Armor_Cost9% + %Body Armor_Cost8% + %Body Armor_Cost7% + %Body Armor_Cost6% + %Body Armor_Cost5% + %Body Armor_Cost4% + %Body Armor_Cost3% + %Body Armor_Cost2% + %Body Armor_Cost1% _
		)/100 _
	),_
	x(_
		#ChoiceList(_
				name(Body Armor_),_
				title(Armor Location List),_
				text(Please select the location or locations protected by this armor:),_
				picksallowed(atleast 1, upto 20),_
				method(bynumber),_
					list(_
							#List(Body Armor Location One)_
						),_
				aliaslist(_
							#List(Body Armor Prefix)_
						),_
				alt1list(_
							#List(Body Armor Location Two)_
						),_
				alt2list(_
							#List(Body Armor Location Three)_
						),_
				alt3list(_
							#List(Body Armor Location Coverage)_
						)_
				)_
	), noresync(yes)

"Wood (%Body Armor_1alias%)", page(LT100-110),_
	displayname(Wood (Build-your-own Body Armor)),_
	drnotes(_
				{Semi-ablative. Loses 1 DR per 10 points of basic damage it resists (see p. B47)}_
			),_
	location(%Body Armor_alt1list%), coverage(%Body Armor_alt3list%),_
	mods(Equipment, Armor, Armor - Organic),_
	techlvl(0), notes([3]), don(30), dr(3), displaycost(100/base), displayweight(30/base), basecost(@round(100 * me::basecostmultiplier,2)), baseweight(@round(30 * me::basecostmultiplier,2)),_
	description(TL:0 DR:3 Locations: %Body Armor_alt2List% Notes:[3] Semi-ablative. Loses 1 DR per 10 points of basic damage it resists (see p. B47)),_
	basecostmultiplier(_
		(_
			%Body Armor_Cost20% + %Body Armor_Cost19% + %Body Armor_Cost18% + %Body Armor_Cost17% + %Body Armor_Cost16% + %Body Armor_Cost15% + %Body Armor_Cost14% + %Body Armor_Cost13% + %Body Armor_Cost12% + %Body Armor_Cost11% + _
			%Body Armor_Cost10% + %Body Armor_Cost9% + %Body Armor_Cost8% + %Body Armor_Cost7% + %Body Armor_Cost6% + %Body Armor_Cost5% + %Body Armor_Cost4% + %Body Armor_Cost3% + %Body Armor_Cost2% + %Body Armor_Cost1% _
		)/100 _
	),_
	x(_
		#ChoiceList(_
				name(Body Armor_),_
				title(Armor Location List),_
				text(Please select the location or locations protected by this armor:),_
				picksallowed(atleast 1, upto 20),_
				method(bynumber),_
					list(_
							#List(Body Armor Location One)_
						),_
				aliaslist(_
							#List(Body Armor Prefix)_
						),_
				alt1list(_
							#List(Body Armor Location Two)_
						),_
				alt2list(_
							#List(Body Armor Location Three)_
						),_
				alt3list(_
							#List(Body Armor Location Coverage)_
						)_
				)_
	), noresync(yes)

"Layered Leather, Light (%Body Armor_1alias%)", page(LT100-110),_
	displayname(Layered Leather, Light (Build-your-own Body Armor)),_
	location(%Body Armor_alt1list%), coverage(%Body Armor_alt3list%),_
	mods(Equipment, Armor, Armor - Organic, Armor - Leather),_
	techlvl(1), notes(), don(20), dr(2*), displaycost(120/base), displayweight(15/base), basecost(@round(120 * me::basecostmultiplier,2)), baseweight(@round(15 * me::basecostmultiplier,2)),_
	description(TL:1 DR:2* Locations: %Body Armor_alt2List%),_
	basecostmultiplier(_
		(_
			%Body Armor_Cost20% + %Body Armor_Cost19% + %Body Armor_Cost18% + %Body Armor_Cost17% + %Body Armor_Cost16% + %Body Armor_Cost15% + %Body Armor_Cost14% + %Body Armor_Cost13% + %Body Armor_Cost12% + %Body Armor_Cost11% + _
			%Body Armor_Cost10% + %Body Armor_Cost9% + %Body Armor_Cost8% + %Body Armor_Cost7% + %Body Armor_Cost6% + %Body Armor_Cost5% + %Body Armor_Cost4% + %Body Armor_Cost3% + %Body Armor_Cost2% + %Body Armor_Cost1% _
		)/100 _
	),_
	x(_
		#ChoiceList(_
				name(Body Armor_),_
				title(Armor Location List),_
				text(Please select the location or locations protected by this armor:),_
				picksallowed(atleast 1, upto 20),_
				method(bynumber),_
					list(_
							#List(Body Armor Location One)_
						),_
				aliaslist(_
							#List(Body Armor Prefix)_
						),_
				alt1list(_
							#List(Body Armor Location Two)_
						),_
				alt2list(_
							#List(Body Armor Location Three)_
						),_
				alt3list(_
							#List(Body Armor Location Coverage)_
						)_
				)_
	), noresync(yes)

"Layered Leather, Medium (%Body Armor_1alias%)", page(LT100-110),_
	displayname(Layered Leather, Medium (Build-your-own Body Armor)),_
	location(%Body Armor_alt1list%), coverage(%Body Armor_alt3list%),_
	mods(Equipment, Armor, Armor - Organic, Armor - Leather),_
	techlvl(1), notes(), don(30), dr(3), displaycost(220/base), displayweight(26/base), basecost(@round(220 * me::basecostmultiplier,2)), baseweight(@round(26 * me::basecostmultiplier,2)),_
	description(TL:1 DR:3 Locations: %Body Armor_alt2List%),_
	basecostmultiplier(_
		(_
			%Body Armor_Cost20% + %Body Armor_Cost19% + %Body Armor_Cost18% + %Body Armor_Cost17% + %Body Armor_Cost16% + %Body Armor_Cost15% + %Body Armor_Cost14% + %Body Armor_Cost13% + %Body Armor_Cost12% + %Body Armor_Cost11% + _
			%Body Armor_Cost10% + %Body Armor_Cost9% + %Body Armor_Cost8% + %Body Armor_Cost7% + %Body Armor_Cost6% + %Body Armor_Cost5% + %Body Armor_Cost4% + %Body Armor_Cost3% + %Body Armor_Cost2% + %Body Armor_Cost1% _
		)/100 _
	),_
	x(_
		#ChoiceList(_
				name(Body Armor_),_
				title(Armor Location List),_
				text(Please select the location or locations protected by this armor:),_
				picksallowed(atleast 1, upto 20),_
				method(bynumber),_
					list(_
							#List(Body Armor Location One)_
						),_
				aliaslist(_
							#List(Body Armor Prefix)_
						),_
				alt1list(_
							#List(Body Armor Location Two)_
						),_
				alt2list(_
							#List(Body Armor Location Three)_
						),_
				alt3list(_
							#List(Body Armor Location Coverage)_
						)_
				)_
	), noresync(yes)

"Layered Leather, Heavy (%Body Armor_1alias%)", page(LT100-110),_
	displayname(Layered Leather, Heavy (Build-your-own Body Armor)),_
	location(%Body Armor_alt1list%), coverage(%Body Armor_alt3list%),_
	mods(Equipment, Armor, Armor - Organic, Armor - Leather),_
	techlvl(1), notes(), don(30), dr(4), displaycost(525/base), displayweight(35/base), basecost(@round(525 * me::basecostmultiplier,2)), baseweight(@round(35 * me::basecostmultiplier,2)),_
	description(TL:1 DR:4 Locations: %Body Armor_alt2List%),_
	basecostmultiplier(_
		(_
			%Body Armor_Cost20% + %Body Armor_Cost19% + %Body Armor_Cost18% + %Body Armor_Cost17% + %Body Armor_Cost16% + %Body Armor_Cost15% + %Body Armor_Cost14% + %Body Armor_Cost13% + %Body Armor_Cost12% + %Body Armor_Cost11% + _
			%Body Armor_Cost10% + %Body Armor_Cost9% + %Body Armor_Cost8% + %Body Armor_Cost7% + %Body Armor_Cost6% + %Body Armor_Cost5% + %Body Armor_Cost4% + %Body Armor_Cost3% + %Body Armor_Cost2% + %Body Armor_Cost1% _
		)/100 _
	),_
	x(_
		#ChoiceList(_
				name(Body Armor_),_
				title(Armor Location List),_
				text(Please select the location or locations protected by this armor:),_
				picksallowed(atleast 1, upto 20),_
				method(bynumber),_
					list(_
							#List(Body Armor Location One)_
						),_
				aliaslist(_
							#List(Body Armor Prefix)_
						),_
				alt1list(_
							#List(Body Armor Location Two)_
						),_
				alt2list(_
							#List(Body Armor Location Three)_
						),_
				alt3list(_
							#List(Body Armor Location Coverage)_
						)_
				)_
	), noresync(yes)

"Scale, Light (%Body Armor_1alias%)", page(LT100-110),_
	displayname(Scale, Light (Build-your-own Body Armor)),_
	drnotes(_
				{Split DR: use the lower DR against crushing attacks.}_
			),_
	location(%Body Armor_alt1list%), coverage(%Body Armor_alt3list%), basedr(3), crushingdr(2),_
	mods(Equipment, Armor, Armor - Metal, Armor - Scale),_
	techlvl(1), notes([4]), don(30), dr(3/2), displaycost(320/base), displayweight(16/base), basecost(@round(320 * me::basecostmultiplier,2)), baseweight(@round(16 * me::basecostmultiplier,2)),_
	description(TL:1 DR:3/2 Locations: %Body Armor_alt2List% Notes:[4] Second DR value vs. crushing.),_
	basecostmultiplier(_
		(_
			%Body Armor_Cost20% + %Body Armor_Cost19% + %Body Armor_Cost18% + %Body Armor_Cost17% + %Body Armor_Cost16% + %Body Armor_Cost15% + %Body Armor_Cost14% + %Body Armor_Cost13% + %Body Armor_Cost12% + %Body Armor_Cost11% + _
			%Body Armor_Cost10% + %Body Armor_Cost9% + %Body Armor_Cost8% + %Body Armor_Cost7% + %Body Armor_Cost6% + %Body Armor_Cost5% + %Body Armor_Cost4% + %Body Armor_Cost3% + %Body Armor_Cost2% + %Body Armor_Cost1% _
		)/100 _
	),_
	x(_
		#ChoiceList(_
				name(Body Armor_),_
				title(Armor Location List),_
				text(Please select the location or locations protected by this armor:),_
				picksallowed(atleast 1, upto 20),_
				method(bynumber),_
					list(_
							#List(Body Armor Location One)_
						),_
				aliaslist(_
							#List(Body Armor Prefix)_
						),_
				alt1list(_
							#List(Body Armor Location Two)_
						),_
				alt2list(_
							#List(Body Armor Location Three)_
						),_
				alt3list(_
							#List(Body Armor Location Coverage)_
						)_
				)_
	), noresync(yes)

"Scale, Medium (%Body Armor_1alias%)", page(LT100-110),_
	displayname(Scale, Medium (Build-your-own Body Armor)),_
	drnotes(_
				{Split DR: use the lower DR against crushing attacks.}_
			),_
	location(%Body Armor_alt1list%), coverage(%Body Armor_alt3list%), basedr(4), crushingdr(3),_
	mods(Equipment, Armor, Armor - Metal, Armor - Scale),_
	techlvl(1), notes([4]), don(30), dr(4/3), displaycost(550/base), displayweight(24/base), basecost(@round(550 * me::basecostmultiplier,2)), baseweight(@round(24 * me::basecostmultiplier,2)),_
	description(TL:1 DR:4/3 Locations: %Body Armor_alt2List% Notes:[4] Second DR value vs. crushing.),_
	basecostmultiplier(_
		(_
			%Body Armor_Cost20% + %Body Armor_Cost19% + %Body Armor_Cost18% + %Body Armor_Cost17% + %Body Armor_Cost16% + %Body Armor_Cost15% + %Body Armor_Cost14% + %Body Armor_Cost13% + %Body Armor_Cost12% + %Body Armor_Cost11% + _
			%Body Armor_Cost10% + %Body Armor_Cost9% + %Body Armor_Cost8% + %Body Armor_Cost7% + %Body Armor_Cost6% + %Body Armor_Cost5% + %Body Armor_Cost4% + %Body Armor_Cost3% + %Body Armor_Cost2% + %Body Armor_Cost1% _
		)/100 _
	),_
	x(_
		#ChoiceList(_
				name(Body Armor_),_
				title(Armor Location List),_
				text(Please select the location or locations protected by this armor:),_
				picksallowed(atleast 1, upto 20),_
				method(bynumber),_
					list(_
							#List(Body Armor Location One)_
						),_
				aliaslist(_
							#List(Body Armor Prefix)_
						),_
				alt1list(_
							#List(Body Armor Location Two)_
						),_
				alt2list(_
							#List(Body Armor Location Three)_
						),_
				alt3list(_
							#List(Body Armor Location Coverage)_
						)_
				)_
	), noresync(yes)

"Scale, Heavy (%Body Armor_1alias%)", page(LT100-110),_
	displayname(Scale, Heavy (Build-your-own Body Armor)),_
	location(%Body Armor_alt1list%), coverage(%Body Armor_alt3list%),_
	mods(Equipment, Armor, Armor - Metal, Armor - Scale),_
	techlvl(1), notes(), don(30), dr(5), displaycost(1100/base), displayweight(32/base), basecost(@round(1100 * me::basecostmultiplier,2)), baseweight(@round(32 * me::basecostmultiplier,2)),_
	description(TL:1 DR:5 Locations: %Body Armor_alt2List%),_
	basecostmultiplier(_
		(_
			%Body Armor_Cost20% + %Body Armor_Cost19% + %Body Armor_Cost18% + %Body Armor_Cost17% + %Body Armor_Cost16% + %Body Armor_Cost15% + %Body Armor_Cost14% + %Body Armor_Cost13% + %Body Armor_Cost12% + %Body Armor_Cost11% + _
			%Body Armor_Cost10% + %Body Armor_Cost9% + %Body Armor_Cost8% + %Body Armor_Cost7% + %Body Armor_Cost6% + %Body Armor_Cost5% + %Body Armor_Cost4% + %Body Armor_Cost3% + %Body Armor_Cost2% + %Body Armor_Cost1% _
		)/100 _
	),_
	x(_
		#ChoiceList(_
				name(Body Armor_),_
				title(Armor Location List),_
				text(Please select the location or locations protected by this armor:),_
				picksallowed(atleast 1, upto 20),_
				method(bynumber),_
					list(_
							#List(Body Armor Location One)_
						),_
				aliaslist(_
							#List(Body Armor Prefix)_
						),_
				alt1list(_
							#List(Body Armor Location Two)_
						),_
				alt2list(_
							#List(Body Armor Location Three)_
						),_
				alt3list(_
							#List(Body Armor Location Coverage)_
						)_
				)_
	), noresync(yes)

"Hardened Leather, Medium (%Body Armor_1alias%)", page(LT100-110),_
	displayname(Hardened Leather, Medium (Build-your-own Body Armor)),_
	location(%Body Armor_alt1list%), coverage(%Body Armor_alt3list%),_
	mods(Equipment, Armor, Armor - Organic, Armor - Leather),_
	techlvl(2), notes(), don(30), dr(2), displaycost(125/base), displayweight(15/base), basecost(@round(125 * me::basecostmultiplier,2)), baseweight(@round(15 * me::basecostmultiplier,2)),_
	description(TL:2 DR:2 Locations: %Body Armor_alt2List%),_
	basecostmultiplier(_
		(_
			%Body Armor_Cost20% + %Body Armor_Cost19% + %Body Armor_Cost18% + %Body Armor_Cost17% + %Body Armor_Cost16% + %Body Armor_Cost15% + %Body Armor_Cost14% + %Body Armor_Cost13% + %Body Armor_Cost12% + %Body Armor_Cost11% + _
			%Body Armor_Cost10% + %Body Armor_Cost9% + %Body Armor_Cost8% + %Body Armor_Cost7% + %Body Armor_Cost6% + %Body Armor_Cost5% + %Body Armor_Cost4% + %Body Armor_Cost3% + %Body Armor_Cost2% + %Body Armor_Cost1% _
		)/100 _
	),_
	x(_
		#ChoiceList(_
				name(Body Armor_),_
				title(Armor Location List),_
				text(Please select the location or locations protected by this armor:),_
				picksallowed(atleast 1, upto 20),_
				method(bynumber),_
					list(_
							#List(Body Armor Location One)_
						),_
				aliaslist(_
							#List(Body Armor Prefix)_
						),_
				alt1list(_
							#List(Body Armor Location Two)_
						),_
				alt2list(_
							#List(Body Armor Location Three)_
						),_
				alt3list(_
							#List(Body Armor Location Coverage)_
						)_
				)_
	), noresync(yes)

"Hardened Leather, Heavy (%Body Armor_1alias%)", page(LT100-110),_
	displayname(Hardened Leather, Heavy (Build-your-own Body Armor)),_
	location(%Body Armor_alt1list%), coverage(%Body Armor_alt3list%),_
	mods(Equipment, Armor, Armor - Organic, Armor - Leather),_
	techlvl(2), notes(), don(30), dr(3), displaycost(250/base), displayweight(25/base), basecost(@round(250 * me::basecostmultiplier,2)), baseweight(@round(25 * me::basecostmultiplier,2)),_
	description(TL:2 DR:3 Locations: %Body Armor_alt2List%),_
	basecostmultiplier(_
		(_
			%Body Armor_Cost20% + %Body Armor_Cost19% + %Body Armor_Cost18% + %Body Armor_Cost17% + %Body Armor_Cost16% + %Body Armor_Cost15% + %Body Armor_Cost14% + %Body Armor_Cost13% + %Body Armor_Cost12% + %Body Armor_Cost11% + _
			%Body Armor_Cost10% + %Body Armor_Cost9% + %Body Armor_Cost8% + %Body Armor_Cost7% + %Body Armor_Cost6% + %Body Armor_Cost5% + %Body Armor_Cost4% + %Body Armor_Cost3% + %Body Armor_Cost2% + %Body Armor_Cost1% _
		)/100 _
	),_
	x(_
		#ChoiceList(_
				name(Body Armor_),_
				title(Armor Location List),_
				text(Please select the location or locations protected by this armor:),_
				picksallowed(atleast 1, upto 20),_
				method(bynumber),_
					list(_
							#List(Body Armor Location One)_
						),_
				aliaslist(_
							#List(Body Armor Prefix)_
						),_
				alt1list(_
							#List(Body Armor Location Two)_
						),_
				alt2list(_
							#List(Body Armor Location Three)_
						),_
				alt3list(_
							#List(Body Armor Location Coverage)_
						)_
				)_
	), noresync(yes)

"Jack of Plates (%Body Armor_1alias%)", page(LT100-110), basedr(3), crushingdr(2),_
	displayname(Jack of Plates (Build-your-own Body Armor)),_
	drnotes(_
				{Split DR: use the lower DR against crushing attacks.}_
			),_
	location(%Body Armor_alt1list%), coverage(%Body Armor_alt3list%),_
	mods(Equipment, Armor, Armor - Metal, Armor - Plate),_
	techlvl(2), notes([4]), don(30), dr(3/2), displaycost(300/base), displayweight(18/base), basecost(@round(300 * me::basecostmultiplier,2)), baseweight(@round(18 * me::basecostmultiplier,2)),_
	description(TL:2 DR:3/2 Locations: %Body Armor_alt2List% Notes:[4] Second DR value vs. crushing.),_
	basecostmultiplier(_
		(_
			%Body Armor_Cost20% + %Body Armor_Cost19% + %Body Armor_Cost18% + %Body Armor_Cost17% + %Body Armor_Cost16% + %Body Armor_Cost15% + %Body Armor_Cost14% + %Body Armor_Cost13% + %Body Armor_Cost12% + %Body Armor_Cost11% + _
			%Body Armor_Cost10% + %Body Armor_Cost9% + %Body Armor_Cost8% + %Body Armor_Cost7% + %Body Armor_Cost6% + %Body Armor_Cost5% + %Body Armor_Cost4% + %Body Armor_Cost3% + %Body Armor_Cost2% + %Body Armor_Cost1% _
		)/100 _
	),_
	x(_
		#ChoiceList(_
				name(Body Armor_),_
				title(Armor Location List),_
				text(Please select the location or locations protected by this armor:),_
				picksallowed(atleast 1, upto 20),_
				method(bynumber),_
					list(_
							#List(Body Armor Location One)_
						),_
				aliaslist(_
							#List(Body Armor Prefix)_
						),_
				alt1list(_
							#List(Body Armor Location Two)_
						),_
				alt2list(_
							#List(Body Armor Location Three)_
						),_
				alt3list(_
							#List(Body Armor Location Coverage)_
						)_
				)_
	), noresync(yes)

"Mail, Light (%Body Armor_1alias%)", page(LT100-110),_
	displayname(Mail, Light (Build-your-own Body Armor)),_
	drnotes(_
				{Split DR: use the lower DR against crushing attacks.}_
			),_
	location(%Body Armor_alt1list%), coverage(%Body Armor_alt3list%), basedr(3*), crushingdr(1*),_
	mods(Equipment, Armor, Armor - Metal, Armor - Mail),_
	techlvl(2), notes([5]), don(15), dr(3/1*), displaycost(500/base), displayweight(12/base), basecost(@round(500 * me::basecostmultiplier,2)), baseweight(@round(12 * me::basecostmultiplier,2)),_
	description(TL:2 DR:3/1* Locations: %Body Armor_alt2List% Notes:[5] Second DR value vs. crushing.),_
	basecostmultiplier(_
		(_
			%Body Armor_Cost20% + %Body Armor_Cost19% + %Body Armor_Cost18% + %Body Armor_Cost17% + %Body Armor_Cost16% + %Body Armor_Cost15% + %Body Armor_Cost14% + %Body Armor_Cost13% + %Body Armor_Cost12% + %Body Armor_Cost11% + _
			%Body Armor_Cost10% + %Body Armor_Cost9% + %Body Armor_Cost8% + %Body Armor_Cost7% + %Body Armor_Cost6% + %Body Armor_Cost5% + %Body Armor_Cost4% + %Body Armor_Cost3% + %Body Armor_Cost2% + %Body Armor_Cost1% _
		)/100 _
	),_
	x(_
		#ChoiceList(_
				name(Body Armor_),_
				title(Armor Location List),_
				text(Please select the location or locations protected by this armor:),_
				picksallowed(atleast 1, upto 20),_
				method(bynumber),_
					list(_
							#List(Body Armor Location One)_
						),_
				aliaslist(_
							#List(Body Armor Prefix)_
						),_
				alt1list(_
							#List(Body Armor Location Two)_
						),_
				alt2list(_
							#List(Body Armor Location Three)_
						),_
				alt3list(_
							#List(Body Armor Location Coverage)_
						)_
				)_
	), noresync(yes)

"Mail, Fine (%Body Armor_1alias%)", page(LT100-110),_
	displayname(Mail, Fine (Build-your-own Body Armor)),_
	drnotes(_
				{Split DR: use the lower DR against crushing attacks.}_
			),_
	location(%Body Armor_alt1list%), coverage(%Body Armor_alt3list%), basedr(4*), crushingdr(2*),_
	mods(Equipment, Armor, Armor - Metal, Armor - Mail),_
	techlvl(2), notes([5]), don(15), dr(4/2*), displaycost(900/base), displayweight(15/base), basecost(@round(900 * me::basecostmultiplier,2)), baseweight(@round(15 * me::basecostmultiplier,2)),_
	description(TL:2 DR:4/2* Locations: %Body Armor_alt2List% Notes:[5] Second DR value vs. crushing.),_
	basecostmultiplier(_
		(_
			%Body Armor_Cost20% + %Body Armor_Cost19% + %Body Armor_Cost18% + %Body Armor_Cost17% + %Body Armor_Cost16% + %Body Armor_Cost15% + %Body Armor_Cost14% + %Body Armor_Cost13% + %Body Armor_Cost12% + %Body Armor_Cost11% + _
			%Body Armor_Cost10% + %Body Armor_Cost9% + %Body Armor_Cost8% + %Body Armor_Cost7% + %Body Armor_Cost6% + %Body Armor_Cost5% + %Body Armor_Cost4% + %Body Armor_Cost3% + %Body Armor_Cost2% + %Body Armor_Cost1% _
		)/100 _
	),_
	x(_
		#ChoiceList(_
				name(Body Armor_),_
				title(Armor Location List),_
				text(Please select the location or locations protected by this armor:),_
				picksallowed(atleast 1, upto 20),_
				method(bynumber),_
					list(_
							#List(Body Armor Location One)_
						),_
				aliaslist(_
							#List(Body Armor Prefix)_
						),_
				alt1list(_
							#List(Body Armor Location Two)_
						),_
				alt2list(_
							#List(Body Armor Location Three)_
						),_
				alt3list(_
							#List(Body Armor Location Coverage)_
						)_
				)_
	), noresync(yes)

"Mail, Heavy (%Body Armor_1alias%)", page(LT100-110),_
	displayname(Mail, Heavy (Build-your-own Body Armor)),_
	drnotes(_
				{Split DR: use the lower DR against crushing attacks.}_
			),_
	location(%Body Armor_alt1list%), coverage(%Body Armor_alt3list%), basedr(5*), crushingdr(3*),_
	mods(Equipment, Armor, Armor - Metal, Armor - Mail),_
	techlvl(2), notes([5]), don(15), dr(5/3*), displaycost(1200/base), displayweight(18/base), basecost(@round(1200 * me::basecostmultiplier,2)), baseweight(@round(18 * me::basecostmultiplier,2)),_
	description(TL:2 DR:5/3* Locations: %Body Armor_alt2List% Notes:[5] Second DR value vs. crushing.),_
	basecostmultiplier(_
		(_
			%Body Armor_Cost20% + %Body Armor_Cost19% + %Body Armor_Cost18% + %Body Armor_Cost17% + %Body Armor_Cost16% + %Body Armor_Cost15% + %Body Armor_Cost14% + %Body Armor_Cost13% + %Body Armor_Cost12% + %Body Armor_Cost11% + _
			%Body Armor_Cost10% + %Body Armor_Cost9% + %Body Armor_Cost8% + %Body Armor_Cost7% + %Body Armor_Cost6% + %Body Armor_Cost5% + %Body Armor_Cost4% + %Body Armor_Cost3% + %Body Armor_Cost2% + %Body Armor_Cost1% _
		)/100 _
	),_
	x(_
		#ChoiceList(_
				name(Body Armor_),_
				title(Armor Location List),_
				text(Please select the location or locations protected by this armor:),_
				picksallowed(atleast 1, upto 20),_
				method(bynumber),_
					list(_
							#List(Body Armor Location One)_
						),_
				aliaslist(_
							#List(Body Armor Prefix)_
						),_
				alt1list(_
							#List(Body Armor Location Two)_
						),_
				alt2list(_
							#List(Body Armor Location Three)_
						),_
				alt3list(_
							#List(Body Armor Location Coverage)_
						)_
				)_
	), noresync(yes)

"Segmented Plate, Light (%Body Armor_1alias%)", page(LT100-110),_
	displayname(Segmented Plate, Light (Build-your-own Body Armor)),_
	location(%Body Armor_alt1list%), coverage(%Body Armor_alt3list%),_
	mods(Equipment, Armor, Armor - Metal, Armor - Plate),_
	techlvl(2), notes(), don(45), dr(3), displaycost(600/base), displayweight(14/base), basecost(@round(600 * me::basecostmultiplier,2)), baseweight(@round(14 * me::basecostmultiplier,2)),_
	description(TL:2 DR:3 Locations: %Body Armor_alt2List%),_
	basecostmultiplier(_
		(_
			%Body Armor_Cost20% + %Body Armor_Cost19% + %Body Armor_Cost18% + %Body Armor_Cost17% + %Body Armor_Cost16% + %Body Armor_Cost15% + %Body Armor_Cost14% + %Body Armor_Cost13% + %Body Armor_Cost12% + %Body Armor_Cost11% + _
			%Body Armor_Cost10% + %Body Armor_Cost9% + %Body Armor_Cost8% + %Body Armor_Cost7% + %Body Armor_Cost6% + %Body Armor_Cost5% + %Body Armor_Cost4% + %Body Armor_Cost3% + %Body Armor_Cost2% + %Body Armor_Cost1% _
		)/100 _
	),_
	x(_
		#ChoiceList(_
				name(Body Armor_),_
				title(Armor Location List),_
				text(Please select the location or locations protected by this armor:),_
				picksallowed(atleast 1, upto 20),_
				method(bynumber),_
					list(_
							#List(Body Armor Location One)_
						),_
				aliaslist(_
							#List(Body Armor Prefix)_
						),_
				alt1list(_
							#List(Body Armor Location Two)_
						),_
				alt2list(_
							#List(Body Armor Location Three)_
						),_
				alt3list(_
							#List(Body Armor Location Coverage)_
						)_
				)_
	), noresync(yes)

"Segmented Plate, Medium (%Body Armor_1alias%)", page(LT100-110),_
	displayname(Segmented Plate, Medium (Build-your-own Body Armor)),_
	location(%Body Armor_alt1list%), coverage(%Body Armor_alt3list%),_
	mods(Equipment, Armor, Armor - Metal, Armor - Plate),_
	techlvl(2), notes(), don(45), dr(4), displaycost(900/base), displayweight(21/base), basecost(@round(900 * me::basecostmultiplier,2)), baseweight(@round(21 * me::basecostmultiplier,2)),_
	description(TL:2 DR:4 Locations: %Body Armor_alt2List%),_
	basecostmultiplier(_
		(_
			%Body Armor_Cost20% + %Body Armor_Cost19% + %Body Armor_Cost18% + %Body Armor_Cost17% + %Body Armor_Cost16% + %Body Armor_Cost15% + %Body Armor_Cost14% + %Body Armor_Cost13% + %Body Armor_Cost12% + %Body Armor_Cost11% + _
			%Body Armor_Cost10% + %Body Armor_Cost9% + %Body Armor_Cost8% + %Body Armor_Cost7% + %Body Armor_Cost6% + %Body Armor_Cost5% + %Body Armor_Cost4% + %Body Armor_Cost3% + %Body Armor_Cost2% + %Body Armor_Cost1% _
		)/100 _
	),_
	x(_
		#ChoiceList(_
				name(Body Armor_),_
				title(Armor Location List),_
				text(Please select the location or locations protected by this armor:),_
				picksallowed(atleast 1, upto 20),_
				method(bynumber),_
					list(_
							#List(Body Armor Location One)_
						),_
				aliaslist(_
							#List(Body Armor Prefix)_
						),_
				alt1list(_
							#List(Body Armor Location Two)_
						),_
				alt2list(_
							#List(Body Armor Location Three)_
						),_
				alt3list(_
							#List(Body Armor Location Coverage)_
						)_
				)_
	), noresync(yes)

"Segmented Plate, Heavy (%Body Armor_1alias%)", page(LT100-110),_
	displayname(Segmented Plate, Heavy (Build-your-own Body Armor)),_
	location(%Body Armor_alt1list%), coverage(%Body Armor_alt3list%),_
	mods(Equipment, Armor, Armor - Metal, Armor - Plate),_
	techlvl(2), notes(), don(45), dr(5), displaycost(1200/base), displayweight(28/base), basecost(@round(1200 * me::basecostmultiplier,2)), baseweight(@round(28 * me::basecostmultiplier,2)),_
	description(TL:2 DR:5 Locations: %Body Armor_alt2List%),_
	basecostmultiplier(_
		(_
			%Body Armor_Cost20% + %Body Armor_Cost19% + %Body Armor_Cost18% + %Body Armor_Cost17% + %Body Armor_Cost16% + %Body Armor_Cost15% + %Body Armor_Cost14% + %Body Armor_Cost13% + %Body Armor_Cost12% + %Body Armor_Cost11% + _
			%Body Armor_Cost10% + %Body Armor_Cost9% + %Body Armor_Cost8% + %Body Armor_Cost7% + %Body Armor_Cost6% + %Body Armor_Cost5% + %Body Armor_Cost4% + %Body Armor_Cost3% + %Body Armor_Cost2% + %Body Armor_Cost1% _
		)/100 _
	),_
	x(_
		#ChoiceList(_
				name(Body Armor_),_
				title(Armor Location List),_
				text(Please select the location or locations protected by this armor:),_
				picksallowed(atleast 1, upto 20),_
				method(bynumber),_
					list(_
							#List(Body Armor Location One)_
						),_
				aliaslist(_
							#List(Body Armor Prefix)_
						),_
				alt1list(_
							#List(Body Armor Location Two)_
						),_
				alt2list(_
							#List(Body Armor Location Three)_
						),_
				alt3list(_
							#List(Body Armor Location Coverage)_
						)_
				)_
	), noresync(yes)

"Mail and Plates (%Body Armor_1alias%)", page(LT100-110),_
	displayname(Mail and Plates (Build-your-own Body Armor)),_
	drnotes(_
				{Split DR: use the lower DR against crushing attacks.}_
			),_
	location(%Body Armor_alt1list%), coverage(%Body Armor_alt3list%), basedr(5), crushingdr(4),_
	mods(Equipment, Armor, Armor - Metal, Armor - Plate),_
	techlvl(3), notes([4]), don(20), dr(5/4), displaycost(1000/base), displayweight(20/base), basecost(@round(1000 * me::basecostmultiplier,2)), baseweight(@round(20 * me::basecostmultiplier,2)),_
	description(TL:3 DR:5/4 Locations: %Body Armor_alt2List% Notes:[4] Second DR value vs. crushing.),_
	basecostmultiplier(_
		(_
			%Body Armor_Cost20% + %Body Armor_Cost19% + %Body Armor_Cost18% + %Body Armor_Cost17% + %Body Armor_Cost16% + %Body Armor_Cost15% + %Body Armor_Cost14% + %Body Armor_Cost13% + %Body Armor_Cost12% + %Body Armor_Cost11% + _
			%Body Armor_Cost10% + %Body Armor_Cost9% + %Body Armor_Cost8% + %Body Armor_Cost7% + %Body Armor_Cost6% + %Body Armor_Cost5% + %Body Armor_Cost4% + %Body Armor_Cost3% + %Body Armor_Cost2% + %Body Armor_Cost1% _
		)/100 _
	),_
	x(_
		#ChoiceList(_
				name(Body Armor_),_
				title(Armor Location List),_
				text(Please select the location or locations protected by this armor:),_
				picksallowed(atleast 1, upto 20),_
				method(bynumber),_
					list(_
							#List(Body Armor Location One)_
						),_
				aliaslist(_
							#List(Body Armor Prefix)_
						),_
				alt1list(_
							#List(Body Armor Location Two)_
						),_
				alt2list(_
							#List(Body Armor Location Three)_
						),_
				alt3list(_
							#List(Body Armor Location Coverage)_
						)_
				)_
	), noresync(yes)

"Mail, Jousting (%Body Armor_1alias%)", page(LT100-110),_
	displayname(Mail, Jousting (Build-your-own Body Armor)),_
	conditional(-1 to ST:DX when "not Lance Skill"),_
	itemnotes(_
				{-1 DX, except for Lance skill.}_
			),_
	location(%Body Armor_alt1list%), coverage(%Body Armor_alt3list%),_
	mods(Equipment, Armor, Armor - Metal, Armor - Mail),_
	techlvl(3), notes([6]), don(30), dr(6), displaycost(1500/base), displayweight(30/base), basecost(@round(1500 * me::basecostmultiplier,2)), baseweight(@round(30 * me::basecostmultiplier,2)),_
	description(TL:3 DR:6 Locations: %Body Armor_alt2List% Notes:[6] -1 DX, except for Lance skill.),_
	basecostmultiplier(_
		(_
			%Body Armor_Cost20% + %Body Armor_Cost19% + %Body Armor_Cost18% + %Body Armor_Cost17% + %Body Armor_Cost16% + %Body Armor_Cost15% + %Body Armor_Cost14% + %Body Armor_Cost13% + %Body Armor_Cost12% + %Body Armor_Cost11% + _
			%Body Armor_Cost10% + %Body Armor_Cost9% + %Body Armor_Cost8% + %Body Armor_Cost7% + %Body Armor_Cost6% + %Body Armor_Cost5% + %Body Armor_Cost4% + %Body Armor_Cost3% + %Body Armor_Cost2% + %Body Armor_Cost1% _
		)/100 _
	),_
	x(_
		#ChoiceList(_
				name(Body Armor_),_
				title(Armor Location List),_
				text(Please select the location or locations protected by this armor:),_
				picksallowed(atleast 1, upto 20),_
				method(bynumber),_
					list(_
							#List(Body Armor Location One)_
						),_
				aliaslist(_
							#List(Body Armor Prefix)_
						),_
				alt1list(_
							#List(Body Armor Location Two)_
						),_
				alt2list(_
							#List(Body Armor Location Three)_
						),_
				alt3list(_
							#List(Body Armor Location Coverage)_
						)_
				)_
	), noresync(yes)

"Brigandine, Light (%Body Armor_1alias%)", page(LT100-110),_
	displayname(Brigandine, Light (Build-your-own Body Armor)),_
	location(%Body Armor_alt1list%), coverage(%Body Armor_alt3list%),_
	mods(Equipment, Armor, Armor - Metal, Armor - Plate),_
	techlvl(4), notes(), don(30), dr(3), displaycost(900/base), displayweight(10/base), basecost(@round(900 * me::basecostmultiplier,2)), baseweight(@round(10 * me::basecostmultiplier,2)),_
	description(TL:4 DR:3 Locations: %Body Armor_alt2List%),_
	basecostmultiplier(_
		(_
			%Body Armor_Cost20% + %Body Armor_Cost19% + %Body Armor_Cost18% + %Body Armor_Cost17% + %Body Armor_Cost16% + %Body Armor_Cost15% + %Body Armor_Cost14% + %Body Armor_Cost13% + %Body Armor_Cost12% + %Body Armor_Cost11% + _
			%Body Armor_Cost10% + %Body Armor_Cost9% + %Body Armor_Cost8% + %Body Armor_Cost7% + %Body Armor_Cost6% + %Body Armor_Cost5% + %Body Armor_Cost4% + %Body Armor_Cost3% + %Body Armor_Cost2% + %Body Armor_Cost1% _
		)/100 _
	),_
	x(_
		#ChoiceList(_
				name(Body Armor_),_
				title(Armor Location List),_
				text(Please select the location or locations protected by this armor:),_
				picksallowed(atleast 1, upto 20),_
				method(bynumber),_
					list(_
							#List(Body Armor Location One)_
						),_
				aliaslist(_
							#List(Body Armor Prefix)_
						),_
				alt1list(_
							#List(Body Armor Location Two)_
						),_
				alt2list(_
							#List(Body Armor Location Three)_
						),_
				alt3list(_
							#List(Body Armor Location Coverage)_
						)_
				)_
	), noresync(yes)

"Brigandine, Medium (%Body Armor_1alias%)", page(LT100-110),_
	displayname(Brigandine, Medium (Build-your-own Body Armor)),_
	location(%Body Armor_alt1list%), coverage(%Body Armor_alt3list%),_
	mods(Equipment, Armor, Armor - Metal, Armor - Plate),_
	techlvl(4), notes(), don(30), dr(5), displaycost(1800/base), displayweight(20/base), basecost(@round(1800 * me::basecostmultiplier,2)), baseweight(@round(20 * me::basecostmultiplier,2)),_
	description(TL:4 DR:5 Locations: %Body Armor_alt2List%),_
	basecostmultiplier(_
		(_
			%Body Armor_Cost20% + %Body Armor_Cost19% + %Body Armor_Cost18% + %Body Armor_Cost17% + %Body Armor_Cost16% + %Body Armor_Cost15% + %Body Armor_Cost14% + %Body Armor_Cost13% + %Body Armor_Cost12% + %Body Armor_Cost11% + _
			%Body Armor_Cost10% + %Body Armor_Cost9% + %Body Armor_Cost8% + %Body Armor_Cost7% + %Body Armor_Cost6% + %Body Armor_Cost5% + %Body Armor_Cost4% + %Body Armor_Cost3% + %Body Armor_Cost2% + %Body Armor_Cost1% _
		)/100 _
	),_
	x(_
		#ChoiceList(_
				name(Body Armor_),_
				title(Armor Location List),_
				text(Please select the location or locations protected by this armor:),_
				picksallowed(atleast 1, upto 20),_
				method(bynumber),_
					list(_
							#List(Body Armor Location One)_
						),_
				aliaslist(_
							#List(Body Armor Prefix)_
						),_
				alt1list(_
							#List(Body Armor Location Two)_
						),_
				alt2list(_
							#List(Body Armor Location Three)_
						),_
				alt3list(_
							#List(Body Armor Location Coverage)_
						)_
				)_
	), noresync(yes)

"Paper, Proofed (%Body Armor_1alias%)", page(LT100-110),_
	displayname(Paper, Proofed (Build-your-own Body Armor)),_
	drnotes(_
				{Combustible. If DR is penetrated by burning damage, it can catch fire. See Making Things Burn (p. B433); treat the armor material as resistant.}_
			),_
	location(%Body Armor_alt1list%), coverage(%Body Armor_alt3list%),_
	mods(Equipment, Armor, Armor - Organic),_
	techlvl(4), notes([1]), don(20), dr(6), displaycost(2000/base), displayweight(45/base), basecost(@round(2000 * me::basecostmultiplier,2)), baseweight(@round(45 * me::basecostmultiplier,2)),_
	description(TL:4 DR:6 Locations: %Body Armor_alt2List% Notes:[1] Combustible. If DR is penetrated by burning damage, it can catch fire. See Making Things Burn (p. B433); treat the armor material as resistant.),_
	basecostmultiplier(_
		(_
			%Body Armor_Cost20% + %Body Armor_Cost19% + %Body Armor_Cost18% + %Body Armor_Cost17% + %Body Armor_Cost16% + %Body Armor_Cost15% + %Body Armor_Cost14% + %Body Armor_Cost13% + %Body Armor_Cost12% + %Body Armor_Cost11% + _
			%Body Armor_Cost10% + %Body Armor_Cost9% + %Body Armor_Cost8% + %Body Armor_Cost7% + %Body Armor_Cost6% + %Body Armor_Cost5% + %Body Armor_Cost4% + %Body Armor_Cost3% + %Body Armor_Cost2% + %Body Armor_Cost1% _
		)/100 _
	),_
	x(_
		#ChoiceList(_
				name(Body Armor_),_
				title(Armor Location List),_
				text(Please select the location or locations protected by this armor:),_
				picksallowed(atleast 1, upto 20),_
				method(bynumber),_
					list(_
							#List(Body Armor Location One)_
						),_
				aliaslist(_
							#List(Body Armor Prefix)_
						),_
				alt1list(_
							#List(Body Armor Location Two)_
						),_
				alt2list(_
							#List(Body Armor Location Three)_
						),_
				alt3list(_
							#List(Body Armor Location Coverage)_
						)_
				)_
	), noresync(yes)

"Plate, Light (%Body Armor_1alias%)", page(LT100-110),_
	displayname(Plate, Light (Build-your-own Body Armor)),_
	location(%Body Armor_alt1list%), coverage(%Body Armor_alt3list%),_
	mods(Equipment, Armor, Armor - Metal, Armor - Plate),_
	techlvl(4), notes(), don(45), dr(3), displaycost(1000/base), displayweight(8/base), basecost(@round(1000 * me::basecostmultiplier,2)), baseweight(@round(8 * me::basecostmultiplier,2)),_
	description(TL:4 DR:3 Locations: %Body Armor_alt2List%),_
	basecostmultiplier(_
		(_
			%Body Armor_Cost20% + %Body Armor_Cost19% + %Body Armor_Cost18% + %Body Armor_Cost17% + %Body Armor_Cost16% + %Body Armor_Cost15% + %Body Armor_Cost14% + %Body Armor_Cost13% + %Body Armor_Cost12% + %Body Armor_Cost11% + _
			%Body Armor_Cost10% + %Body Armor_Cost9% + %Body Armor_Cost8% + %Body Armor_Cost7% + %Body Armor_Cost6% + %Body Armor_Cost5% + %Body Armor_Cost4% + %Body Armor_Cost3% + %Body Armor_Cost2% + %Body Armor_Cost1% _
		)/100 _
	),_
	x(_
		#ChoiceList(_
				name(Body Armor_),_
				title(Armor Location List),_
				text(Please select the location or locations protected by this armor:),_
				picksallowed(atleast 1, upto 20),_
				method(bynumber),_
					list(_
							#List(Body Armor Location One)_
						),_
				aliaslist(_
							#List(Body Armor Prefix)_
						),_
				alt1list(_
							#List(Body Armor Location Two)_
						),_
				alt2list(_
							#List(Body Armor Location Three)_
						),_
				alt3list(_
							#List(Body Armor Location Coverage)_
						)_
				)_
	), noresync(yes)

"Plate, Medium (%Body Armor_1alias%)", page(LT100-110),_
	displayname(Plate, Medium (Build-your-own Body Armor)),_
	location(%Body Armor_alt1list%), coverage(%Body Armor_alt3list%),_
	mods(Equipment, Armor, Armor - Metal, Armor - Plate),_
	techlvl(4), notes(), don(45), dr(6), displaycost(2500/base), displayweight(20/base), basecost(@round(2500 * me::basecostmultiplier,2)), baseweight(@round(20 * me::basecostmultiplier,2)),_
	description(TL:4 DR:6 Locations: %Body Armor_alt2List%),_
	basecostmultiplier(_
		(_
			%Body Armor_Cost20% + %Body Armor_Cost19% + %Body Armor_Cost18% + %Body Armor_Cost17% + %Body Armor_Cost16% + %Body Armor_Cost15% + %Body Armor_Cost14% + %Body Armor_Cost13% + %Body Armor_Cost12% + %Body Armor_Cost11% + _
			%Body Armor_Cost10% + %Body Armor_Cost9% + %Body Armor_Cost8% + %Body Armor_Cost7% + %Body Armor_Cost6% + %Body Armor_Cost5% + %Body Armor_Cost4% + %Body Armor_Cost3% + %Body Armor_Cost2% + %Body Armor_Cost1% _
		)/100 _
	),_
	x(_
		#ChoiceList(_
				name(Body Armor_),_
				title(Armor Location List),_
				text(Please select the location or locations protected by this armor:),_
				picksallowed(atleast 1, upto 20),_
				method(bynumber),_
					list(_
							#List(Body Armor Location One)_
						),_
				aliaslist(_
							#List(Body Armor Prefix)_
						),_
				alt1list(_
							#List(Body Armor Location Two)_
						),_
				alt2list(_
							#List(Body Armor Location Three)_
						),_
				alt3list(_
							#List(Body Armor Location Coverage)_
						)_
				)_
	), noresync(yes)

"Plate, Heavy (%Body Armor_1alias%)", page(LT100-110),_
	displayname(Plate, Heavy (Build-your-own Body Armor)),_
	location(%Body Armor_alt1list%), coverage(%Body Armor_alt3list%),_
	mods(Equipment, Armor, Armor - Metal, Armor - Plate),_
	techlvl(4), notes(), don(45), dr(9), displaycost(4000/base), displayweight(32/base), basecost(@round(4000 * me::basecostmultiplier,2)), baseweight(@round(32 * me::basecostmultiplier,2)),_
	description(TL:4 DR:9 Locations: %Body Armor_alt2List%),_
	basecostmultiplier(_
		(_
			%Body Armor_Cost20% + %Body Armor_Cost19% + %Body Armor_Cost18% + %Body Armor_Cost17% + %Body Armor_Cost16% + %Body Armor_Cost15% + %Body Armor_Cost14% + %Body Armor_Cost13% + %Body Armor_Cost12% + %Body Armor_Cost11% + _
			%Body Armor_Cost10% + %Body Armor_Cost9% + %Body Armor_Cost8% + %Body Armor_Cost7% + %Body Armor_Cost6% + %Body Armor_Cost5% + %Body Armor_Cost4% + %Body Armor_Cost3% + %Body Armor_Cost2% + %Body Armor_Cost1% _
		)/100 _
	),_
	x(_
		#ChoiceList(_
				name(Body Armor_),_
				title(Armor Location List),_
				text(Please select the location or locations protected by this armor:),_
				picksallowed(atleast 1, upto 20),_
				method(bynumber),_
					list(_
							#List(Body Armor Location One)_
						),_
				aliaslist(_
							#List(Body Armor Prefix)_
						),_
				alt1list(_
							#List(Body Armor Location Two)_
						),_
				alt2list(_
							#List(Body Armor Location Three)_
						),_
				alt3list(_
							#List(Body Armor Location Coverage)_
						)_
				)_
	), noresync(yes)

*******************************************************************************************************************
//  COPPER & BRONZE ARMOR ****************************************************************
*******************************************************************************************************************
#Clone "EQ:Brigandine, Light (%Helmet_Alt1List%)" as "EQ:Brigandine, Light, Bronze (%Helmet_Alt1List%)"
#Clone "EQ:Brigandine, Medium (%Helmet_Alt1List%)" as "EQ:Brigandine, Medium, Bronze (%Helmet_Alt1List%)"
#Clone "EQ:Jack of Plates (%Helmet_Alt1List%)" as "EQ:Jack of Plates, Bronze (%Helmet_Alt1List%)"
#Clone "EQ:Mail and Plates (%Helmet_Alt1List%)" as "EQ:Mail and Plates, Bronze (%Helmet_Alt1List%)"
#Clone "EQ:Mail, Fine (%Helmet_Alt1List%)" as "EQ:Mail, Fine, Bronze (%Helmet_Alt1List%)"
#Clone "EQ:Mail, Heavy (%Helmet_Alt1List%)" as "EQ:Mail, Heavy, Bronze (%Helmet_Alt1List%)"
#Clone "EQ:Mail, Jousting (%Helmet_Alt1List%)" as "EQ:Mail, Jousting, Bronze (%Helmet_Alt1List%)"
#Clone "EQ:Mail, Light (%Helmet_Alt1List%)" as "EQ:Mail, Light, Bronze (%Helmet_Alt1List%)"
#Clone "EQ:Plate, Heavy (%Helmet_Alt1List%)" as "EQ:Plate, Heavy, Bronze (%Helmet_Alt1List%)"
#Clone "EQ:Plate, Light (%Helmet_Alt1List%)" as "EQ:Plate, Light, Bronze (%Helmet_Alt1List%)"
#Clone "EQ:Plate, Medium (%Helmet_Alt1List%)" as "EQ:Plate, Medium, Bronze (%Helmet_Alt1List%)"
#Clone "EQ:Scale, Heavy (%Helmet_Alt1List%)" as "EQ:Scale, Heavy, Bronze (%Helmet_Alt1List%)"
#Clone "EQ:Scale, Light (%Helmet_Alt1List%)" as "EQ:Scale, Light, Bronze (%Helmet_Alt1List%)"
#Clone "EQ:Scale, Medium (%Helmet_Alt1List%)" as "EQ:Scale, Medium, Bronze (%Helmet_Alt1List%)"
#Clone "EQ:Segmented Plate, Heavy (%Helmet_Alt1List%)" as "EQ:Segmented Plate, Heavy, Bronze (%Helmet_Alt1List%)"
#Clone "EQ:Segmented Plate, Light (%Helmet_Alt1List%)" as "EQ:Segmented Plate, Light, Bronze (%Helmet_Alt1List%)"
#Clone "EQ:Segmented Plate, Medium (%Helmet_Alt1List%)" as "EQ:Segmented Plate, Medium, Bronze (%Helmet_Alt1List%)"

#Clone "EQ:Brigandine, Light (%Body Armor_1alias%)" as "EQ:Brigandine, Light, Bronze (%Body Armor_1alias%)"
#Clone "EQ:Brigandine, Medium (%Body Armor_1alias%)" as "EQ:Brigandine, Medium, Bronze (%Body Armor_1alias%)"
#Clone "EQ:Jack of Plates (%Body Armor_1alias%)" as "EQ:Jack of Plates, Bronze (%Body Armor_1alias%)"
#Clone "EQ:Mail and Plates (%Body Armor_1alias%)" as "EQ:Mail and Plates, Bronze (%Body Armor_1alias%)"
#Clone "EQ:Mail, Fine (%Body Armor_1alias%)" as "EQ:Mail, Fine, Bronze (%Body Armor_1alias%)"
#Clone "EQ:Mail, Heavy (%Body Armor_1alias%)" as "EQ:Mail, Heavy, Bronze (%Body Armor_1alias%)"
#Clone "EQ:Mail, Jousting (%Body Armor_1alias%)" as "EQ:Mail, Jousting, Bronze (%Body Armor_1alias%)"
#Clone "EQ:Mail, Light (%Body Armor_1alias%)" as "EQ:Mail, Light, Bronze (%Body Armor_1alias%)"
#Clone "EQ:Plate, Heavy (%Body Armor_1alias%)" as "EQ:Plate, Heavy, Bronze (%Body Armor_1alias%)"
#Clone "EQ:Plate, Light (%Body Armor_1alias%)" as "EQ:Plate, Light, Bronze (%Body Armor_1alias%)"
#Clone "EQ:Plate, Medium (%Body Armor_1alias%)" as "EQ:Plate, Medium, Bronze (%Body Armor_1alias%)"
#Clone "EQ:Scale, Heavy (%Body Armor_1alias%)" as "EQ:Scale, Heavy, Bronze (%Body Armor_1alias%)"
#Clone "EQ:Scale, Light (%Body Armor_1alias%)" as "EQ:Scale, Light, Bronze (%Body Armor_1alias%)"
#Clone "EQ:Scale, Medium (%Body Armor_1alias%)" as "EQ:Scale, Medium, Bronze (%Body Armor_1alias%)"
#Clone "EQ:Segmented Plate, Heavy (%Body Armor_1alias%)" as "EQ:Segmented Plate, Heavy, Bronze (%Body Armor_1alias%)"
#Clone "EQ:Segmented Plate, Light (%Body Armor_1alias%)" as "EQ:Segmented Plate, Light, Bronze (%Body Armor_1alias%)"
#Clone "EQ:Segmented Plate, Medium (%Body Armor_1alias%)" as "EQ:Segmented Plate, Medium, Bronze (%Body Armor_1alias%)"

#ReplaceTags in "EQ:Brigandine, Light, Bronze (%Helmet_Alt1List%)" with "displayname(Brigandine, Light, Bronze (Build-your-own Helmet)), needs(@hasmod(Armor Material: Bronze (TL 1))), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(3600/base), techlvl(1), description(TL:4 DR:3 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%)"
#ReplaceTags in "EQ:Brigandine, Medium, Bronze (%Helmet_Alt1List%)" with "displayname(Brigandine, Medium, Bronze (Build-your-own Helmet)), needs(@hasmod(Armor Material: Bronze (TL 1))), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(7200/base), techlvl(1), description(TL:4 DR:5 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%)"
#ReplaceTags in "EQ:Jack of Plates, Bronze (%Helmet_Alt1List%)" with "displayname(Jack of Plates, Bronze (Build-your-own Helmet)), needs(@hasmod(Armor Material: Bronze (TL 1))), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(1200/base), techlvl(1), description(TL:2 DR:3/2 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[4] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Mail and Plates, Bronze (%Helmet_Alt1List%)" with "displayname(Mail and Plates, Bronze (Build-your-own Helmet)), needs(@hasmod(Armor Material: Bronze (TL 1))), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(4000/base), techlvl(1), description(TL:3 DR:5/4 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[4] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Mail, Fine, Bronze (%Helmet_Alt1List%)" with "displayname(Mail, Fine, Bronze (Build-your-own Helmet)), needs(@hasmod(Armor Material: Bronze (TL 1))), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(3600/base), techlvl(1), description(TL:2 DR:4/2* Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[5] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Mail, Heavy, Bronze (%Helmet_Alt1List%)" with "displayname(Mail, Heavy, Bronze (Build-your-own Helmet)), needs(@hasmod(Armor Material: Bronze (TL 1))), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(4800/base), techlvl(1), description(TL:2 DR:5/3* Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[5] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Mail, Jousting, Bronze (%Helmet_Alt1List%)" with "displayname(Mail, Jousting, Bronze (Build-your-own Helmet)), needs(@hasmod(Armor Material: Bronze (TL 1))), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(6000/base), techlvl(1), description(TL:3 DR:6 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[6] -1 DX, except for Lance skill.)"
#ReplaceTags in "EQ:Mail, Light, Bronze (%Helmet_Alt1List%)" with "displayname(Mail, Light, Bronze (Build-your-own Helmet)), needs(@hasmod(Armor Material: Bronze (TL 1))), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(2000/base), techlvl(1), description(TL:2 DR:3/1* Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[5] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Plate, Heavy, Bronze (%Helmet_Alt1List%)" with "displayname(Plate, Heavy, Bronze (Build-your-own Helmet)), needs(@hasmod(Armor Material: Bronze (TL 1))), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(16000/base), techlvl(1), description(TL:4 DR:9 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%)"
#ReplaceTags in "EQ:Plate, Light, Bronze (%Helmet_Alt1List%)" with "displayname(Plate, Light, Bronze (Build-your-own Helmet)), needs(@hasmod(Armor Material: Bronze (TL 1))), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(4000/base), techlvl(1), description(TL:4 DR:3 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%)"
#ReplaceTags in "EQ:Plate, Medium, Bronze (%Helmet_Alt1List%)" with "displayname(Plate, Medium, Bronze (Build-your-own Helmet)), needs(@hasmod(Armor Material: Bronze (TL 1))), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(10000/base), techlvl(1), description(TL:4 DR:6 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%)"
#ReplaceTags in "EQ:Scale, Heavy, Bronze (%Helmet_Alt1List%)" with "displayname(Scale, Heavy, Bronze (Build-your-own Helmet)), needs(@hasmod(Armor Material: Bronze (TL 1))), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(4400/base), techlvl(1), description(TL:1 DR:5 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%)"
#ReplaceTags in "EQ:Scale, Light, Bronze (%Helmet_Alt1List%)" with "displayname(Scale, Light, Bronze (Build-your-own Helmet)), needs(@hasmod(Armor Material: Bronze (TL 1))), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(1280/base), techlvl(1), description(TL:1 DR:3/2 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[4] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Scale, Medium, Bronze (%Helmet_Alt1List%)" with "displayname(Scale, Medium, Bronze (Build-your-own Helmet)), needs(@hasmod(Armor Material: Bronze (TL 1))), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(2200/base), techlvl(1), description(TL:1 DR:4/3 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[4] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Segmented Plate, Heavy, Bronze (%Helmet_Alt1List%)" with "displayname(Segmented Plate, Heavy, Bronze (Build-your-own Helmet)), needs(@hasmod(Armor Material: Bronze (TL 1))), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(4800/base), techlvl(1), description(TL:2 DR:5 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%)"
#ReplaceTags in "EQ:Segmented Plate, Light, Bronze (%Helmet_Alt1List%)" with "displayname(Segmented Plate, Light, Bronze (Build-your-own Helmet)), needs(@hasmod(Armor Material: Bronze (TL 1))), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(2400/base), techlvl(1), description(TL:2 DR:3 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%)"
#ReplaceTags in "EQ:Segmented Plate, Medium, Bronze (%Helmet_Alt1List%)" with "displayname(Segmented Plate, Medium, Bronze (Build-your-own Helmet)), needs(@hasmod(Armor Material: Bronze (TL 1))), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(3600/base), techlvl(1), description(TL:2 DR:4 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%)"

#ReplaceTags in "EQ:Brigandine, Light, Bronze (%Body Armor_1alias%)" with "displayname(Brigandine, Light, Bronze (Build-your-own Body Armor)), needs(@hasmod(Armor Material: Bronze (TL 1))), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(3600/base), techlvl(1), description(TL:4 DR:3 Locations: %Body Armor_alt2List%)"
#ReplaceTags in "EQ:Brigandine, Medium, Bronze (%Body Armor_1alias%)" with "displayname(Brigandine, Medium, Bronze (Build-your-own Body Armor)), needs(@hasmod(Armor Material: Bronze (TL 1))), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(7200/base), techlvl(1), description(TL:4 DR:5 Locations: %Body Armor_alt2List%)"
#ReplaceTags in "EQ:Jack of Plates, Bronze (%Body Armor_1alias%)" with "displayname(Jack of Plates, Bronze (Build-your-own Body Armor)), needs(@hasmod(Armor Material: Bronze (TL 1))), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(1200/base), techlvl(1), description(TL:2 DR:3/2 Locations: %Body Armor_alt2List% Notes:[4] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Mail and Plates, Bronze (%Body Armor_1alias%)" with "displayname(Mail and Plates, Bronze (Build-your-own Body Armor)), needs(@hasmod(Armor Material: Bronze (TL 1))), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(4000/base), techlvl(1), description(TL:3 DR:5/4 Locations: %Body Armor_alt2List% Notes:[4] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Mail, Fine, Bronze (%Body Armor_1alias%)" with "displayname(Mail, Fine, Bronze (Build-your-own Body Armor)), needs(@hasmod(Armor Material: Bronze (TL 1))), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(3600/base), techlvl(1), description(TL:2 DR:4/2* Locations: %Body Armor_alt2List% Notes:[5] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Mail, Heavy, Bronze (%Body Armor_1alias%)" with "displayname(Mail, Heavy, Bronze (Build-your-own Body Armor)), needs(@hasmod(Armor Material: Bronze (TL 1))), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(4800/base), techlvl(1), description(TL:2 DR:5/3* Locations: %Body Armor_alt2List% Notes:[5] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Mail, Jousting, Bronze (%Body Armor_1alias%)" with "displayname(Mail, Jousting, Bronze (Build-your-own Body Armor)), needs(@hasmod(Armor Material: Bronze (TL 1))), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(6000/base), techlvl(1), description(TL:3 DR:6 Locations: %Body Armor_alt2List% Notes:[6] -1 DX, except for Lance skill.)"
#ReplaceTags in "EQ:Mail, Light, Bronze (%Body Armor_1alias%)" with "displayname(Mail, Light, Bronze (Build-your-own Body Armor)), needs(@hasmod(Armor Material: Bronze (TL 1))), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(2000/base), techlvl(1), description(TL:2 DR:3/1* Locations: %Body Armor_alt2List% Notes:[5] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Plate, Heavy, Bronze (%Body Armor_1alias%)" with "displayname(Plate, Heavy, Bronze (Build-your-own Body Armor)), needs(@hasmod(Armor Material: Bronze (TL 1))), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(16000/base), techlvl(1), description(TL:4 DR:9 Locations: %Body Armor_alt2List%)"
#ReplaceTags in "EQ:Plate, Light, Bronze (%Body Armor_1alias%)" with "displayname(Plate, Light, Bronze (Build-your-own Body Armor)), needs(@hasmod(Armor Material: Bronze (TL 1))), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(4000/base), techlvl(1), description(TL:4 DR:3 Locations: %Body Armor_alt2List%)"
#ReplaceTags in "EQ:Plate, Medium, Bronze (%Body Armor_1alias%)" with "displayname(Plate, Medium, Bronze (Build-your-own Body Armor)), needs(@hasmod(Armor Material: Bronze (TL 1))), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(10000/base), techlvl(1), description(TL:4 DR:6 Locations: %Body Armor_alt2List%)"
#ReplaceTags in "EQ:Scale, Heavy, Bronze (%Body Armor_1alias%)" with "displayname(Scale, Heavy, Bronze (Build-your-own Body Armor)), needs(@hasmod(Armor Material: Bronze (TL 1))), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(4400/base), techlvl(1), description(TL:1 DR:5 Locations: %Body Armor_alt2List%)"
#ReplaceTags in "EQ:Scale, Light, Bronze (%Body Armor_1alias%)" with "displayname(Scale, Light, Bronze (Build-your-own Body Armor)), needs(@hasmod(Armor Material: Bronze (TL 1))), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(1280/base), techlvl(1), description(TL:1 DR:3/2 Locations: %Body Armor_alt2List% Notes:[4] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Scale, Medium, Bronze (%Body Armor_1alias%)" with "displayname(Scale, Medium, Bronze (Build-your-own Body Armor)), needs(@hasmod(Armor Material: Bronze (TL 1))), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(2200/base), techlvl(1), description(TL:1 DR:4/3 Locations: %Body Armor_alt2List% Notes:[4] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Segmented Plate, Heavy, Bronze (%Body Armor_1alias%)" with "displayname(Segmented Plate, Heavy, Bronze (Build-your-own Body Armor)), needs(@hasmod(Armor Material: Bronze (TL 1))), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(4800/base), techlvl(1), description(TL:2 DR:5 Locations: %Body Armor_alt2List%)"
#ReplaceTags in "EQ:Segmented Plate, Light, Bronze (%Body Armor_1alias%)" with "displayname(Segmented Plate, Light, Bronze (Build-your-own Body Armor)), needs(@hasmod(Armor Material: Bronze (TL 1))), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(2400/base), techlvl(1), description(TL:2 DR:3 Locations: %Body Armor_alt2List%)"
#ReplaceTags in "EQ:Segmented Plate, Medium, Bronze (%Body Armor_1alias%)" with "displayname(Segmented Plate, Medium, Bronze (Build-your-own Body Armor)), needs(@hasmod(Armor Material: Bronze (TL 1))), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(3600/base), techlvl(1), description(TL:2 DR:4 Locations: %Body Armor_alt2List%)"

#Clone "EQ:Brigandine, Light (%Helmet_Alt1List%)" as "EQ:Brigandine, Light, Copper (%Helmet_Alt1List%)"
#Clone "EQ:Brigandine, Medium (%Helmet_Alt1List%)" as "EQ:Brigandine, Medium, Copper (%Helmet_Alt1List%)"
#Clone "EQ:Jack of Plates (%Helmet_Alt1List%)" as "EQ:Jack of Plates, Copper (%Helmet_Alt1List%)"
#Clone "EQ:Mail and Plates (%Helmet_Alt1List%)" as "EQ:Mail and Plates, Copper (%Helmet_Alt1List%)"
#Clone "EQ:Mail, Fine (%Helmet_Alt1List%)" as "EQ:Mail, Fine, Copper (%Helmet_Alt1List%)"
#Clone "EQ:Mail, Heavy (%Helmet_Alt1List%)" as "EQ:Mail, Heavy, Copper (%Helmet_Alt1List%)"
#Clone "EQ:Mail, Jousting (%Helmet_Alt1List%)" as "EQ:Mail, Jousting, Copper (%Helmet_Alt1List%)"
#Clone "EQ:Mail, Light (%Helmet_Alt1List%)" as "EQ:Mail, Light, Copper (%Helmet_Alt1List%)"
#Clone "EQ:Plate, Heavy (%Helmet_Alt1List%)" as "EQ:Plate, Heavy, Copper (%Helmet_Alt1List%)"
#Clone "EQ:Plate, Light (%Helmet_Alt1List%)" as "EQ:Plate, Light, Copper (%Helmet_Alt1List%)"
#Clone "EQ:Plate, Medium (%Helmet_Alt1List%)" as "EQ:Plate, Medium, Copper (%Helmet_Alt1List%)"
#Clone "EQ:Scale, Heavy (%Helmet_Alt1List%)" as "EQ:Scale, Heavy, Copper (%Helmet_Alt1List%)"
#Clone "EQ:Scale, Light (%Helmet_Alt1List%)" as "EQ:Scale, Light, Copper (%Helmet_Alt1List%)"
#Clone "EQ:Scale, Medium (%Helmet_Alt1List%)" as "EQ:Scale, Medium, Copper (%Helmet_Alt1List%)"
#Clone "EQ:Segmented Plate, Heavy (%Helmet_Alt1List%)" as "EQ:Segmented Plate, Heavy, Copper (%Helmet_Alt1List%)"
#Clone "EQ:Segmented Plate, Light (%Helmet_Alt1List%)" as "EQ:Segmented Plate, Light, Copper (%Helmet_Alt1List%)"
#Clone "EQ:Segmented Plate, Medium (%Helmet_Alt1List%)" as "EQ:Segmented Plate, Medium, Copper (%Helmet_Alt1List%)"

#Clone "EQ:Brigandine, Light (%Body Armor_1alias%)" as "EQ:Brigandine, Light, Copper (%Body Armor_1alias%)"
#Clone "EQ:Brigandine, Medium (%Body Armor_1alias%)" as "EQ:Brigandine, Medium, Copper (%Body Armor_1alias%)"
#Clone "EQ:Jack of Plates (%Body Armor_1alias%)" as "EQ:Jack of Plates, Copper (%Body Armor_1alias%)"
#Clone "EQ:Mail and Plates (%Body Armor_1alias%)" as "EQ:Mail and Plates, Copper (%Body Armor_1alias%)"
#Clone "EQ:Mail, Fine (%Body Armor_1alias%)" as "EQ:Mail, Fine, Copper (%Body Armor_1alias%)"
#Clone "EQ:Mail, Heavy (%Body Armor_1alias%)" as "EQ:Mail, Heavy, Copper (%Body Armor_1alias%)"
#Clone "EQ:Mail, Jousting (%Body Armor_1alias%)" as "EQ:Mail, Jousting, Copper (%Body Armor_1alias%)"
#Clone "EQ:Mail, Light (%Body Armor_1alias%)" as "EQ:Mail, Light, Copper (%Body Armor_1alias%)"
#Clone "EQ:Plate, Heavy (%Body Armor_1alias%)" as "EQ:Plate, Heavy, Copper (%Body Armor_1alias%)"
#Clone "EQ:Plate, Light (%Body Armor_1alias%)" as "EQ:Plate, Light, Copper (%Body Armor_1alias%)"
#Clone "EQ:Plate, Medium (%Body Armor_1alias%)" as "EQ:Plate, Medium, Copper (%Body Armor_1alias%)"
#Clone "EQ:Scale, Heavy (%Body Armor_1alias%)" as "EQ:Scale, Heavy, Copper (%Body Armor_1alias%)"
#Clone "EQ:Scale, Light (%Body Armor_1alias%)" as "EQ:Scale, Light, Copper (%Body Armor_1alias%)"
#Clone "EQ:Scale, Medium (%Body Armor_1alias%)" as "EQ:Scale, Medium, Copper (%Body Armor_1alias%)"
#Clone "EQ:Segmented Plate, Heavy (%Body Armor_1alias%)" as "EQ:Segmented Plate, Heavy, Copper (%Body Armor_1alias%)"
#Clone "EQ:Segmented Plate, Light (%Body Armor_1alias%)" as "EQ:Segmented Plate, Light, Copper (%Body Armor_1alias%)"
#Clone "EQ:Segmented Plate, Medium (%Body Armor_1alias%)" as "EQ:Segmented Plate, Medium, Copper (%Body Armor_1alias%)"

#ReplaceTags in "EQ:Brigandine, Light, Copper (%Helmet_Alt1List%)" with "displayname(Brigandine, Light, Copper (Build-your-own Helmet)), needs(@hasmod(Armor Material: Copper (TL 1))), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:2 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%)"
#ReplaceTags in "EQ:Brigandine, Medium, Copper (%Helmet_Alt1List%)" with "displayname(Brigandine, Medium, Copper (Build-your-own Helmet)), needs(@hasmod(Armor Material: Copper (TL 1))), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:4 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%)"
#ReplaceTags in "EQ:Jack of Plates, Copper (%Helmet_Alt1List%)" with "displayname(Jack of Plates, Copper (Build-your-own Helmet)), needs(@hasmod(Armor Material: Copper (TL 1))), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:2/1 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[4] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Mail and Plates, Copper (%Helmet_Alt1List%)" with "displayname(Mail and Plates, Copper (Build-your-own Helmet)), needs(@hasmod(Armor Material: Copper (TL 1))), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:4/3 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[4] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Mail, Fine, Copper (%Helmet_Alt1List%)" with "displayname(Mail, Fine, Copper (Build-your-own Helmet)), needs(@hasmod(Armor Material: Copper (TL 1))), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:3/1* Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[5] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Mail, Heavy, Copper (%Helmet_Alt1List%)" with "displayname(Mail, Heavy, Copper (Build-your-own Helmet)), needs(@hasmod(Armor Material: Copper (TL 1))), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:4/2* Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[5] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Mail, Jousting, Copper (%Helmet_Alt1List%)" with "displayname(Mail, Jousting, Copper (Build-your-own Helmet)), needs(@hasmod(Armor Material: Copper (TL 1))), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:5 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[6] -1 DX, except for Lance skill.)"
#ReplaceTags in "EQ:Mail, Light, Copper (%Helmet_Alt1List%)" with "displayname(Mail, Light, Copper (Build-your-own Helmet)), needs(@hasmod(Armor Material: Copper (TL 1))), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:2/0* Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[5] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Plate, Heavy, Copper (%Helmet_Alt1List%)" with "displayname(Plate, Heavy, Copper (Build-your-own Helmet)), needs(@hasmod(Armor Material: Copper (TL 1))), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:8 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%)"
#ReplaceTags in "EQ:Plate, Light, Copper (%Helmet_Alt1List%)" with "displayname(Plate, Light, Copper (Build-your-own Helmet)), needs(@hasmod(Armor Material: Copper (TL 1))), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:2 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%)"
#ReplaceTags in "EQ:Plate, Medium, Copper (%Helmet_Alt1List%)" with "displayname(Plate, Medium, Copper (Build-your-own Helmet)), needs(@hasmod(Armor Material: Copper (TL 1))), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:5 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%)"
#ReplaceTags in "EQ:Scale, Heavy, Copper (%Helmet_Alt1List%)" with "displayname(Scale, Heavy, Copper (Build-your-own Helmet)), needs(@hasmod(Armor Material: Copper (TL 1))), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:4 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%)"
#ReplaceTags in "EQ:Scale, Light, Copper (%Helmet_Alt1List%)" with "displayname(Scale, Light, Copper (Build-your-own Helmet)), needs(@hasmod(Armor Material: Copper (TL 1))), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:2/1 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[4] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Scale, Medium, Copper (%Helmet_Alt1List%)" with "displayname(Scale, Medium, Copper (Build-your-own Helmet)), needs(@hasmod(Armor Material: Copper (TL 1))), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:3/2 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[4] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Segmented Plate, Heavy, Copper (%Helmet_Alt1List%)" with "displayname(Segmented Plate, Heavy, Copper (Build-your-own Helmet)), needs(@hasmod(Armor Material: Copper (TL 1))), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:4 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%)"
#ReplaceTags in "EQ:Segmented Plate, Light, Copper (%Helmet_Alt1List%)" with "displayname(Segmented Plate, Light, Copper (Build-your-own Helmet)), needs(@hasmod(Armor Material: Copper (TL 1))), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:2 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%)"
#ReplaceTags in "EQ:Segmented Plate, Medium, Copper (%Helmet_Alt1List%)" with "displayname(Segmented Plate, Medium, Copper (Build-your-own Helmet)), needs(@hasmod(Armor Material: Copper (TL 1))), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:3 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%)"

#ReplaceTags in "EQ:Brigandine, Light, Copper (%Body Armor_1alias%)" with "displayname(Brigandine, Light, Copper (Build-your-own Body Armor)), needs(@hasmod(Armor Material: Copper (TL 1))), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:2 Locations: %Body Armor_alt2List%)"
#ReplaceTags in "EQ:Brigandine, Medium, Copper (%Body Armor_1alias%)" with "displayname(Brigandine, Medium, Copper (Build-your-own Body Armor)), needs(@hasmod(Armor Material: Copper (TL 1))), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:4 Locations: %Body Armor_alt2List%)"
#ReplaceTags in "EQ:Jack of Plates, Copper (%Body Armor_1alias%)" with "displayname(Jack of Plates, Copper (Build-your-own Body Armor)), needs(@hasmod(Armor Material: Copper (TL 1))), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:2/1 Locations: %Body Armor_alt2List% Notes:[4] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Mail and Plates, Copper (%Body Armor_1alias%)" with "displayname(Mail and Plates, Copper (Build-your-own Body Armor)), needs(@hasmod(Armor Material: Copper (TL 1))), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:4/3 Locations: %Body Armor_alt2List% Notes:[4] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Mail, Fine, Copper (%Body Armor_1alias%)" with "displayname(Mail, Fine, Copper (Build-your-own Body Armor)), needs(@hasmod(Armor Material: Copper (TL 1))), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:3/1* Locations: %Body Armor_alt2List% Notes:[5] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Mail, Heavy, Copper (%Body Armor_1alias%)" with "displayname(Mail, Heavy, Copper (Build-your-own Body Armor)), needs(@hasmod(Armor Material: Copper (TL 1))), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:4/2* Locations: %Body Armor_alt2List% Notes:[5] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Mail, Jousting, Copper (%Body Armor_1alias%)" with "displayname(Mail, Jousting, Copper (Build-your-own Body Armor)), needs(@hasmod(Armor Material: Copper (TL 1))), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:5 Locations: %Body Armor_alt2List% Notes:[6] -1 DX, except for Lance skill.)"
#ReplaceTags in "EQ:Mail, Light, Copper (%Body Armor_1alias%)" with "displayname(Mail, Light, Copper (Build-your-own Body Armor)), needs(@hasmod(Armor Material: Copper (TL 1))), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:2/0* Locations: %Body Armor_alt2List% Notes:[5] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Plate, Heavy, Copper (%Body Armor_1alias%)" with "displayname(Plate, Heavy, Copper (Build-your-own Body Armor)), needs(@hasmod(Armor Material: Copper (TL 1))), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:8 Locations: %Body Armor_alt2List%)"
#ReplaceTags in "EQ:Plate, Light, Copper (%Body Armor_1alias%)" with "displayname(Plate, Light, Copper (Build-your-own Body Armor)), needs(@hasmod(Armor Material: Copper (TL 1))), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:2 Locations: %Body Armor_alt2List%)"
#ReplaceTags in "EQ:Plate, Medium, Copper (%Body Armor_1alias%)" with "displayname(Plate, Medium, Copper (Build-your-own Body Armor)), needs(@hasmod(Armor Material: Copper (TL 1))), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:5 Locations: %Body Armor_alt2List%)"
#ReplaceTags in "EQ:Scale, Heavy, Copper (%Body Armor_1alias%)" with "displayname(Scale, Heavy, Copper (Build-your-own Body Armor)), needs(@hasmod(Armor Material: Copper (TL 1))), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:4 Locations: %Body Armor_alt2List%)"
#ReplaceTags in "EQ:Scale, Light, Copper (%Body Armor_1alias%)" with "displayname(Scale, Light, Copper (Build-your-own Body Armor)), needs(@hasmod(Armor Material: Copper (TL 1))), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:2/1 Locations: %Body Armor_alt2List% Notes:[4] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Scale, Medium, Copper (%Body Armor_1alias%)" with "displayname(Scale, Medium, Copper (Build-your-own Body Armor)), needs(@hasmod(Armor Material: Copper (TL 1))), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:3/2 Locations: %Body Armor_alt2List% Notes:[4] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Segmented Plate, Heavy, Copper (%Body Armor_1alias%)" with "displayname(Segmented Plate, Heavy, Copper (Build-your-own Body Armor)), needs(@hasmod(Armor Material: Copper (TL 1))), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:4 Locations: %Body Armor_alt2List%)"
#ReplaceTags in "EQ:Segmented Plate, Light, Copper (%Body Armor_1alias%)" with "displayname(Segmented Plate, Light, Copper (Build-your-own Body Armor)), needs(@hasmod(Armor Material: Copper (TL 1))), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:2 Locations: %Body Armor_alt2List%)"
#ReplaceTags in "EQ:Segmented Plate, Medium, Copper (%Body Armor_1alias%)" with "displayname(Segmented Plate, Medium, Copper (Build-your-own Body Armor)), needs(@hasmod(Armor Material: Copper (TL 1))), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:3 Locations: %Body Armor_alt2List%)"

********************************************************************************************************\[STOP]
[MODIFIERS]
*******************************************************************************************************\[START]
<Armor>
Armor Quality: Cheap, -0.6 CF, gives(-1 to owner::dr), page(LT109), shortname(Cheap), group(Armor)
Armor Quality: Expert Tailoring (TL 1), +5 CF, gives(-(owner::baseweight*0.15) to owner::baseweight), page(LT109), shortname(Expert Tailoring), group(Armor)
Armor Quality: Masterful Tailoring (TL 1), +29 CF, gives(-(owner::baseweight*0.30) to owner::baseweight), page(LT109), shortname(Masterful Tailoring), group(Armor)

<Armor - Cloth>
Armor Material: Feathered, +2000, conditional(+1 to owner::dr when "vs light missiles"), page(LT104), shortname(Feathered), group(Armor - Cloth)

<Armor - Textile>
Armor Material: Raw Silk, +19 CF, conditional(+1 to owner::dr when "vs cutting or impaling"), page(LT104), shortname(Silk), group(Armor - Textile)
Armor Material: Spider Silk, +99 CF, conditional(+2 to owner::dr when "vs cutting or impaling"), page(LT104), shortname(Spider Silk), group(Armor - Textile)
Armor Material: Reinforced, +0.25 CF, conditional(+1 to owner::dr when "vs cutting"), gives(+(owner::baseweight*0.25) to owner::baseweight), page(LT104), shortname(Reinforced), group(Armor - Textile, Armor - Leather)

<Armor - Leather>
Armor Material: Reinforced, +0.25 CF, conditional(+1 to owner::dr when "vs cutting"), gives(+(owner::baseweight*0.25) to owner::baseweight), page(LT104), shortname(Reinforced), group(Armor - Textile, Armor - Leather)
Armor Quality: Leather of Quality, +4 CF, gives(+1 to owner::dr), page(LT105), shortname(Leather of Quality), group(Armor - Leather)
Armor Material: Rawhide, -0.6 CF, page(LT104), shortname(Rawhide), group(Armor - Leather)

<Armor - Mail>
Armor Material: Banded Mail, +0.5 CF, conditional(+2 to owner::dr when "vs crushing"), gives(+(owner::baseweight*0.50) to owner::baseweight), page(LT104), shortname(Banded), group(Armor - Mail)
Armor Material: Butted Mail, -0.6 CF, conditional(-2 to owner::dr when "vs impaling"), page(LT107), shortname(Butted), group(Armor - Mail)

<Armor - Scale>
Armor Quality: Fluting (TL 1), +4 CF, gives(-(owner::baseweight*0.10) to owner::baseweight), page(LT109), shortname(Fluting), group(Armor - Plate, Armor - Scale)
Armor Material: Stone, -0.5 CF, gives(*2 to owner::weight), page(LT106), shortname(Stone), group(Armor - Scale)
Armor Material: Jade, +4 CF, gives(*2 to owner::weight, +2 to ST:Reaction), page(LT106), shortname(Jade), group(Armor - Scale)
Armor Material: Jade (Gem Quality), +9 CF, gives(*2 to owner::weight, +3 to ST:Reaction), page(LT106), shortname(Gem Quality Jade), group(Armor - Scale)
Armor: Heavy Plate, +50%/+100%, gives(+(owner::baseweight*0.5) to owner::baseweight, +1 to owner::dr), page(LT109), shortname(Heavy Plate), group(Armor - Plate, Armor - Scale)

<Armor - Plate>
Armor Quality: Fluting (TL 1), +4 CF, gives(-(owner::baseweight*0.10) to owner::baseweight), page(LT109), shortname(Fluting), group(Armor - Plate, Armor - Scale)
Armor Quality: Duplex Plate (TL 4), +8 CF, gives(-(owner::baseweight*0.10) to owner::baseweight, +1 to owner::dr), page(LT109), shortname(Duplex Plate), group(Armor - Plate)
Armor: Heavy Plate, +50%/+100%, gives(+(owner::baseweight*0.5) to owner::baseweight, +1 to owner::dr), page(LT109), shortname(Heavy Plate), group(Armor - Plate, Armor - Scale)

<Armor - Metal>
Armor Material: Hardened Steel (TL 4), +4 CF, gives(+1 to owner::dr), page(LT109), shortname(Hardened Steel), group(Armor - Metal)
Armor Material: Copper (TL 1), +0, gives(-1 to owner::dr), shortname(Copper), page(B109)
Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)

<Helmet>
Armor: Helmet Padding, +0, gives(+1 to owner::dr, +@round(6 * owner::paddingcost * 0.01, 2) to owner::baseweight), shortname(Padding), formula(@round(50 * owner::paddingcost * 0.01, 2)), forceformula(yes)
Armor: Helmet Plume, +20, gives(+1 to owner::baseweight), shortname(Plume), tier(2)
Armor: Helmet Crest, +20, gives(+1 to owner::baseweight), shortname(Crest), tier(2)
"Armor: Helmet, Flat-Topped", -0.2 CF, gives(+(0.2 * owner::baseweight) to owner::baseweight), shortname(Flat-Topped)
"Armor: Helmet, Spangenhelm", +0, shortname(Spangenhelm)
"Armor: Helmet, Single-Piece", +9 CF, gives(-(0.25 * owner::baseweight) to owner::baseweight), shortname(Single-Piece)

<Equipment>
Equipment: Adjusting for SM -4, *0.05, gives(*0.05 to owner::baseweight), shortname(SM -3), page(LT8, HT10, UT16), group(Equipment), tier(1)
Equipment: Adjusting for SM -3, *0.1, gives(*0.1 to owner::baseweight), shortname(SM -2), page(LT8, HT10, UT16), group(Equipment), tier(1)
Equipment: Adjusting for SM -2, *0.2, gives(*0.2 to owner::baseweight), shortname(SM -2), page(LT8, HT10, UT16), group(Equipment), tier(1)
Equipment: Adjusting for SM -1, *0.5, gives(*0.5 to owner::baseweight), shortname(SM -1), page(LT8, HT10, UT16), group(Equipment), tier(1)
Equipment: Adjusting for SM +1, *2, gives(*2 to owner::baseweight), shortname(SM +1), page(LT8, HT10, UT16), group(Equipment), tier(1)
Equipment: Adjusting for SM +2, *5, gives(*5 to owner::baseweight), shortname(SM +2), page(LT8, HT10, UT16), group(Equipment), tier(1)
Equipment: Adjusting for SM +3, *10, gives(*10 to owner::baseweight), shortname(SM +3), page(LT8, HT10, UT16), group(Equipment), tier(1)
Equipment: Adjusting for SM +4, *20, gives(*20 to owner::baseweight), shortname(SM +4), page(LT8, HT10, UT16), group(Equipment), tier(1)
Equipment: Adjusting for SM +5, *50, gives(*50 to owner::baseweight), shortname(SM +5), page(LT8, HT10, UT16), group(Equipment), tier(1)
Equipment: Adjusting for SM +6, *100, gives(*100 to owner::baseweight), shortname(SM +6), page(LT8, HT10, UT16), group(Equipment), tier(1)
Equipment: Adjusting for SM +7, *200, gives(*200 to owner::baseweight), shortname(SM +7), page(LT8, HT10, UT16), group(Equipment), tier(1)
Equipment: Adjusting for SM +8, *500, gives(*500 to owner::baseweight), shortname(SM +8), page(LT8, HT10, UT16), group(Equipment), tier(1)
Equipment: Adjusting for SM +9, *1000, gives(*1000 to owner::baseweight), shortname(SM +9), page(LT8, HT10, UT16), group(Equipment), tier(1)
Equipment: Adjusting for SM +10, *2000, gives(*2000 to owner::baseweight), shortname(SM +10), page(LT8, HT10, UT16), group(Equipment), tier(1)

*Equipment: Disguised, *2/*5, upto(2), levelnames(mass-produced, custom-built), page(LT14, HT9, UT15), shortname(Disguised)
*Equipment: Styling, *2/*3, upto(9), page(LT14, HT10, UT15), shortname(Styling)
*Equipment: Rugged, *2, gives(=*1.2 to owner::baseweight), page(LT14, HT10, UT15), shortname(Rugged)
*Equipment: Cheap (Clunky), *0.5, gives(=*@if(owner::emptyweight=0 THEN 1.5 ELSE 1) to owner::baseweight, =+(owner::emptyweight/2) to owner::baseweight), page(LT14, HT10, UT15), shortname(Clunky)
*Equipment: Cheap (Fragile), *0.5, page(LT14, HT10, UT15), shortname(Fragile)
*Equipment: Expensive, *1.5, gives(=*@if(owner::emptyweight=0 THEN 2/3 ELSE 1) to owner::baseweight, =-(owner::emptyweight/3) to owner::baseweight), page(LT14, HT10, UT15), shortname(Expensive)
*****
* Updated to use CF values as per the book. This means they're not directly compatible with those from other books.
* 2022 August 30, Thanks to DeathDaisy on the Discord for Styling; I did the others to fit the book as well.
*****
Equipment: Disguised, +1 CF/+4 CF, upto(2), levelnames(mass-produced, custom-built), page(LT14), shortname(Disguised)
Equipment: Styling, +1 CF/+4 CF/+9 CF,group(Equipment),level(1),page(LT14),shortname(Styling),upto(3)
Equipment: Rugged, +1 CF, gives(=*1.2 to owner::baseweight), page(LT14), shortname(Rugged)
Equipment: Cheap (Clunky), -0.5 CF, gives(=*@if(owner::emptyweight=0 THEN 1.5 ELSE 1) to owner::baseweight, =+(owner::emptyweight/2) to owner::baseweight), page(LT14), shortname(Clunky)
Equipment: Cheap (Fragile), -0.5 CF, page(LT14), shortname(Fragile)
Equipment: Expensive, +1 CF, gives(=*@if(owner::emptyweight=0 THEN 2/3 ELSE 1) to owner::baseweight, =-(owner::emptyweight/3) to owner::baseweight), page(LT14), shortname(Expensive)


<Bow Quality>
"Low-Tech Weapon Quality: Fine", +3 CF, gives(=+20% to owner::rangehalfdam, =+20% to owner::rangemax,  -1 to owner::break ), page(B274), group(Bow Quality), shortname(Fine Quality)
"Low-Tech Weapon Quality: Balanced", +4 CF, gives(=+1 to owner::acc), page(LT59), group(Bow Quality), shortname(Balanced)
"Low-Tech Weapon Quality: Poorly Balanced", -0.6 CF, gives(=-1 to owner::acc), page(LT59), group(Bow Quality), shortname(Poorly Balanced)
Harsh Realism: Cheap Bow Malf, +0, page(LT75), group(Bow Quality), round(Down), gives(=nobase to owner::malf$, =16 to owner::malf)
Harsh Realism: Cheap Crossbow Malf, +0, page(LT75), group(Bow Quality), round(Down), gives(=nobase to owner::malf$, =15 to owner::malf)
Harsh Realism: Halved ACC (Round down), +0, page(LT75), group(Bow Quality),_
	gives(=nobase to owner::acc$,_
		=$/textindexedvalue( {$modetag(acc)},_
			( "1", "0" ),_
			( "2", "1" ),_
			( "3", "1" ),_
			( "4", "2" ),_
			( "5", "2" ),_
			( "6", "3" ),_
			( "7", "3" ),_
			( "8", "4" ),_
			( "9", "4" ),_
			( "10", "5" ),_
			( "", "" ),_
			else "Error" ) to owner::acc$)
Harsh Realism: Halved ACC (Round up), +0, page(LT75), group(Bow Quality),_
	gives(=nobase to owner::acc$,_
		=$/textindexedvalue( {$modetag(acc)},_
			( "1", "1" ),_
			( "2", "1" ),_
			( "3", "2" ),_
			( "4", "2" ),_
			( "5", "3" ),_
			( "6", "3" ),_
			( "7", "4" ),_
			( "8", "4" ),_
			( "9", "5" ),_
			( "10", "5" ),_
			( "", "" ),_
			else "Error" ) to owner::acc$)

Arrowhead: Blunt-head, +0, page(LT73), group(Bow Quality), shortname(Blunt-head),_
	addmode(Blunt-head,_
			damage(%copyfirst),_
			damtype(cr),_
			armordivior(%copyfirst),_
			lc(%copyfirst),_
			acc(%copyfirst),_
			calcrange(%copyfirst),_
			rangehalfdam(%copyfirst),_
			rangemax(%copyfirst),_
			rof(%copyfirst),_
			shots(%copyfirst),_
			minst(%copyfirst),_
			bulk(%copyfirst),_
			skillused(%copyfirst),_
			rcl(%copyfirst),_
			notes(%copyfirst)_
			)
Arrowhead: Leaf-Head (Cutting), +0, page(LT73), group(Bow Quality), shortname(Leaf-head),_
	addmode(Leaf-head,_
			damage(%copyfirst),_
			damtype(cut),_
			armordivior(%copyfirst),_
			lc(%copyfirst),_
			acc(%copyfirst),_
			calcrange(%copyfirst),_
			rangehalfdam(%copyfirst),_
			rangemax(%copyfirst),_
			rof(%copyfirst),_
			shots(%copyfirst),_
			minst(%copyfirst),_
			bulk(%copyfirst),_
			skillused(%copyfirst),_
			rcl(%copyfirst),_
			notes(%copyfirst)_
			)
Arrowhead: Barbed Leaf-Head (Cutting), +0, page(LT73), group(Bow Quality), shortname(Barbed Leaf-head),_
	addmode(Barbed Leaf-head,_
			damage(%copyfirst),_
			damtype(cut),_
			armordivior(%copyfirst),_
			lc(%copyfirst),_
			acc(%copyfirst-1),_
			calcrange(%copyfirst),_
			rangehalfdam(%copyfirst - (5 * me::weaponst)),_
			rangemax(%copyfirst - (5 * me::weaponst)),_
			rof(%copyfirst),_
			shots(%copyfirst),_
			minst(%copyfirst),_
			bulk(%copyfirst),_
			skillused(%copyfirst),_
			rcl(%copyfirst),_
			notes(%copyfirst)_
			)
Arrowhead: Fire Arrow, +0, page(LT73), group(Bow Quality), shortname(Fire Arrow),_
	addmode(Fire Arrow,_
			damage(1d-1),_
			damtype(cr ex),_
			armordivior(%copyfirst),_
			lc(%copyfirst),_
			acc(%copyfirst-1),_
			calcrange(%copyfirst),_
			rangehalfdam(%copyfirst - (5 * me::weaponst)),_
			rangemax(%copyfirst - (5 * me::weaponst)),_
			rof(%copyfirst),_
			shots(%copyfirst),_
			minst(%copyfirst),_
			bulk(%copyfirst),_
			skillused(%copyfirst),_
			rcl(%copyfirst),_
			notes(%copyfirst)_
			)
Arrowhead: Fire Cage, +0, page(LT73), group(Bow Quality), shortname(Fire Cage),_
	gives(=-@textindexedvalue( $modetag(mode), ("Fire Cage Impact", 2), ("Fire Cage Burn", 2), ELSE 0) to owner::skillscore$),_
	addmode({Fire Cage Impact,_
			damage(%copyfirst),_
			damtype(pi-),_
			armordivior(%copyfirst),_
			lc(%copyfirst),_
			acc(%copyfirst),_
			calcrange(%copyfirst),_
			rangehalfdam(%copyfirst),_
			rangemax(%copyfirst),_
			rof(%copyfirst),_
			shots(%copyfirst),_
			minst(%copyfirst),_
			bulk(%copyfirst),_
			skillused(%copyfirst),_
			rcl(%copyfirst),_
			notes(%copyfirst)} | _
			{Fire Cage Burn,_
			damage(1d-3),_
			damtype(burn),_
			armordivior(%copyfirst),_
			lc(%copyfirst),_
			acc(%copyfirst),_
			calcrange(%copyfirst),_
			rangehalfdam(%copyfirst),_
			rangemax(%copyfirst),_
			rof(%copyfirst),_
			shots(%copyfirst),_
			minst(%copyfirst),_
			bulk(%copyfirst),_
			skillused(%copyfirst),_
			rcl(%copyfirst),_
			notes(%copyfirst)}_
			)
Arrowhead: Flight-head, +0, page(LT73), group(Bow Quality), shortname(Flight-head),_
	addmode(Flight-head,_
			damage(%copyfirst),_
			damtype(%copyfirst),_
			armordivior(%copyfirst),_
			lc(%copyfirst),_
			acc(%copyfirst),_
			calcrange(%copyfirst),_
			rangehalfdam(%copyfirst * 2),_
			rangemax(%copyfirst * 2),_
			rof(%copyfirst),_
			shots(%copyfirst),_
			minst(%copyfirst),_
			bulk(%copyfirst),_
			skillused(%copyfirst),_
			rcl(%copyfirst),_
			notes(%copyfirst)_
			)
Arrowhead: Humming Bulb, +0, page(LT73), group(Bow Quality), shortname(Humming Bulb),_
	addmode(Humming Bulb,_
			damage(%copyfirst),_
			damtype(%copyfirst),_
			armordivior(%copyfirst),_
			lc(%copyfirst),_
			acc(%copyfirst-1),_
			calcrange(%copyfirst),_
			rangehalfdam(%copyfirst - (5 * me::weaponst)),_
			rangemax(%copyfirst - (5 * me::weaponst)),_
			rof(%copyfirst),_
			shots(%copyfirst),_
			minst(%copyfirst),_
			bulk(%copyfirst),_
			skillused(%copyfirst),_
			rcl(%copyfirst),_
			notes(%copyfirst)_
			)

********************************************************************************************************\[STOP]
[LISTS]
*******************************************************************************************************\[START]
<Body Armor Location One>
"_All"=305,_
"_Arms - Elbows Only"=5,_
"_Arms - Forearms Only"=25,_
"_Arms - Shoulders Only"=10,_
"_Arms - Upper Arms Only"=10,_
"_Arms"=50,_
"_Feet"=10,_
"_Full Suit"=275,_
"_Hands"=10,_
"_Head - Face Only"=10,_
"_Head - Skull Only"=20,_
"_Head"=30,_
"_Legs - Knees Only"=5,_
"_Legs - Shins Only"=50,_
"_Legs - Thighs Only"=45,_
"_Legs"=100,_
"_Neck"=5,_
"_Neck: Aventail"=5,_
"_Neck: Bevor"=7,_
"_Neck: Gorget"=5,_
"_Neck: Lobsterback"=3,_
"_Neck: Mail Collar"=5,_
"_Neck: Mail Standard"=20,_
"_Neck: Turret"=10,_
"_Neck: Ventail"=3,_
"_Torso - Abdomen Only"=25,_
"_Torso - Chest"=75,_
"_Torso - Groin Only"=5,_
"_Torso"=100,_
"~(R) Right Arm"=25,_
"~(R) Right Arm - Shoulder Only"=5,_
"~(R) Right Arm - Upper Arm Only"=5,_
"~(R) Right Arm - Elbow Only"=2.5,_
"~(R) Right Arm - Forearm Only"=12.5,_
"~(R) Right Hand"=5,_
"~(R) Right Leg"=50,_
"~(R) Right Leg - Thigh Only"=22.5,_
"~(R) Right Leg - Knee Only"=2.5,_
"~(R) Right Leg - Shin Only"=25,_
"~(R) Right Foot"=5,_
"~(L) Left Arm"=25,_
"~(L) Left Arm - Shoulder Only"=5,_
"~(L) Left Arm - Upper Arm Only"=5,_
"~(L) Left Arm - Elbow Only"=2.5,_
"~(L) Left Arm - Forearm Only"=12.5,_
"~(L) Left Hand"=5,_
"~(L) Left Leg"=50,_
"~(L) Left Leg - Thigh Only"=22.5,_
"~(L) Left Leg - Knee Only"=2.5,_
"~(L) Left Leg - Shin Only"=25,_
"~(L) Left Foot"=5,_
"~(F) Front Neck"=2.5,_
"~(F) Front Torso"=50,_
"~(F) Front Torso - Chest"=37.5,_
"~(F) Front Torso - Abdomen Only"=12.5,_
"~(F) Front Torso - Groin Only"=2.5,_
"~(F) Front Arms"=25,_
"~(F) Front Arms - Shoulders Only"=5,_
"~(F) Front Arms - Upper Arms Only"=5,_
"~(F) Front Arms - Elbows Only"=2.5,_
"~(F) Front Arms - Forearms Only"=12.5,_
"~(F) Front Hands"=5,_
"~(F) Front Legs"=50,_
"~(F) Front Legs - Thighs Only"=22.5,_
"~(F) Front Legs - Knees Only"=2.5,_
"~(F) Front Legs - Shins Only"=25,_
"~(F) Top Feet"=5,_
"~(FR) Front Right Arm"=12.5,_
"~(FR) Front Right Arm - Shoulder Only"=2.5,_
"~(FR) Front Right Arm - Upper Arm Only"=2.5,_
"~(FR) Front Right Arm - Elbow Only"=1.25,_
"~(FR) Front Right Arm - Forearm Only"=6.25,_
"~(FR) Front Right Hand"=2.5,_
"~(FR) Front Right Leg"=25,_
"~(FR) Front Right Leg - Thigh Only"=11.25,_
"~(FR) Front Right Leg - Knee Only"=1.25,_
"~(FR) Front Right Leg - Shin Only"=12.5,_
"~(FR) Top Right Foot"=2.5,_
"~(FL) Front Left Arm"=12.5,_
"~(FL) Front Left Arm - Shoulder Only"=2.5,_
"~(FL) Front Left Arm - Upper Arm Only"=2.5,_
"~(FL) Front Left Arm - Elbow Only"=1.25,_
"~(FL) Front Left Arm - Forearm Only"=6.25,_
"~(FL) Front Left Hand"=2.5,_
"~(FL) Front Left Leg"=25,_
"~(FL) Front Left Leg - Thigh Only"=11.25,_
"~(FL) Front Left Leg - Knee Only"=1.25,_
"~(FL) Front Left Leg - Shin Only"=12.5,_
"~(FL) Top Left Foot"=2.5,_
"~(B) Back Neck"=2.5,_
"~(B) Back Torso"=50,_
"~(B) Back Torso - Chest"=37.5,_
"~(B) Back Torso - Abdomen Only"=12.5,_
"~(B) Back Torso - Groin Only"=2.5,_
"~(B) Back Arms"=25,_
"~(B) Back Arms - Shoulders Only"=5,_
"~(B) Back Arms - Upper Arms Only"=5,_
"~(B) Back Arms - Elbows Only"=2.5,_
"~(B) Back Arms - Forearms Only"=12.5,_
"~(B) Back Hands"=5,_
"~(B) Back Legs"=50,_
"~(B) Back Legs - Thighs Only"=22.5,_
"~(B) Back Legs - Knees Only"=2.5,_
"~(B) Back Legs - Shins Only"=25,_
"~(B) Bottom Feet"=5,_
"~(BR) Back Right Arm"=12.5,_
"~(BR) Back Right Arm - Shoulder Only"=2.5,_
"~(BR) Back Right Arm - Upper Arm Only"=2.5,_
"~(BR) Back Right Arm - Elbow Only"=1.25,_
"~(BR) Back Right Arm - Forearm Only"=6.25,_
"~(BR) Back Right Hand"=2.5,_
"~(BR) Back Right Leg"=25,_
"~(BR) Back Right Leg - Thigh Only"=11.25,_
"~(BR) Back Right Leg - Knee Only"=1.25,_
"~(BR) Back Right Leg - Shin Only"=12.5,_
"~(BR) Bottom Right Foot"=2.5,_
"~(BL) Back Left Arm"=12.5,_
"~(BL) Back Left Arm - Shoulder Only"=2.5,_
"~(BL) Back Left Arm - Upper Arm Only"=2.5,_
"~(BL) Back Left Arm - Elbow Only"=1.25,_
"~(BL) Back Left Arm - Forearm Only"=6.25,_
"~(BL) Back Left Hand"=2.5,_
"~(BL) Back Left Leg"=25,_
"~(BL) Back Left Leg - Thigh Only"=11.25,_
"~(BL) Back Left Leg - Knee Only"=1.25,_
"~(BL) Back Left Leg - Shin Only"=12.5,_
"~(BL) Bottom Left Foot"=2.5,_
"~Horse Barding: Caparison - Neck, Torso, Groin, Legs (4/6)"=500,_
"~Horse Barding: Chanfron - Skull, Face"=50,_
"~Horse Barding: Crinet - Neck"=50,_
"~Horse Barding: Crupper - Torso (3/6), Back Legs (3/6)"=150,_
"~Horse Barding: Flanchards - Torso (3/6)"=50,_
"~Horse Barding: Peytral - Front Torso"=100,_
"~Camel Barding: Chanfron - Skull, Face"=25,_
"~Camel Barding: Caparison - Neck, Torso, Groin, Legs (4/6)"=500,_
"~Camel Barding: Peytral - Front Torso"=100,_
"~Elephant Barding: Chanfron - Skull, Face"=200,_
"~Elephant Barding: Caparison - Neck, Torso, Groin, Legs (4/6)"=1200,_
"~Dog Barding: Collar"=5,_
"~Dog Barding: Caparison - Neck, Torso, Groin, Legs (4/6)"=50,_
"~Dog Barding: Chanfron - Skull, Face"=5,_
"~Dog Barding: Crupper - Torso (3/6), Back Legs (3/6)"=15,_
"~Dog Barding: Flanchards - Torso (3/6)"=5,_
"~Dog Barding: Peytral - Front Torso"=10

<Body Armor Prefix>
"%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%","%Body Armor_alt2list%",_
"Horse: %Body Armor_alt2list%","Horse: %Body Armor_alt2list%","Horse: %Body Armor_alt2list%","Horse: %Body Armor_alt2list%","Horse: %Body Armor_alt2list%","Horse: %Body Armor_alt2list%",_
"Camel: %Body Armor_alt2list%","Camel: %Body Armor_alt2list%","Camel: %Body Armor_alt2list%",_
"Elephant: %Body Armor_alt2list%","Elephant: %Body Armor_alt2list%",_
"Dog: %Body Armor_alt2list%","Dog: %Body Armor_alt2list%","Dog: %Body Armor_alt2list%","Dog: %Body Armor_alt2list%","Dog: %Body Armor_alt2list%","Dog: %Body Armor_alt2list%"

<Body Armor Location Two>
"All",_
"Elbows",_
"Forearms",_
"Shoulders",_
"Upper Arms",_
"Arms",_
"Feet",_
"Full Suit",_
"Hands",_
"Face",_
"Skull",_
"Head",_
"Knees",_
"Shins",_
"Thighs",_
"Legs",_
"Neck",_
"Neck",_
"Neck, Face",_
"Neck",_
"Back Neck",_
"Neck",_
"Neck, Shoulders",_
"Neck, Face",_
"Front Neck, Face",_
"Abdomen",_
"Chest",_
"Groin",_
"Torso",_
"Right Arm",_
"Right Shoulder",_
"Right Upper Arm",_
"Right Elbow",_
"Right Forearm",_
"Right Hand",_
"Right Leg",_
"Right Thigh",_
"Right Knee",_
"Right Shin",_
"Right Foot",_
"Left Arm",_
"Left Shoulder",_
"Left Upper Arm",_
"Left Elbow",_
"Left Forearm",_
"Left Hand",_
"Left Leg",_
"Left Thigh",_
"Left Knee",_
"Left Shin",_
"Left Foot",_
"Front Neck",_
"Front Torso",_
"Front Chest",_
"Front Abdomen",_
"Front Groin",_
"Front Arms",_
"Front Shoulders",_
"Front Upper Arms",_
"Front Elbows",_
"Front Forearms",_
"Front Hands",_
"Front Legs",_
"Front Thighs",_
"Front Knees",_
"Front Shins",_
"Top Feet",_
"Front Right Arm",_
"Front Right Shoulder",_
"Front Right Upper Arm",_
"Front Right Elbow",_
"Front Right Forearm",_
"Front Right Hand",_
"Front Right Leg",_
"Front Right Thigh",_
"Front Right Knee",_
"Front Right Shin",_
"Top Right Foot",_
"Front Left Arm",_
"Front Left Shoulder",_
"Front Left Upper Arm",_
"Front Left Elbow",_
"Front Left Forearm",_
"Front Left Hand",_
"Front Left Leg",_
"Front Left Thigh",_
"Front Left Knee",_
"Front Left Shin",_
"Top Left Foot",_
"Back Neck",_
"Back Torso",_
"Back Chest",_
"Back Abdomen",_
"Back Groin",_
"Back Arms",_
"Back Shoulders",_
"Back Upper Arms",_
"Back Elbows",_
"Back Forearms",_
"Back Hands",_
"Back Legs",_
"Back Thighs",_
"Back Knees",_
"Back Shins",_
"Bottom Feet",_
"Back Right Arm",_
"Back Right Shoulder",_
"Back Right Upper Arm",_
"Back Right Elbow",_
"Back Right Forearm",_
"Back Right Hand",_
"Back Right Leg",_
"Back Right Thigh",_
"Back Right Knee",_
"Back Right Shin",_
"Bottom Right Foot",_
"Back Left Arm",_
"Back Left Shoulder",_
"Back Left Upper Arm",_
"Back Left Elbow",_
"Back Left Forearm",_
"Back Left Hand",_
"Back Left Leg",_
"Back Left Thigh",_
"Back Left Knee",_
"Back Left Shin",_
"Bottom Left Foot",_
"Neck, Torso, Groin, Legs",_
"Skull, Face",_
"Neck",_
"Torso, Back Legs",_
"Torso",_
"Front Torso",_
"Skull, Face",_
"Neck, Torso, Groin, Legs",_
"Front Torso",_
"Skull, Face",_
"Neck, Torso, Groin, Legs",_
"Neck",_
"Neck, Torso, Groin, Legs",_
"Skull, Face",_
"Torso, Back Legs",_
"Torso",_
"Front Torso"

<Body Armor Location Three>
"All",_
"Elbows",_
"Forearms",_
"Shoulders",_
"Upper Arms",_
"Arms",_
"Feet",_
"Full Suit",_
"Hands",_
"Face",_
"Skull",_
"Head",_
"Knees",_
"Shins",_
"Thighs",_
"Legs",_
"Neck",_
"Aventail (Neck)",_
"Bevor (Neck)",_
"Gorget (Neck)",_
"Lobsterback (Neck)",_
"Mail Collar (Neck)",_
"Mail Standard (Neck)",_
"Turret (Neck)",_
"Ventail (Neck)",_
"Abdomen",_
"Chest",_
"Groin",_
"Torso",_
"Right Arm",_
"Right Shoulder",_
"Right Upper Arm",_
"Right Elbow",_
"Right Forearm",_
"Right Hand",_
"Right Leg",_
"Right Thigh",_
"Right Knee",_
"Right Shin",_
"Right Foot",_
"Left Arm",_
"Left Shoulder",_
"Left Upper Arm",_
"Left Elbow",_
"Left Forearm",_
"Left Hand",_
"Left Leg",_
"Left Thigh",_
"Left Knee",_
"Left Shin",_
"Left Foot",_
"Front Neck",_
"Front Torso",_
"Front Chest",_
"Front Abdomen",_
"Front Groin",_
"Front Arms",_
"Front Shoulders",_
"Front Upper Arms",_
"Front Elbows",_
"Front Forearms",_
"Front Hands",_
"Front Legs",_
"Front Thighs",_
"Front Knees",_
"Front Shins",_
"Top Feet",_
"Front Right Arm",_
"Front Right Shoulder",_
"Front Right Upper Arm",_
"Front Right Elbow",_
"Front Right Forearm",_
"Front Right Hand",_
"Front Right Leg",_
"Front Right Thigh",_
"Front Right Knee",_
"Front Right Shin",_
"Top Right Foot",_
"Front Left Arm",_
"Front Left Shoulder",_
"Front Left Upper Arm",_
"Front Left Elbow",_
"Front Left Forearm",_
"Front Left Hand",_
"Front Left Leg",_
"Front Left Thigh",_
"Front Left Knee",_
"Front Left Shin",_
"Top Left Foot",_
"Back Neck",_
"Back Torso",_
"Back Chest",_
"Back Abdomen",_
"Back Groin",_
"Back Arms",_
"Back Shoulders",_
"Back Upper Arms",_
"Back Elbows",_
"Back Forearms",_
"Back Hands",_
"Back Legs",_
"Back Thighs",_
"Back Knees",_
"Back Shins",_
"Bottom Feet",_
"Back Right Arm",_
"Back Right Shoulder",_
"Back Right Upper Arm",_
"Back Right Elbow",_
"Back Right Forearm",_
"Back Right Hand",_
"Back Right Leg",_
"Back Right Thigh",_
"Back Right Knee",_
"Back Right Shin",_
"Bottom Right Foot",_
"Back Left Arm",_
"Back Left Shoulder",_
"Back Left Upper Arm",_
"Back Left Elbow",_
"Back Left Forearm",_
"Back Left Hand",_
"Back Left Leg",_
"Back Left Thigh",_
"Back Left Knee",_
"Back Left Shin",_
"Bottom Left Foot",_
"Caparison (Neck, Torso, Groin, Legs (4/6))",_
"Chanfron (Skull, Face)",_
"Crinet (Neck)",_
"Crupper (Torso (3/6), Back Legs (3/6))",_
"Flanchards (Torso (3/6))",_
"Peytral (Front Torso)",_
"Chanfron (Skull, Face)",_
"Caparison (Neck, Torso, Groin, Legs (4/6))",_
"Peytral (Front Torso)",_
"Chanfron (Skull, Face)",_
"Caparison (Neck, Torso, Groin, Legs (4/6))",_
"Collar (Neck)",_
"Caparison (Neck, Torso, Groin, Legs (4/6))",_
"Chanfron (Skull, Face)",_
"Crupper (Torso (3/6), Back Legs (3/6))",_
"Flanchards (Torso (3/6))",_
"Peytral (Front Torso)"

<Body Armor Location Coverage>
"1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1",_
"1,1/6",_
"1","1","1",_
"1,1",_
"1,2/6",_
"1,2/6",_
"1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1",_
"1,1,1,4/6",_
"1,1",_
"1",_
"3/6,3/6",_
"3/6",_
"1",_
"1,1",_
"1,1,1,4/6",_
"1",_
"1,1",_
"1,1,1,4/6",_
"1",_
"1,1,1,4/6",_
"1,1",_
"3/6,3/6",_
"3/6",_
"1"

********************************************************************************************************\[STOP]
[EQUIPMENT]
*******************************************************************************************************\[START]
*****
* NOTE: This section fixes some issues found in the Build Your Own system above by jamming in some updated tags. 
* 2022 August 30, Thanks to DeathDaisy on the Discord for this.
*****
#ReplaceTags in "EQ:Brigandine, Light, Bronze (%Helmet_Alt1List%)" with "displayname(Brigandine, Light, Bronze (Build-your-own Helmet)), needs(@hasmod("Armor Material: Bronze, TL 1")), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(3600/base), techlvl(1), description(TL:4 DR:3 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%)"
#ReplaceTags in "EQ:Brigandine, Medium, Bronze (%Helmet_Alt1List%)" with "displayname(Brigandine, Medium, Bronze (Build-your-own Helmet)), needs(@hasmod("Armor Material: Bronze, TL 1")), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(7200/base), techlvl(1), description(TL:4 DR:5 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%)"
#ReplaceTags in "EQ:Jack of Plates, Bronze (%Helmet_Alt1List%)" with "displayname(Jack of Plates, Bronze (Build-your-own Helmet)), needs(@hasmod("Armor Material: Bronze, TL 1")), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(1200/base), techlvl(1), description(TL:2 DR:3/2 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[4] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Mail and Plates, Bronze (%Helmet_Alt1List%)" with "displayname(Mail and Plates, Bronze (Build-your-own Helmet)), needs(@hasmod("Armor Material: Bronze, TL 1")), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(4000/base), techlvl(1), description(TL:3 DR:5/4 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[4] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Mail, Fine, Bronze (%Helmet_Alt1List%)" with "displayname(Mail, Fine, Bronze (Build-your-own Helmet)), needs(@hasmod("Armor Material: Bronze, TL 1")), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(3600/base), techlvl(1), description(TL:2 DR:4/2* Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[5] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Mail, Heavy, Bronze (%Helmet_Alt1List%)" with "displayname(Mail, Heavy, Bronze (Build-your-own Helmet)), needs(@hasmod("Armor Material: Bronze, TL 1")), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(4800/base), techlvl(1), description(TL:2 DR:5/3* Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[5] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Mail, Jousting, Bronze (%Helmet_Alt1List%)" with "displayname(Mail, Jousting, Bronze (Build-your-own Helmet)), needs(@hasmod("Armor Material: Bronze, TL 1")), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(6000/base), techlvl(1), description(TL:3 DR:6 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[6] -1 DX, except for Lance skill.)"
#ReplaceTags in "EQ:Mail, Light, Bronze (%Helmet_Alt1List%)" with "displayname(Mail, Light, Bronze (Build-your-own Helmet)), needs(@hasmod("Armor Material: Bronze, TL 1")), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(2000/base), techlvl(1), description(TL:2 DR:3/1* Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[5] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Plate, Heavy, Bronze (%Helmet_Alt1List%)" with "displayname(Plate, Heavy, Bronze (Build-your-own Helmet)), needs(@hasmod("Armor Material: Bronze, TL 1")), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(16000/base), techlvl(1), description(TL:4 DR:9 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%)"
#ReplaceTags in "EQ:Plate, Light, Bronze (%Helmet_Alt1List%)" with "displayname(Plate, Light, Bronze (Build-your-own Helmet)), needs(@hasmod("Armor Material: Bronze, TL 1")), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(4000/base), techlvl(1), description(TL:4 DR:3 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%)"
#ReplaceTags in "EQ:Plate, Medium, Bronze (%Helmet_Alt1List%)" with "displayname(Plate, Medium, Bronze (Build-your-own Helmet)), needs(@hasmod("Armor Material: Bronze, TL 1")), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(10000/base), techlvl(1), description(TL:4 DR:6 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%)"
#ReplaceTags in "EQ:Scale, Heavy, Bronze (%Helmet_Alt1List%)" with "displayname(Scale, Heavy, Bronze (Build-your-own Helmet)), needs(@hasmod("Armor Material: Bronze, TL 1")), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(4400/base), techlvl(1), description(TL:1 DR:5 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%)"
#ReplaceTags in "EQ:Scale, Light, Bronze (%Helmet_Alt1List%)" with "displayname(Scale, Light, Bronze (Build-your-own Helmet)), needs(@hasmod("Armor Material: Bronze, TL 1")), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(1280/base), techlvl(1), description(TL:1 DR:3/2 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[4] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Scale, Medium, Bronze (%Helmet_Alt1List%)" with "displayname(Scale, Medium, Bronze (Build-your-own Helmet)), needs(@hasmod("Armor Material: Bronze, TL 1")), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(2200/base), techlvl(1), description(TL:1 DR:4/3 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[4] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Segmented Plate, Heavy, Bronze (%Helmet_Alt1List%)" with "displayname(Segmented Plate, Heavy, Bronze (Build-your-own Helmet)), needs(@hasmod("Armor Material: Bronze, TL 1")), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(4800/base), techlvl(1), description(TL:2 DR:5 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%)"
#ReplaceTags in "EQ:Segmented Plate, Light, Bronze (%Helmet_Alt1List%)" with "displayname(Segmented Plate, Light, Bronze (Build-your-own Helmet)), needs(@hasmod("Armor Material: Bronze, TL 1")), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(2400/base), techlvl(1), description(TL:2 DR:3 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%)"
#ReplaceTags in "EQ:Segmented Plate, Medium, Bronze (%Helmet_Alt1List%)" with "displayname(Segmented Plate, Medium, Bronze (Build-your-own Helmet)), needs(@hasmod("Armor Material: Bronze, TL 1")), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(3600/base), techlvl(1), description(TL:2 DR:4 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%)"

#ReplaceTags in "EQ:Brigandine, Light, Bronze (%Body Armor_1alias%)" with "displayname(Brigandine, Light, Bronze (Build-your-own Body Armor)), needs(@hasmod("Armor Material: Bronze, TL 1")), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(3600/base), techlvl(1), description(TL:4 DR:3 Locations: %Body Armor_alt2List%)"
#ReplaceTags in "EQ:Brigandine, Medium, Bronze (%Body Armor_1alias%)" with "displayname(Brigandine, Medium, Bronze (Build-your-own Body Armor)), needs(@hasmod("Armor Material: Bronze, TL 1")), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(7200/base), techlvl(1), description(TL:4 DR:5 Locations: %Body Armor_alt2List%)"
#ReplaceTags in "EQ:Jack of Plates, Bronze (%Body Armor_1alias%)" with "displayname(Jack of Plates, Bronze (Build-your-own Body Armor)), needs(@hasmod("Armor Material: Bronze, TL 1")), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(1200/base), techlvl(1), description(TL:2 DR:3/2 Locations: %Body Armor_alt2List% Notes:[4] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Mail and Plates, Bronze (%Body Armor_1alias%)" with "displayname(Mail and Plates, Bronze (Build-your-own Body Armor)), needs(@hasmod("Armor Material: Bronze, TL 1")), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(4000/base), techlvl(1), description(TL:3 DR:5/4 Locations: %Body Armor_alt2List% Notes:[4] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Mail, Fine, Bronze (%Body Armor_1alias%)" with "displayname(Mail, Fine, Bronze (Build-your-own Body Armor)), needs(@hasmod("Armor Material: Bronze, TL 1")), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(3600/base), techlvl(1), description(TL:2 DR:4/2* Locations: %Body Armor_alt2List% Notes:[5] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Mail, Heavy, Bronze (%Body Armor_1alias%)" with "displayname(Mail, Heavy, Bronze (Build-your-own Body Armor)), needs(@hasmod("Armor Material: Bronze, TL 1")), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(4800/base), techlvl(1), description(TL:2 DR:5/3* Locations: %Body Armor_alt2List% Notes:[5] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Mail, Jousting, Bronze (%Body Armor_1alias%)" with "displayname(Mail, Jousting, Bronze (Build-your-own Body Armor)), needs(@hasmod("Armor Material: Bronze, TL 1")), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(6000/base), techlvl(1), description(TL:3 DR:6 Locations: %Body Armor_alt2List% Notes:[6] -1 DX, except for Lance skill.)"
#ReplaceTags in "EQ:Mail, Light, Bronze (%Body Armor_1alias%)" with "displayname(Mail, Light, Bronze (Build-your-own Body Armor)), needs(@hasmod("Armor Material: Bronze, TL 1")), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(2000/base), techlvl(1), description(TL:2 DR:3/1* Locations: %Body Armor_alt2List% Notes:[5] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Plate, Heavy, Bronze (%Body Armor_1alias%)" with "displayname(Plate, Heavy, Bronze (Build-your-own Body Armor)), needs(@hasmod("Armor Material: Bronze, TL 1")), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(16000/base), techlvl(1), description(TL:4 DR:9 Locations: %Body Armor_alt2List%)"
#ReplaceTags in "EQ:Plate, Light, Bronze (%Body Armor_1alias%)" with "displayname(Plate, Light, Bronze (Build-your-own Body Armor)), needs(@hasmod("Armor Material: Bronze, TL 1")), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(4000/base), techlvl(1), description(TL:4 DR:3 Locations: %Body Armor_alt2List%)"
#ReplaceTags in "EQ:Plate, Medium, Bronze (%Body Armor_1alias%)" with "displayname(Plate, Medium, Bronze (Build-your-own Body Armor)), needs(@hasmod("Armor Material: Bronze, TL 1")), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(10000/base), techlvl(1), description(TL:4 DR:6 Locations: %Body Armor_alt2List%)"
#ReplaceTags in "EQ:Scale, Heavy, Bronze (%Body Armor_1alias%)" with "displayname(Scale, Heavy, Bronze (Build-your-own Body Armor)), needs(@hasmod("Armor Material: Bronze, TL 1")), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(4400/base), techlvl(1), description(TL:1 DR:5 Locations: %Body Armor_alt2List%)"
#ReplaceTags in "EQ:Scale, Light, Bronze (%Body Armor_1alias%)" with "displayname(Scale, Light, Bronze (Build-your-own Body Armor)), needs(@hasmod("Armor Material: Bronze, TL 1")), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(1280/base), techlvl(1), description(TL:1 DR:3/2 Locations: %Body Armor_alt2List% Notes:[4] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Scale, Medium, Bronze (%Body Armor_1alias%)" with "displayname(Scale, Medium, Bronze (Build-your-own Body Armor)), needs(@hasmod("Armor Material: Bronze, TL 1")), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(2200/base), techlvl(1), description(TL:1 DR:4/3 Locations: %Body Armor_alt2List% Notes:[4] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Segmented Plate, Heavy, Bronze (%Body Armor_1alias%)" with "displayname(Segmented Plate, Heavy, Bronze (Build-your-own Body Armor)), needs(@hasmod("Armor Material: Bronze, TL 1")), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(4800/base), techlvl(1), description(TL:2 DR:5 Locations: %Body Armor_alt2List%)"
#ReplaceTags in "EQ:Segmented Plate, Light, Bronze (%Body Armor_1alias%)" with "displayname(Segmented Plate, Light, Bronze (Build-your-own Body Armor)), needs(@hasmod("Armor Material: Bronze, TL 1")), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(2400/base), techlvl(1), description(TL:2 DR:3 Locations: %Body Armor_alt2List%)"
#ReplaceTags in "EQ:Segmented Plate, Medium, Bronze (%Body Armor_1alias%)" with "displayname(Segmented Plate, Medium, Bronze (Build-your-own Body Armor)), needs(@hasmod("Armor Material: Bronze, TL 1")), initmods(Armor Material: Bronze (TL 1), +3 CF, shortname(Bronze), page(B109)), displaycost(3600/base), techlvl(1), description(TL:2 DR:4 Locations: %Body Armor_alt2List%)"

#ReplaceTags in "EQ:Brigandine, Light, Copper (%Helmet_Alt1List%)" with "displayname(Brigandine, Light, Copper (Build-your-own Helmet)), needs(@hasmod("Armor Material: Copper, TL 1")), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:2 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%)"
#ReplaceTags in "EQ:Brigandine, Medium, Copper (%Helmet_Alt1List%)" with "displayname(Brigandine, Medium, Copper (Build-your-own Helmet)), needs(@hasmod("Armor Material: Copper, TL 1")), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:4 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%)"
#ReplaceTags in "EQ:Jack of Plates, Copper (%Helmet_Alt1List%)" with "displayname(Jack of Plates, Copper (Build-your-own Helmet)), needs(@hasmod("Armor Material: Copper, TL 1")), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:2/1 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[4] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Mail and Plates, Copper (%Helmet_Alt1List%)" with "displayname(Mail and Plates, Copper (Build-your-own Helmet)), needs(@hasmod("Armor Material: Copper, TL 1")), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:4/3 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[4] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Mail, Fine, Copper (%Helmet_Alt1List%)" with "displayname(Mail, Fine, Copper (Build-your-own Helmet)), needs(@hasmod("Armor Material: Copper, TL 1")), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:3/1* Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[5] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Mail, Heavy, Copper (%Helmet_Alt1List%)" with "displayname(Mail, Heavy, Copper (Build-your-own Helmet)), needs(@hasmod("Armor Material: Copper, TL 1")), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:4/2* Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[5] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Mail, Jousting, Copper (%Helmet_Alt1List%)" with "displayname(Mail, Jousting, Copper (Build-your-own Helmet)), needs(@hasmod("Armor Material: Copper, TL 1")), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:5 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[6] -1 DX, except for Lance skill.)"
#ReplaceTags in "EQ:Mail, Light, Copper (%Helmet_Alt1List%)" with "displayname(Mail, Light, Copper (Build-your-own Helmet)), needs(@hasmod("Armor Material: Copper, TL 1")), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:2/0* Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[5] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Plate, Heavy, Copper (%Helmet_Alt1List%)" with "displayname(Plate, Heavy, Copper (Build-your-own Helmet)), needs(@hasmod("Armor Material: Copper, TL 1")), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:8 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%)"
#ReplaceTags in "EQ:Plate, Light, Copper (%Helmet_Alt1List%)" with "displayname(Plate, Light, Copper (Build-your-own Helmet)), needs(@hasmod("Armor Material: Copper, TL 1")), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:2 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%)"
#ReplaceTags in "EQ:Plate, Medium, Copper (%Helmet_Alt1List%)" with "displayname(Plate, Medium, Copper (Build-your-own Helmet)), needs(@hasmod("Armor Material: Copper, TL 1")), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:5 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%)"
#ReplaceTags in "EQ:Scale, Heavy, Copper (%Helmet_Alt1List%)" with "displayname(Scale, Heavy, Copper (Build-your-own Helmet)), needs(@hasmod("Armor Material: Copper, TL 1")), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:4 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%)"
#ReplaceTags in "EQ:Scale, Light, Copper (%Helmet_Alt1List%)" with "displayname(Scale, Light, Copper (Build-your-own Helmet)), needs(@hasmod("Armor Material: Copper, TL 1")), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:2/1 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[4] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Scale, Medium, Copper (%Helmet_Alt1List%)" with "displayname(Scale, Medium, Copper (Build-your-own Helmet)), needs(@hasmod("Armor Material: Copper, TL 1")), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:3/2 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List% Notes:[4] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Segmented Plate, Heavy, Copper (%Helmet_Alt1List%)" with "displayname(Segmented Plate, Heavy, Copper (Build-your-own Helmet)), needs(@hasmod("Armor Material: Copper, TL 1")), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:4 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%)"
#ReplaceTags in "EQ:Segmented Plate, Light, Copper (%Helmet_Alt1List%)" with "displayname(Segmented Plate, Light, Copper (Build-your-own Helmet)), needs(@hasmod("Armor Material: Copper, TL 1")), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:2 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%)"
#ReplaceTags in "EQ:Segmented Plate, Medium, Copper (%Helmet_Alt1List%)" with "displayname(Segmented Plate, Medium, Copper (Build-your-own Helmet)), needs(@hasmod("Armor Material: Copper, TL 1")), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:3 Locations: %Helmet_AliasList%%options1alias%%optionsalt1List%)"

#ReplaceTags in "EQ:Brigandine, Light, Copper (%Body Armor_1alias%)" with "displayname(Brigandine, Light, Copper (Build-your-own Body Armor)), needs(@hasmod("Armor Material: Copper, TL 1")), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:2 Locations: %Body Armor_alt2List%)"
#ReplaceTags in "EQ:Brigandine, Medium, Copper (%Body Armor_1alias%)" with "displayname(Brigandine, Medium, Copper (Build-your-own Body Armor)), needs(@hasmod("Armor Material: Copper, TL 1")), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:4 Locations: %Body Armor_alt2List%)"
#ReplaceTags in "EQ:Jack of Plates, Copper (%Body Armor_1alias%)" with "displayname(Jack of Plates, Copper (Build-your-own Body Armor)), needs(@hasmod("Armor Material: Copper, TL 1")), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:2/1 Locations: %Body Armor_alt2List% Notes:[4] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Mail and Plates, Copper (%Body Armor_1alias%)" with "displayname(Mail and Plates, Copper (Build-your-own Body Armor)), needs(@hasmod("Armor Material: Copper, TL 1")), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:4/3 Locations: %Body Armor_alt2List% Notes:[4] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Mail, Fine, Copper (%Body Armor_1alias%)" with "displayname(Mail, Fine, Copper (Build-your-own Body Armor)), needs(@hasmod("Armor Material: Copper, TL 1")), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:3/1* Locations: %Body Armor_alt2List% Notes:[5] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Mail, Heavy, Copper (%Body Armor_1alias%)" with "displayname(Mail, Heavy, Copper (Build-your-own Body Armor)), needs(@hasmod("Armor Material: Copper, TL 1")), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:4/2* Locations: %Body Armor_alt2List% Notes:[5] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Mail, Jousting, Copper (%Body Armor_1alias%)" with "displayname(Mail, Jousting, Copper (Build-your-own Body Armor)), needs(@hasmod("Armor Material: Copper, TL 1")), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:5 Locations: %Body Armor_alt2List% Notes:[6] -1 DX, except for Lance skill.)"
#ReplaceTags in "EQ:Mail, Light, Copper (%Body Armor_1alias%)" with "displayname(Mail, Light, Copper (Build-your-own Body Armor)), needs(@hasmod("Armor Material: Copper, TL 1")), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:2/0* Locations: %Body Armor_alt2List% Notes:[5] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Plate, Heavy, Copper (%Body Armor_1alias%)" with "displayname(Plate, Heavy, Copper (Build-your-own Body Armor)), needs(@hasmod("Armor Material: Copper, TL 1")), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:8 Locations: %Body Armor_alt2List%)"
#ReplaceTags in "EQ:Plate, Light, Copper (%Body Armor_1alias%)" with "displayname(Plate, Light, Copper (Build-your-own Body Armor)), needs(@hasmod("Armor Material: Copper, TL 1")), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:2 Locations: %Body Armor_alt2List%)"
#ReplaceTags in "EQ:Plate, Medium, Copper (%Body Armor_1alias%)" with "displayname(Plate, Medium, Copper (Build-your-own Body Armor)), needs(@hasmod("Armor Material: Copper, TL 1")), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:5 Locations: %Body Armor_alt2List%)"
#ReplaceTags in "EQ:Scale, Heavy, Copper (%Body Armor_1alias%)" with "displayname(Scale, Heavy, Copper (Build-your-own Body Armor)), needs(@hasmod("Armor Material: Copper, TL 1")), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:4 Locations: %Body Armor_alt2List%)"
#ReplaceTags in "EQ:Scale, Light, Copper (%Body Armor_1alias%)" with "displayname(Scale, Light, Copper (Build-your-own Body Armor)), needs(@hasmod("Armor Material: Copper, TL 1")), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:2/1 Locations: %Body Armor_alt2List% Notes:[4] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Scale, Medium, Copper (%Body Armor_1alias%)" with "displayname(Scale, Medium, Copper (Build-your-own Body Armor)), needs(@hasmod("Armor Material: Copper, TL 1")), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:3/2 Locations: %Body Armor_alt2List% Notes:[4] Second DR value vs. crushing.)"
#ReplaceTags in "EQ:Segmented Plate, Heavy, Copper (%Body Armor_1alias%)" with "displayname(Segmented Plate, Heavy, Copper (Build-your-own Body Armor)), needs(@hasmod("Armor Material: Copper, TL 1")), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:4 Locations: %Body Armor_alt2List%)"
#ReplaceTags in "EQ:Segmented Plate, Light, Copper (%Body Armor_1alias%)" with "displayname(Segmented Plate, Light, Copper (Build-your-own Body Armor)), needs(@hasmod("Armor Material: Copper, TL 1")), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:2 Locations: %Body Armor_alt2List%)"
#ReplaceTags in "EQ:Segmented Plate, Medium, Copper (%Body Armor_1alias%)" with "displayname(Segmented Plate, Medium, Copper (Build-your-own Body Armor)), needs(@hasmod("Armor Material: Copper, TL 1")), initmods(Armor Material: Copper (TL 1), +0 CF, gives(-1 to owner::dr), shortname(Copper), page(B109)), techlvl(1), description(TL:1 DR:3 Locations: %Body Armor_alt2List%)"

#Log blue "Low-tech armor from the Basic Set is incompatible with Low Tech and has been removed."
#Log red "If you are using armor from Low Tech, you should change to the 'Humanoid - Low Tech' body in the Body & Locations tab of the Protection dialog. If you make that change for the All Unassigned Items loadout, then future loadouts that you create will default to that body."
